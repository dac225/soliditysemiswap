{
	"id": "5533e7d3db86c34d93e39ebe448cabfa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Exchange.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Exchange {\n    ERC20 public erc20Token;\n    uint public totalLiquidityPositions;\n    uint public K; // Constant product\n    mapping(address => uint) public liquidityPositions; // hash map of addresses to their liquidity positions\n\n    constructor(address _erc20Address) {\n        erc20Token = ERC20(_erc20Address);\n    }\n\n    function provideLiquidity(uint _amountERC20Token) public payable returns (uint liquidity) {\n        require(msg.value > 0, \"Must input more than 0 ETH.\");\n        require(_amountERC20Token > 0, \"Must input more than 0 ERC20 Token.\");\n        uint ethBalanceBefore = address(this).balance - msg.value;\n        uint erc20BalanceBefore = erc20Token.balanceOf(address(this));\n\n        // Transfer ERC20 tokens from the user to the contract\n        bool sent = erc20Token.transferFrom(msg.sender, address(this), _amountERC20Token);\n        require(sent, \"ERC20 transfer failed\");\n\n        if (totalLiquidityPositions == 0) {\n            liquidity = 100; // if first time it will start with 100 liquidity\n        } else {\n            uint ethReserve = ethBalanceBefore;\n            uint tokenReserve = erc20BalanceBefore;\n            uint ethAmount = msg.value;\n            uint tokenAmount = _amountERC20Token;\n            \n            // Ensure that the ratio of ETH to ERC20 is maintained\n            require(ethReserve * tokenAmount == ethAmount * tokenReserve, \"Must maintain ETH/ERC20 ratio\");\n            \n            // Calculate liquidity based on the proportional amount of ETH deposited\n            liquidity = totalLiquidityPositions * ethAmount / ethReserve;\n        }\n        liquidityPositions[msg.sender] += liquidity;\n        totalLiquidityPositions += liquidity;\n\n        // Update K after liquidity is added, based on the new balances\n        K = (ethBalanceBefore + msg.value) * (erc20BalanceBefore + _amountERC20Token);\n\n        emit LiquidityProvided(msg.sender, _amountERC20Token, msg.value, liquidity); //will update the events in the log\n        return liquidity;\n    }\n\n    function estimateEthToProvide(uint _amountERC20Token) public view returns (uint amountEth) {\n        require(_amountERC20Token > 0, \"ERC20 token must be greater than 0.\");\n        uint contractEthBalance = address(this).balance;\n        uint contractERC20TokenBalance = erc20Token.balanceOf(address(this));\n        // Check if there's any ERC20 token balance in the contract to avoid division by zero\n        if (contractERC20TokenBalance == 0) {\n            return 0;\n        }\n        // Calculate the amount of Ether required to maintain the current ratio\n        amountEth = contractEthBalance * _amountERC20Token / contractERC20TokenBalance;\n        return amountEth;\n    }\n\n    function estimateERC20TokenToProvide(uint _amountEth) public view returns (uint amountERC20Token) {\n        require(_amountEth > 0, \"ETH must be greater than 0.\");\n        uint contractEthBalance = address(this).balance;\n        uint contractERC20TokenBalance = erc20Token.balanceOf(address(this));\n        if (contractEthBalance == 0) {\n            return 0;\n        }\n        // Calculate the amount of ERC20 tokens required to maintain the current ratio\n        amountERC20Token = contractERC20TokenBalance * _amountEth / contractEthBalance;\n        return amountERC20Token;\n    }\n\n\n    function getMyLiquidityPositions() external view returns (uint) {\n        return liquidityPositions[msg.sender];\n    }\n\n    function withdrawLiquidity(uint _liquidityPositionsToBurn) public {\n        require(_liquidityPositionsToBurn > 0, \"Cannot burn zero liquidity positions\");\n        require(liquidityPositions[msg.sender] >= _liquidityPositionsToBurn, \"Not enough liquidity positions to burn\");\n\n        uint contractEthBalance = address(this).balance;\n        uint contractERC20TokenBalance = erc20Token.balanceOf(address(this));\n\n        uint amountEthToSend = _liquidityPositionsToBurn * contractEthBalance / totalLiquidityPositions;\n        uint amountERC20ToSend = _liquidityPositionsToBurn * contractERC20TokenBalance / totalLiquidityPositions;\n\n        liquidityPositions[msg.sender] -= _liquidityPositionsToBurn;\n        totalLiquidityPositions -= _liquidityPositionsToBurn;\n\n        // Using transfer for ETH to send to the user\n        payable(msg.sender).transfer(amountEthToSend);\n\n        // ERC20 transfer to the user\n        require(erc20Token.transfer(msg.sender, amountERC20ToSend), \"Failed to send ERC20 tokens\");\n\n        // Update the K value after liquidity is removed\n        K = (contractEthBalance - amountEthToSend) * (contractERC20TokenBalance - amountERC20ToSend);\n\n        // Emitting the event with the amount of ERC20 tokens and Ether sent, and liquidity positions burned\n        emit LiquidityWithdrew(amountERC20ToSend, amountEthToSend, _liquidityPositionsToBurn);\n    }\n\n    function swapForEth(uint _amountERC20Token) public returns (uint ethToSend) {\n        uint contractEthBalance = address(this).balance;\n        uint contractERC20TokenBalance = erc20Token.balanceOf(address(this));\n\n        require(_amountERC20Token > 0, \"Must input more than 0 ERC20 Token.\");\n        require(contractERC20TokenBalance > 0, \"Insufficient liquidity.\");\n        \n        // Transfer ERC20 tokens from the user to the contract\n        require(erc20Token.transferFrom(msg.sender, address(this), _amountERC20Token), \"ERC20 transfer failed\");\n\n        // Calculate contractEthBalanceAfterSwap using the constant product formula\n        uint contractERC20TokenBalanceAfterSwap = contractERC20TokenBalance + _amountERC20Token;\n        uint contractEthBalanceAfterSwap = K / contractERC20TokenBalanceAfterSwap;\n        ethToSend = contractEthBalance - contractEthBalanceAfterSwap;\n\n        // Checks to prevent swaps that would result in no ETH sent to the user\n        require(ethToSend > 0 && ethToSend <= contractEthBalance, \"Invalid swap request\");\n\n        // Send ETH to the user\n        payable(msg.sender).transfer(ethToSend);\n\n        // Emit the event\n        emit SwapForEth(_amountERC20Token, ethToSend);\n\n        return ethToSend;\n    }\n\n    function estimateSwapForEth(uint _amountERC20Token) public view returns (uint ethToSend) {\n        require(_amountERC20Token > 0, \"Must input more than 0 ERC20 Token.\");\n        \n        uint contractEthBalance = address(this).balance;\n        uint contractERC20TokenBalance = erc20Token.balanceOf(address(this));\n        require(contractERC20TokenBalance > 0, \"Insufficient liquidity.\");\n\n        // Calculate contractEthBalanceAfterSwap using the constant product formula\n        uint contractERC20TokenBalanceAfterSwap = contractERC20TokenBalance + _amountERC20Token;\n        uint contractEthBalanceAfterSwap = K / contractERC20TokenBalanceAfterSwap;\n        ethToSend = contractEthBalance - contractEthBalanceAfterSwap;\n\n        // Checks to ensure the estimation doesn't suggest a swap that would result in no ETH sent\n        require(ethToSend > 0 && ethToSend <= contractEthBalance, \"Invalid swap estimate\");\n\n        return ethToSend;\n    }\n\n    function swapForERC20Token() public payable returns (uint ERC20TokenToSend) {\n        require(msg.value > 0, \"Must deposit more than 0 ETH.\");\n        uint contractEthBalanceBefore = address(this).balance - msg.value;\n        uint contractERC20TokenBalance = erc20Token.balanceOf(address(this));\n        uint contractERC20TokenBalanceAfterSwap = K / (contractEthBalanceBefore + msg.value);\n        ERC20TokenToSend = contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap;\n\n        // Transfer ERC20 tokens from the contract to the caller\n        require(erc20Token.transfer(msg.sender, ERC20TokenToSend), \"Failed to send ERC20 tokens\");\n\n        // Emit the event\n        emit SwapForERC20Token(ERC20TokenToSend, msg.value);\n\n        return ERC20TokenToSend;\n    }\n\n    function estimateSwapForERC20Token(uint _amountEth) public view returns (uint ERC20TokenToSend) {\n        require(_amountEth > 0, \"ETH amount must be greater than 0.\");\n        uint contractEthBalance = address(this).balance;\n        uint contractERC20TokenBalance = erc20Token.balanceOf(address(this));\n        uint contractERC20TokenBalanceAfterSwap = K / (contractEthBalance + _amountEth);\n        ERC20TokenToSend = contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap;\n\n        return ERC20TokenToSend;\n    }\n\n    //events\n    event LiquidityProvided(address provider, uint amountERC20TokenDeposited, uint amountEthDeposited, uint liquidityPositionsIssued);\n    event LiquidityWithdrew(uint amountERC20TokenWithdrew, uint amountEthWithdrew, uint liquidityPositionsBurned);\n    event SwapForEth(uint amountERC20TokenDeposited, uint amountEthWithdrew);\n    event SwapForERC20Token(uint amountERC20TokenWithdrew, uint amountEthDeposited);\n\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.19;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.19;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x30745a46aa78a205c91a028629a2878d6d6416c747e2a13041c68588d3053df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeaea07fc60676cc3e2d2df8d36dd550ba8fa0bb1395178a9b764ab4c049d8a3\",\"dweb:/ipfs/QmeDqVsPV63rJj2uNPfg7SG5Z1KNP6vNgBN1F78kEmz1Jg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x30745a46aa78a205c91a028629a2878d6d6416c747e2a13041c68588d3053df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeaea07fc60676cc3e2d2df8d36dd550ba8fa0bb1395178a9b764ab4c049d8a3\",\"dweb:/ipfs/QmeDqVsPV63rJj2uNPfg7SG5Z1KNP6vNgBN1F78kEmz1Jg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x30745a46aa78a205c91a028629a2878d6d6416c747e2a13041c68588d3053df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeaea07fc60676cc3e2d2df8d36dd550ba8fa0bb1395178a9b764ab4c049d8a3\",\"dweb:/ipfs/QmeDqVsPV63rJj2uNPfg7SG5Z1KNP6vNgBN1F78kEmz1Jg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x30745a46aa78a205c91a028629a2878d6d6416c747e2a13041c68588d3053df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeaea07fc60676cc3e2d2df8d36dd550ba8fa0bb1395178a9b764ab4c049d8a3\",\"dweb:/ipfs/QmeDqVsPV63rJj2uNPfg7SG5Z1KNP6vNgBN1F78kEmz1Jg\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4b66493cca45dc0ba9bdfb0a60970f9278c11da8de004339944ced80b86c55c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17bd597781651d2f92f83c60588ed3033665b9e99ba01b2ee64a9cc4f01833bb\",\"dweb:/ipfs/Qmc1BpbKFzwVY5GcTFcShbgebCZNqXAWMorfZPHs43TL2S\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xfc40fb05166e90621012a05da452eaa14315f16ccf51833fb9c824c40809b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c048116af61532acce61f77cdf6e1a4c0195e1d9d2f297c9016b4463e526163\",\"dweb:/ipfs/QmfZ3hZ21ur1ysZsKdXh53LJ3GNZF9CK2UFD8QnAPi4wAJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa1a93462fa05ab3ebbde01971ce1c6fb415761fbaab2710b70d0fbe1a53b0689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44fedd57d91bcaf205e97d8bc00ddbff05375e32a53bd30f7bfc49a629cc4439\",\"dweb:/ipfs/QmbBJN3zuGqmma6Bdij4AN5zHmgF7txVU1kzrU6rCyWvsW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xfc40fb05166e90621012a05da452eaa14315f16ccf51833fb9c824c40809b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c048116af61532acce61f77cdf6e1a4c0195e1d9d2f297c9016b4463e526163\",\"dweb:/ipfs/QmfZ3hZ21ur1ysZsKdXh53LJ3GNZF9CK2UFD8QnAPi4wAJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa1a93462fa05ab3ebbde01971ce1c6fb415761fbaab2710b70d0fbe1a53b0689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44fedd57d91bcaf205e97d8bc00ddbff05375e32a53bd30f7bfc49a629cc4439\",\"dweb:/ipfs/QmbBJN3zuGqmma6Bdij4AN5zHmgF7txVU1kzrU6rCyWvsW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Exchange.sol": {
				"Exchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc20Address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountERC20TokenDeposited",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEthDeposited",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityPositionsIssued",
									"type": "uint256"
								}
							],
							"name": "LiquidityProvided",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountERC20TokenWithdrew",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEthWithdrew",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityPositionsBurned",
									"type": "uint256"
								}
							],
							"name": "LiquidityWithdrew",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountERC20TokenWithdrew",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEthDeposited",
									"type": "uint256"
								}
							],
							"name": "SwapForERC20Token",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountERC20TokenDeposited",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEthWithdrew",
									"type": "uint256"
								}
							],
							"name": "SwapForEth",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "K",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20Token",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountEth",
									"type": "uint256"
								}
							],
							"name": "estimateERC20TokenToProvide",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountERC20Token",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountERC20Token",
									"type": "uint256"
								}
							],
							"name": "estimateEthToProvide",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountEth",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountEth",
									"type": "uint256"
								}
							],
							"name": "estimateSwapForERC20Token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ERC20TokenToSend",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountERC20Token",
									"type": "uint256"
								}
							],
							"name": "estimateSwapForEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ethToSend",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyLiquidityPositions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityPositions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountERC20Token",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapForERC20Token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ERC20TokenToSend",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountERC20Token",
									"type": "uint256"
								}
							],
							"name": "swapForEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ethToSend",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLiquidityPositions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_liquidityPositionsToBurn",
									"type": "uint256"
								}
							],
							"name": "withdrawLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Exchange.sol\":121:8885  contract Exchange {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Exchange.sol\":365:450  constructor(address _erc20Address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Exchange.sol\":429:442  _erc20Address */\n  dup1\n    /* \"contracts/Exchange.sol\":410:420  erc20Token */\n  0x00\n  dup1\n    /* \"contracts/Exchange.sol\":410:443  erc20Token = ERC20(_erc20Address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Exchange.sol\":365:450  constructor(address _erc20Address) {... */\n  pop\n    /* \"contracts/Exchange.sol\":121:8885  contract Exchange {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Exchange.sol\":121:8885  contract Exchange {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Exchange.sol\":121:8885  contract Exchange {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8a13eea7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xc8ab8325\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc8ab8325\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe0ba2000\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xeb521a4c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xed7bf868\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x8a13eea7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x903875f7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa932492f\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_15:\n      dup1\n      0x0a861f2a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1cde6226\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x240f3dea\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x29cbab3e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6fd0ea92\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x79ed3562\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Exchange.sol\":3548:4931  function withdrawLiquidity(uint _liquidityPositionsToBurn) public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Exchange.sol\":174:209  uint public totalLiquidityPositions */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":2150:2828  function estimateEthToProvide(uint _amountERC20Token) public view returns (uint amountEth) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":7153:7926  function swapForERC20Token() public payable returns (uint ERC20TokenToSend) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":254:304  mapping(address => uint) public liquidityPositions */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":7932:8455  function estimateSwapForERC20Token(uint _amountEth) public view returns (uint ERC20TokenToSend) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":145:168  ERC20 public erc20Token */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":6199:7147  function estimateSwapForEth(uint _amountERC20Token) public view returns (uint ethToSend) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":215:228  uint public K */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":4937:6193  function swapForEth(uint _amountERC20Token) public returns (uint ethToSend) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":3424:3542  function getMyLiquidityPositions() external view returns (uint) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":456:2144  function provideLiquidity(uint _amountERC20Token) public payable returns (uint liquidity) {... */\n    tag_13:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":2834:3417  function estimateERC20TokenToProvide(uint _amountEth) public view returns (uint amountERC20Token) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":3548:4931  function withdrawLiquidity(uint _liquidityPositionsToBurn) public {... */\n    tag_21:\n        /* \"contracts/Exchange.sol\":3660:3661  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":3632:3657  _liquidityPositionsToBurn */\n      dup2\n        /* \"contracts/Exchange.sol\":3632:3661  _liquidityPositionsToBurn > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":3624:3702  require(_liquidityPositionsToBurn > 0, \"Cannot burn zero liquidity positions\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/Exchange.sol\":3754:3779  _liquidityPositionsToBurn */\n      dup1\n        /* \"contracts/Exchange.sol\":3720:3738  liquidityPositions */\n      0x03\n        /* \"contracts/Exchange.sol\":3720:3750  liquidityPositions[msg.sender] */\n      0x00\n        /* \"contracts/Exchange.sol\":3739:3749  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":3720:3750  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Exchange.sol\":3720:3779  liquidityPositions[msg.sender] >= _liquidityPositionsToBurn */\n      lt\n      iszero\n        /* \"contracts/Exchange.sol\":3712:3822  require(liquidityPositions[msg.sender] >= _liquidityPositionsToBurn, \"Not enough liquidity positions to burn\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"contracts/Exchange.sol\":3833:3856  uint contractEthBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":3859:3880  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":3833:3880  uint contractEthBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":3890:3920  uint contractERC20TokenBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":3923:3933  erc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":3923:3943  erc20Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Exchange.sol\":3952:3956  this */\n      address\n        /* \"contracts/Exchange.sol\":3923:3958  erc20Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/Exchange.sol\":3890:3958  uint contractERC20TokenBalance = erc20Token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":3969:3989  uint amountEthToSend */\n      0x00\n        /* \"contracts/Exchange.sol\":4041:4064  totalLiquidityPositions */\n      sload(0x01)\n        /* \"contracts/Exchange.sol\":4020:4038  contractEthBalance */\n      dup4\n        /* \"contracts/Exchange.sol\":3992:4017  _liquidityPositionsToBurn */\n      dup6\n        /* \"contracts/Exchange.sol\":3992:4038  _liquidityPositionsToBurn * contractEthBalance */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"contracts/Exchange.sol\":3992:4064  _liquidityPositionsToBurn * contractEthBalance / totalLiquidityPositions */\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/Exchange.sol\":3969:4064  uint amountEthToSend = _liquidityPositionsToBurn * contractEthBalance / totalLiquidityPositions */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":4074:4096  uint amountERC20ToSend */\n      0x00\n        /* \"contracts/Exchange.sol\":4155:4178  totalLiquidityPositions */\n      sload(0x01)\n        /* \"contracts/Exchange.sol\":4127:4152  contractERC20TokenBalance */\n      dup4\n        /* \"contracts/Exchange.sol\":4099:4124  _liquidityPositionsToBurn */\n      dup7\n        /* \"contracts/Exchange.sol\":4099:4152  _liquidityPositionsToBurn * contractERC20TokenBalance */\n      tag_95\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_95:\n        /* \"contracts/Exchange.sol\":4099:4178  _liquidityPositionsToBurn * contractERC20TokenBalance / totalLiquidityPositions */\n      tag_96\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_96:\n        /* \"contracts/Exchange.sol\":4074:4178  uint amountERC20ToSend = _liquidityPositionsToBurn * contractERC20TokenBalance / totalLiquidityPositions */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":4223:4248  _liquidityPositionsToBurn */\n      dup5\n        /* \"contracts/Exchange.sol\":4189:4207  liquidityPositions */\n      0x03\n        /* \"contracts/Exchange.sol\":4189:4219  liquidityPositions[msg.sender] */\n      0x00\n        /* \"contracts/Exchange.sol\":4208:4218  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":4189:4219  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Exchange.sol\":4189:4248  liquidityPositions[msg.sender] -= _liquidityPositionsToBurn */\n      dup3\n      dup3\n      sload\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Exchange.sol\":4285:4310  _liquidityPositionsToBurn */\n      dup5\n        /* \"contracts/Exchange.sol\":4258:4281  totalLiquidityPositions */\n      0x01\n      0x00\n        /* \"contracts/Exchange.sol\":4258:4310  totalLiquidityPositions -= _liquidityPositionsToBurn */\n      dup3\n      dup3\n      sload\n      tag_99\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Exchange.sol\":4383:4393  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":4375:4403  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":4375:4420  payable(msg.sender).transfer(amountEthToSend) */\n      0x08fc\n        /* \"contracts/Exchange.sol\":4404:4419  amountEthToSend */\n      dup4\n        /* \"contracts/Exchange.sol\":4375:4420  payable(msg.sender).transfer(amountEthToSend) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n        /* \"contracts/Exchange.sol\":4477:4487  erc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":4477:4496  erc20Token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Exchange.sol\":4497:4507  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":4509:4526  amountERC20ToSend */\n      dup4\n        /* \"contracts/Exchange.sol\":4477:4527  erc20Token.transfer(msg.sender, amountERC20ToSend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/Exchange.sol\":4469:4559  require(erc20Token.transfer(msg.sender, amountERC20ToSend), \"Failed to send ERC20 tokens\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/Exchange.sol\":4701:4718  amountERC20ToSend */\n      dup1\n        /* \"contracts/Exchange.sol\":4673:4698  contractERC20TokenBalance */\n      dup4\n        /* \"contracts/Exchange.sol\":4673:4718  contractERC20TokenBalance - amountERC20ToSend */\n      tag_111\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_111:\n        /* \"contracts/Exchange.sol\":4653:4668  amountEthToSend */\n      dup3\n        /* \"contracts/Exchange.sol\":4632:4650  contractEthBalance */\n      dup6\n        /* \"contracts/Exchange.sol\":4632:4668  contractEthBalance - amountEthToSend */\n      tag_112\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_112:\n        /* \"contracts/Exchange.sol\":4631:4719  (contractEthBalance - amountEthToSend) * (contractERC20TokenBalance - amountERC20ToSend) */\n      tag_113\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_113:\n        /* \"contracts/Exchange.sol\":4627:4628  K */\n      0x02\n        /* \"contracts/Exchange.sol\":4627:4719  K = (contractEthBalance - amountEthToSend) * (contractERC20TokenBalance - amountERC20ToSend) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Exchange.sol\":4844:4924  LiquidityWithdrew(amountERC20ToSend, amountEthToSend, _liquidityPositionsToBurn) */\n      0xb14f451e613015c13a17c78777f1d87fcb448d7330d67299a09b8f2db38aab10\n        /* \"contracts/Exchange.sol\":4862:4879  amountERC20ToSend */\n      dup2\n        /* \"contracts/Exchange.sol\":4881:4896  amountEthToSend */\n      dup4\n        /* \"contracts/Exchange.sol\":4898:4923  _liquidityPositionsToBurn */\n      dup8\n        /* \"contracts/Exchange.sol\":4844:4924  LiquidityWithdrew(amountERC20ToSend, amountEthToSend, _liquidityPositionsToBurn) */\n      mload(0x40)\n      tag_114\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Exchange.sol\":3614:4931  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":3548:4931  function withdrawLiquidity(uint _liquidityPositionsToBurn) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":174:209  uint public totalLiquidityPositions */\n    tag_24:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Exchange.sol\":2150:2828  function estimateEthToProvide(uint _amountERC20Token) public view returns (uint amountEth) {... */\n    tag_30:\n        /* \"contracts/Exchange.sol\":2225:2239  uint amountEth */\n      0x00\n        /* \"contracts/Exchange.sol\":2279:2280  0 */\n      dup1\n        /* \"contracts/Exchange.sol\":2259:2276  _amountERC20Token */\n      dup3\n        /* \"contracts/Exchange.sol\":2259:2280  _amountERC20Token > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":2251:2320  require(_amountERC20Token > 0, \"ERC20 token must be greater than 0.\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/Exchange.sol\":2330:2353  uint contractEthBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":2356:2377  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":2330:2377  uint contractEthBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":2387:2417  uint contractERC20TokenBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":2420:2430  erc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":2420:2440  erc20Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Exchange.sol\":2449:2453  this */\n      address\n        /* \"contracts/Exchange.sol\":2420:2455  erc20Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_123:\n        /* \"contracts/Exchange.sol\":2387:2455  uint contractERC20TokenBalance = erc20Token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":2592:2593  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":2563:2588  contractERC20TokenBalance */\n      dup2\n        /* \"contracts/Exchange.sol\":2563:2593  contractERC20TokenBalance == 0 */\n      sub\n        /* \"contracts/Exchange.sol\":2559:2628  if (contractERC20TokenBalance == 0) {... */\n      tag_124\n      jumpi\n        /* \"contracts/Exchange.sol\":2616:2617  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":2609:2617  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_116)\n        /* \"contracts/Exchange.sol\":2559:2628  if (contractERC20TokenBalance == 0) {... */\n    tag_124:\n        /* \"contracts/Exchange.sol\":2770:2795  contractERC20TokenBalance */\n      dup1\n        /* \"contracts/Exchange.sol\":2750:2767  _amountERC20Token */\n      dup5\n        /* \"contracts/Exchange.sol\":2729:2747  contractEthBalance */\n      dup4\n        /* \"contracts/Exchange.sol\":2729:2767  contractEthBalance * _amountERC20Token */\n      tag_125\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_125:\n        /* \"contracts/Exchange.sol\":2729:2795  contractEthBalance * _amountERC20Token / contractERC20TokenBalance */\n      tag_126\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_126:\n        /* \"contracts/Exchange.sol\":2717:2795  amountEth = contractEthBalance * _amountERC20Token / contractERC20TokenBalance */\n      swap3\n      pop\n        /* \"contracts/Exchange.sol\":2805:2821  return amountEth */\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":2150:2828  function estimateEthToProvide(uint _amountERC20Token) public view returns (uint amountEth) {... */\n    tag_116:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":7153:7926  function swapForERC20Token() public payable returns (uint ERC20TokenToSend) {... */\n    tag_33:\n        /* \"contracts/Exchange.sol\":7206:7227  uint ERC20TokenToSend */\n      0x00\n        /* \"contracts/Exchange.sol\":7259:7260  0 */\n      dup1\n        /* \"contracts/Exchange.sol\":7247:7256  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":7247:7260  msg.value > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":7239:7294  require(msg.value > 0, \"Must deposit more than 0 ETH.\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/Exchange.sol\":7304:7333  uint contractEthBalanceBefore */\n      0x00\n        /* \"contracts/Exchange.sol\":7360:7369  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":7336:7357  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":7336:7369  address(this).balance - msg.value */\n      tag_131\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_131:\n        /* \"contracts/Exchange.sol\":7304:7369  uint contractEthBalanceBefore = address(this).balance - msg.value */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":7379:7409  uint contractERC20TokenBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":7412:7422  erc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":7412:7432  erc20Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Exchange.sol\":7441:7445  this */\n      address\n        /* \"contracts/Exchange.sol\":7412:7447  erc20Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_135:\n        /* \"contracts/Exchange.sol\":7379:7447  uint contractERC20TokenBalance = erc20Token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":7457:7496  uint contractERC20TokenBalanceAfterSwap */\n      0x00\n        /* \"contracts/Exchange.sol\":7531:7540  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":7504:7528  contractEthBalanceBefore */\n      dup4\n        /* \"contracts/Exchange.sol\":7504:7540  contractEthBalanceBefore + msg.value */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/Exchange.sol\":7499:7500  K */\n      sload(0x02)\n        /* \"contracts/Exchange.sol\":7499:7541  K / (contractEthBalanceBefore + msg.value) */\n      tag_138\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_138:\n        /* \"contracts/Exchange.sol\":7457:7541  uint contractERC20TokenBalanceAfterSwap = K / (contractEthBalanceBefore + msg.value) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":7598:7632  contractERC20TokenBalanceAfterSwap */\n      dup1\n        /* \"contracts/Exchange.sol\":7570:7595  contractERC20TokenBalance */\n      dup3\n        /* \"contracts/Exchange.sol\":7570:7632  contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap */\n      tag_139\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_139:\n        /* \"contracts/Exchange.sol\":7551:7632  ERC20TokenToSend = contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap */\n      swap4\n      pop\n        /* \"contracts/Exchange.sol\":7716:7726  erc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":7716:7735  erc20Token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Exchange.sol\":7736:7746  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":7748:7764  ERC20TokenToSend */\n      dup7\n        /* \"contracts/Exchange.sol\":7716:7765  erc20Token.transfer(msg.sender, ERC20TokenToSend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_140:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_143:\n        /* \"contracts/Exchange.sol\":7708:7797  require(erc20Token.transfer(msg.sender, ERC20TokenToSend), \"Failed to send ERC20 tokens\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_110\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/Exchange.sol\":7839:7885  SwapForERC20Token(ERC20TokenToSend, msg.value) */\n      0xcdfc57b3d0cdc24b23cea1f480aabea287321f5bee23ad76c2b52fa7982f5ea5\n        /* \"contracts/Exchange.sol\":7857:7873  ERC20TokenToSend */\n      dup5\n        /* \"contracts/Exchange.sol\":7875:7884  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":7839:7885  SwapForERC20Token(ERC20TokenToSend, msg.value) */\n      mload(0x40)\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Exchange.sol\":7896:7919  return ERC20TokenToSend */\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":7153:7926  function swapForERC20Token() public payable returns (uint ERC20TokenToSend) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Exchange.sol\":254:304  mapping(address => uint) public liquidityPositions */\n    tag_39:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Exchange.sol\":7932:8455  function estimateSwapForERC20Token(uint _amountEth) public view returns (uint ERC20TokenToSend) {... */\n    tag_44:\n        /* \"contracts/Exchange.sol\":8005:8026  uint ERC20TokenToSend */\n      0x00\n        /* \"contracts/Exchange.sol\":8059:8060  0 */\n      dup1\n        /* \"contracts/Exchange.sol\":8046:8056  _amountEth */\n      dup3\n        /* \"contracts/Exchange.sol\":8046:8060  _amountEth > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":8038:8099  require(_amountEth > 0, \"ETH amount must be greater than 0.\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/Exchange.sol\":8109:8132  uint contractEthBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":8135:8156  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":8109:8156  uint contractEthBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":8166:8196  uint contractERC20TokenBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":8199:8209  erc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":8199:8219  erc20Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Exchange.sol\":8228:8232  this */\n      address\n        /* \"contracts/Exchange.sol\":8199:8234  erc20Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_152:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_155:\n        /* \"contracts/Exchange.sol\":8166:8234  uint contractERC20TokenBalance = erc20Token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":8244:8283  uint contractERC20TokenBalanceAfterSwap */\n      0x00\n        /* \"contracts/Exchange.sol\":8312:8322  _amountEth */\n      dup5\n        /* \"contracts/Exchange.sol\":8291:8309  contractEthBalance */\n      dup4\n        /* \"contracts/Exchange.sol\":8291:8322  contractEthBalance + _amountEth */\n      tag_156\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_156:\n        /* \"contracts/Exchange.sol\":8286:8287  K */\n      sload(0x02)\n        /* \"contracts/Exchange.sol\":8286:8323  K / (contractEthBalance + _amountEth) */\n      tag_157\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_157:\n        /* \"contracts/Exchange.sol\":8244:8323  uint contractERC20TokenBalanceAfterSwap = K / (contractEthBalance + _amountEth) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":8380:8414  contractERC20TokenBalanceAfterSwap */\n      dup1\n        /* \"contracts/Exchange.sol\":8352:8377  contractERC20TokenBalance */\n      dup3\n        /* \"contracts/Exchange.sol\":8352:8414  contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap */\n      tag_158\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_158:\n        /* \"contracts/Exchange.sol\":8333:8414  ERC20TokenToSend = contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap */\n      swap4\n      pop\n        /* \"contracts/Exchange.sol\":8425:8448  return ERC20TokenToSend */\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":7932:8455  function estimateSwapForERC20Token(uint _amountEth) public view returns (uint ERC20TokenToSend) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":145:168  ERC20 public erc20Token */\n    tag_48:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Exchange.sol\":6199:7147  function estimateSwapForEth(uint _amountERC20Token) public view returns (uint ethToSend) {... */\n    tag_54:\n        /* \"contracts/Exchange.sol\":6272:6286  uint ethToSend */\n      0x00\n        /* \"contracts/Exchange.sol\":6326:6327  0 */\n      dup1\n        /* \"contracts/Exchange.sol\":6306:6323  _amountERC20Token */\n      dup3\n        /* \"contracts/Exchange.sol\":6306:6327  _amountERC20Token > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":6298:6367  require(_amountERC20Token > 0, \"Must input more than 0 ERC20 Token.\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/Exchange.sol\":6386:6409  uint contractEthBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":6412:6433  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":6386:6433  uint contractEthBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":6443:6473  uint contractERC20TokenBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":6476:6486  erc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":6476:6496  erc20Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Exchange.sol\":6505:6509  this */\n      address\n        /* \"contracts/Exchange.sol\":6476:6511  erc20Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_163:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_166:\n        /* \"contracts/Exchange.sol\":6443:6511  uint contractERC20TokenBalance = erc20Token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":6557:6558  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":6529:6554  contractERC20TokenBalance */\n      dup2\n        /* \"contracts/Exchange.sol\":6529:6558  contractERC20TokenBalance > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":6521:6586  require(contractERC20TokenBalance > 0, \"Insufficient liquidity.\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/Exchange.sol\":6681:6720  uint contractERC20TokenBalanceAfterSwap */\n      0x00\n        /* \"contracts/Exchange.sol\":6751:6768  _amountERC20Token */\n      dup5\n        /* \"contracts/Exchange.sol\":6723:6748  contractERC20TokenBalance */\n      dup3\n        /* \"contracts/Exchange.sol\":6723:6768  contractERC20TokenBalance + _amountERC20Token */\n      tag_170\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_170:\n        /* \"contracts/Exchange.sol\":6681:6768  uint contractERC20TokenBalanceAfterSwap = contractERC20TokenBalance + _amountERC20Token */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":6778:6810  uint contractEthBalanceAfterSwap */\n      0x00\n        /* \"contracts/Exchange.sol\":6817:6851  contractERC20TokenBalanceAfterSwap */\n      dup2\n        /* \"contracts/Exchange.sol\":6813:6814  K */\n      sload(0x02)\n        /* \"contracts/Exchange.sol\":6813:6851  K / contractERC20TokenBalanceAfterSwap */\n      tag_171\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_171:\n        /* \"contracts/Exchange.sol\":6778:6851  uint contractEthBalanceAfterSwap = K / contractERC20TokenBalanceAfterSwap */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":6894:6921  contractEthBalanceAfterSwap */\n      dup1\n        /* \"contracts/Exchange.sol\":6873:6891  contractEthBalance */\n      dup5\n        /* \"contracts/Exchange.sol\":6873:6921  contractEthBalance - contractEthBalanceAfterSwap */\n      tag_172\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_172:\n        /* \"contracts/Exchange.sol\":6861:6921  ethToSend = contractEthBalance - contractEthBalanceAfterSwap */\n      swap5\n      pop\n        /* \"contracts/Exchange.sol\":7051:7052  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":7039:7048  ethToSend */\n      dup6\n        /* \"contracts/Exchange.sol\":7039:7052  ethToSend > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":7039:7087  ethToSend > 0 && ethToSend <= contractEthBalance */\n      dup1\n      iszero\n      tag_173\n      jumpi\n      pop\n        /* \"contracts/Exchange.sol\":7069:7087  contractEthBalance */\n      dup4\n        /* \"contracts/Exchange.sol\":7056:7065  ethToSend */\n      dup6\n        /* \"contracts/Exchange.sol\":7056:7087  ethToSend <= contractEthBalance */\n      gt\n      iszero\n        /* \"contracts/Exchange.sol\":7039:7087  ethToSend > 0 && ethToSend <= contractEthBalance */\n    tag_173:\n        /* \"contracts/Exchange.sol\":7031:7113  require(ethToSend > 0 && ethToSend <= contractEthBalance, \"Invalid swap estimate\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/Exchange.sol\":7124:7140  return ethToSend */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":6199:7147  function estimateSwapForEth(uint _amountERC20Token) public view returns (uint ethToSend) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":215:228  uint public K */\n    tag_58:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Exchange.sol\":4937:6193  function swapForEth(uint _amountERC20Token) public returns (uint ethToSend) {... */\n    tag_63:\n        /* \"contracts/Exchange.sol\":4997:5011  uint ethToSend */\n      0x00\n        /* \"contracts/Exchange.sol\":5023:5046  uint contractEthBalance */\n      dup1\n        /* \"contracts/Exchange.sol\":5049:5070  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":5023:5070  uint contractEthBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":5080:5110  uint contractERC20TokenBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":5113:5123  erc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":5113:5133  erc20Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Exchange.sol\":5142:5146  this */\n      address\n        /* \"contracts/Exchange.sol\":5113:5148  erc20Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_178:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_181:\n        /* \"contracts/Exchange.sol\":5080:5148  uint contractERC20TokenBalance = erc20Token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":5187:5188  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":5167:5184  _amountERC20Token */\n      dup5\n        /* \"contracts/Exchange.sol\":5167:5188  _amountERC20Token > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":5159:5228  require(_amountERC20Token > 0, \"Must input more than 0 ERC20 Token.\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_162\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/Exchange.sol\":5274:5275  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":5246:5271  contractERC20TokenBalance */\n      dup2\n        /* \"contracts/Exchange.sol\":5246:5275  contractERC20TokenBalance > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":5238:5303  require(contractERC20TokenBalance > 0, \"Insufficient liquidity.\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_169\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/Exchange.sol\":5393:5403  erc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":5393:5416  erc20Token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Exchange.sol\":5417:5427  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":5437:5441  this */\n      address\n        /* \"contracts/Exchange.sol\":5444:5461  _amountERC20Token */\n      dup8\n        /* \"contracts/Exchange.sol\":5393:5462  erc20Token.transferFrom(msg.sender, address(this), _amountERC20Token) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_190:\n        /* \"contracts/Exchange.sol\":5385:5488  require(erc20Token.transferFrom(msg.sender, address(this), _amountERC20Token), \"ERC20 transfer failed\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/Exchange.sol\":5583:5622  uint contractERC20TokenBalanceAfterSwap */\n      0x00\n        /* \"contracts/Exchange.sol\":5653:5670  _amountERC20Token */\n      dup5\n        /* \"contracts/Exchange.sol\":5625:5650  contractERC20TokenBalance */\n      dup3\n        /* \"contracts/Exchange.sol\":5625:5670  contractERC20TokenBalance + _amountERC20Token */\n      tag_194\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_194:\n        /* \"contracts/Exchange.sol\":5583:5670  uint contractERC20TokenBalanceAfterSwap = contractERC20TokenBalance + _amountERC20Token */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":5680:5712  uint contractEthBalanceAfterSwap */\n      0x00\n        /* \"contracts/Exchange.sol\":5719:5753  contractERC20TokenBalanceAfterSwap */\n      dup2\n        /* \"contracts/Exchange.sol\":5715:5716  K */\n      sload(0x02)\n        /* \"contracts/Exchange.sol\":5715:5753  K / contractERC20TokenBalanceAfterSwap */\n      tag_195\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_195:\n        /* \"contracts/Exchange.sol\":5680:5753  uint contractEthBalanceAfterSwap = K / contractERC20TokenBalanceAfterSwap */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":5796:5823  contractEthBalanceAfterSwap */\n      dup1\n        /* \"contracts/Exchange.sol\":5775:5793  contractEthBalance */\n      dup5\n        /* \"contracts/Exchange.sol\":5775:5823  contractEthBalance - contractEthBalanceAfterSwap */\n      tag_196\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_196:\n        /* \"contracts/Exchange.sol\":5763:5823  ethToSend = contractEthBalance - contractEthBalanceAfterSwap */\n      swap5\n      pop\n        /* \"contracts/Exchange.sol\":5934:5935  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":5922:5931  ethToSend */\n      dup6\n        /* \"contracts/Exchange.sol\":5922:5935  ethToSend > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":5922:5970  ethToSend > 0 && ethToSend <= contractEthBalance */\n      dup1\n      iszero\n      tag_197\n      jumpi\n      pop\n        /* \"contracts/Exchange.sol\":5952:5970  contractEthBalance */\n      dup4\n        /* \"contracts/Exchange.sol\":5939:5948  ethToSend */\n      dup6\n        /* \"contracts/Exchange.sol\":5939:5970  ethToSend <= contractEthBalance */\n      gt\n      iszero\n        /* \"contracts/Exchange.sol\":5922:5970  ethToSend > 0 && ethToSend <= contractEthBalance */\n    tag_197:\n        /* \"contracts/Exchange.sol\":5914:5995  require(ethToSend > 0 && ethToSend <= contractEthBalance, \"Invalid swap request\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/Exchange.sol\":6046:6056  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":6038:6066  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":6038:6077  payable(msg.sender).transfer(ethToSend) */\n      0x08fc\n        /* \"contracts/Exchange.sol\":6067:6076  ethToSend */\n      dup7\n        /* \"contracts/Exchange.sol\":6038:6077  payable(msg.sender).transfer(ethToSend) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_202:\n      pop\n        /* \"contracts/Exchange.sol\":6119:6159  SwapForEth(_amountERC20Token, ethToSend) */\n      0x3297a389bb586920e62a196af529d5f42651b17a1013d6bfe77f22372a0b2112\n        /* \"contracts/Exchange.sol\":6130:6147  _amountERC20Token */\n      dup7\n        /* \"contracts/Exchange.sol\":6149:6158  ethToSend */\n      dup7\n        /* \"contracts/Exchange.sol\":6119:6159  SwapForEth(_amountERC20Token, ethToSend) */\n      mload(0x40)\n      tag_203\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Exchange.sol\":6170:6186  return ethToSend */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":4937:6193  function swapForEth(uint _amountERC20Token) public returns (uint ethToSend) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":3424:3542  function getMyLiquidityPositions() external view returns (uint) {... */\n    tag_67:\n        /* \"contracts/Exchange.sol\":3482:3486  uint */\n      0x00\n        /* \"contracts/Exchange.sol\":3505:3523  liquidityPositions */\n      0x03\n        /* \"contracts/Exchange.sol\":3505:3535  liquidityPositions[msg.sender] */\n      0x00\n        /* \"contracts/Exchange.sol\":3524:3534  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":3505:3535  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Exchange.sol\":3498:3535  return liquidityPositions[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":3424:3542  function getMyLiquidityPositions() external view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Exchange.sol\":456:2144  function provideLiquidity(uint _amountERC20Token) public payable returns (uint liquidity) {... */\n    tag_71:\n        /* \"contracts/Exchange.sol\":530:544  uint liquidity */\n      0x00\n        /* \"contracts/Exchange.sol\":576:577  0 */\n      dup1\n        /* \"contracts/Exchange.sol\":564:573  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":564:577  msg.value > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":556:609  require(msg.value > 0, \"Must input more than 0 ETH.\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/Exchange.sol\":647:648  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":627:644  _amountERC20Token */\n      dup3\n        /* \"contracts/Exchange.sol\":627:648  _amountERC20Token > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":619:688  require(_amountERC20Token > 0, \"Must input more than 0 ERC20 Token.\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_162\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/Exchange.sol\":698:719  uint ethBalanceBefore */\n      0x00\n        /* \"contracts/Exchange.sol\":746:755  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":722:743  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":722:755  address(this).balance - msg.value */\n      tag_211\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_211:\n        /* \"contracts/Exchange.sol\":698:755  uint ethBalanceBefore = address(this).balance - msg.value */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":765:788  uint erc20BalanceBefore */\n      0x00\n        /* \"contracts/Exchange.sol\":791:801  erc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":791:811  erc20Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Exchange.sol\":820:824  this */\n      address\n        /* \"contracts/Exchange.sol\":791:826  erc20Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_212:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_215:\n        /* \"contracts/Exchange.sol\":765:826  uint erc20BalanceBefore = erc20Token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":900:909  bool sent */\n      0x00\n        /* \"contracts/Exchange.sol\":912:922  erc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":912:935  erc20Token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Exchange.sol\":936:946  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":956:960  this */\n      address\n        /* \"contracts/Exchange.sol\":963:980  _amountERC20Token */\n      dup9\n        /* \"contracts/Exchange.sol\":912:981  erc20Token.transferFrom(msg.sender, address(this), _amountERC20Token) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_219:\n        /* \"contracts/Exchange.sol\":900:981  bool sent = erc20Token.transferFrom(msg.sender, address(this), _amountERC20Token) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":999:1003  sent */\n      dup1\n        /* \"contracts/Exchange.sol\":991:1029  require(sent, \"ERC20 transfer failed\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_193\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"contracts/Exchange.sol\":1071:1072  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":1044:1067  totalLiquidityPositions */\n      sload(0x01)\n        /* \"contracts/Exchange.sol\":1044:1072  totalLiquidityPositions == 0 */\n      sub\n        /* \"contracts/Exchange.sol\":1040:1731  if (totalLiquidityPositions == 0) {... */\n      tag_222\n      jumpi\n        /* \"contracts/Exchange.sol\":1100:1103  100 */\n      0x64\n        /* \"contracts/Exchange.sol\":1088:1103  liquidity = 100 */\n      swap4\n      pop\n        /* \"contracts/Exchange.sol\":1040:1731  if (totalLiquidityPositions == 0) {... */\n      jump(tag_223)\n    tag_222:\n        /* \"contracts/Exchange.sol\":1184:1199  uint ethReserve */\n      0x00\n        /* \"contracts/Exchange.sol\":1202:1218  ethBalanceBefore */\n      dup4\n        /* \"contracts/Exchange.sol\":1184:1218  uint ethReserve = ethBalanceBefore */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1232:1249  uint tokenReserve */\n      0x00\n        /* \"contracts/Exchange.sol\":1252:1270  erc20BalanceBefore */\n      dup4\n        /* \"contracts/Exchange.sol\":1232:1270  uint tokenReserve = erc20BalanceBefore */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1284:1298  uint ethAmount */\n      0x00\n        /* \"contracts/Exchange.sol\":1301:1310  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":1284:1310  uint ethAmount = msg.value */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1324:1340  uint tokenAmount */\n      0x00\n        /* \"contracts/Exchange.sol\":1343:1360  _amountERC20Token */\n      dup9\n        /* \"contracts/Exchange.sol\":1324:1360  uint tokenAmount = _amountERC20Token */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1502:1514  tokenReserve */\n      dup3\n        /* \"contracts/Exchange.sol\":1490:1499  ethAmount */\n      dup3\n        /* \"contracts/Exchange.sol\":1490:1514  ethAmount * tokenReserve */\n      tag_224\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_224:\n        /* \"contracts/Exchange.sol\":1475:1486  tokenAmount */\n      dup2\n        /* \"contracts/Exchange.sol\":1462:1472  ethReserve */\n      dup6\n        /* \"contracts/Exchange.sol\":1462:1486  ethReserve * tokenAmount */\n      tag_225\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_225:\n        /* \"contracts/Exchange.sol\":1462:1514  ethReserve * tokenAmount == ethAmount * tokenReserve */\n      eq\n        /* \"contracts/Exchange.sol\":1454:1548  require(ethReserve * tokenAmount == ethAmount * tokenReserve, \"Must maintain ETH/ERC20 ratio\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/Exchange.sol\":1710:1720  ethReserve */\n      dup4\n        /* \"contracts/Exchange.sol\":1698:1707  ethAmount */\n      dup3\n        /* \"contracts/Exchange.sol\":1672:1695  totalLiquidityPositions */\n      sload(0x01)\n        /* \"contracts/Exchange.sol\":1672:1707  totalLiquidityPositions * ethAmount */\n      tag_229\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_229:\n        /* \"contracts/Exchange.sol\":1672:1720  totalLiquidityPositions * ethAmount / ethReserve */\n      tag_230\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_230:\n        /* \"contracts/Exchange.sol\":1660:1720  liquidity = totalLiquidityPositions * ethAmount / ethReserve */\n      swap8\n      pop\n        /* \"contracts/Exchange.sol\":1170:1731  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":1040:1731  if (totalLiquidityPositions == 0) {... */\n    tag_223:\n        /* \"contracts/Exchange.sol\":1774:1783  liquidity */\n      dup4\n        /* \"contracts/Exchange.sol\":1740:1758  liquidityPositions */\n      0x03\n        /* \"contracts/Exchange.sol\":1740:1770  liquidityPositions[msg.sender] */\n      0x00\n        /* \"contracts/Exchange.sol\":1759:1769  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":1740:1770  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Exchange.sol\":1740:1783  liquidityPositions[msg.sender] += liquidity */\n      dup3\n      dup3\n      sload\n      tag_231\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_231:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Exchange.sol\":1820:1829  liquidity */\n      dup4\n        /* \"contracts/Exchange.sol\":1793:1816  totalLiquidityPositions */\n      0x01\n      0x00\n        /* \"contracts/Exchange.sol\":1793:1829  totalLiquidityPositions += liquidity */\n      dup3\n      dup3\n      sload\n      tag_232\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_232:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Exchange.sol\":1971:1988  _amountERC20Token */\n      dup5\n        /* \"contracts/Exchange.sol\":1950:1968  erc20BalanceBefore */\n      dup3\n        /* \"contracts/Exchange.sol\":1950:1988  erc20BalanceBefore + _amountERC20Token */\n      tag_233\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_233:\n        /* \"contracts/Exchange.sol\":1936:1945  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":1917:1933  ethBalanceBefore */\n      dup5\n        /* \"contracts/Exchange.sol\":1917:1945  ethBalanceBefore + msg.value */\n      tag_234\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_234:\n        /* \"contracts/Exchange.sol\":1916:1989  (ethBalanceBefore + msg.value) * (erc20BalanceBefore + _amountERC20Token) */\n      tag_235\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_235:\n        /* \"contracts/Exchange.sol\":1912:1913  K */\n      0x02\n        /* \"contracts/Exchange.sol\":1912:1989  K = (ethBalanceBefore + msg.value) * (erc20BalanceBefore + _amountERC20Token) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Exchange.sol\":2005:2075  LiquidityProvided(msg.sender, _amountERC20Token, msg.value, liquidity) */\n      0x3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f500\n        /* \"contracts/Exchange.sol\":2023:2033  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":2035:2052  _amountERC20Token */\n      dup7\n        /* \"contracts/Exchange.sol\":2054:2063  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":2065:2074  liquidity */\n      dup8\n        /* \"contracts/Exchange.sol\":2005:2075  LiquidityProvided(msg.sender, _amountERC20Token, msg.value, liquidity) */\n      mload(0x40)\n      tag_236\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Exchange.sol\":2121:2137  return liquidity */\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":456:2144  function provideLiquidity(uint _amountERC20Token) public payable returns (uint liquidity) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":2834:3417  function estimateERC20TokenToProvide(uint _amountEth) public view returns (uint amountERC20Token) {... */\n    tag_76:\n        /* \"contracts/Exchange.sol\":2909:2930  uint amountERC20Token */\n      0x00\n        /* \"contracts/Exchange.sol\":2963:2964  0 */\n      dup1\n        /* \"contracts/Exchange.sol\":2950:2960  _amountEth */\n      dup3\n        /* \"contracts/Exchange.sol\":2950:2964  _amountEth > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":2942:2996  require(_amountEth > 0, \"ETH must be greater than 0.\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"contracts/Exchange.sol\":3006:3029  uint contractEthBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":3032:3053  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":3006:3053  uint contractEthBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":3063:3093  uint contractERC20TokenBalance */\n      0x00\n        /* \"contracts/Exchange.sol\":3096:3106  erc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":3096:3116  erc20Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Exchange.sol\":3125:3129  this */\n      address\n        /* \"contracts/Exchange.sol\":3096:3131  erc20Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_242:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_245\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_245:\n        /* \"contracts/Exchange.sol\":3063:3131  uint contractERC20TokenBalance = erc20Token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":3167:3168  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":3145:3163  contractEthBalance */\n      dup3\n        /* \"contracts/Exchange.sol\":3145:3168  contractEthBalance == 0 */\n      sub\n        /* \"contracts/Exchange.sol\":3141:3203  if (contractEthBalance == 0) {... */\n      tag_246\n      jumpi\n        /* \"contracts/Exchange.sol\":3191:3192  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":3184:3192  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_238)\n        /* \"contracts/Exchange.sol\":3141:3203  if (contractEthBalance == 0) {... */\n    tag_246:\n        /* \"contracts/Exchange.sol\":3359:3377  contractEthBalance */\n      dup2\n        /* \"contracts/Exchange.sol\":3346:3356  _amountEth */\n      dup5\n        /* \"contracts/Exchange.sol\":3318:3343  contractERC20TokenBalance */\n      dup3\n        /* \"contracts/Exchange.sol\":3318:3356  contractERC20TokenBalance * _amountEth */\n      tag_247\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_247:\n        /* \"contracts/Exchange.sol\":3318:3377  contractERC20TokenBalance * _amountEth / contractEthBalance */\n      tag_248\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_248:\n        /* \"contracts/Exchange.sol\":3299:3377  amountERC20Token = contractERC20TokenBalance * _amountEth / contractEthBalance */\n      swap3\n      pop\n        /* \"contracts/Exchange.sol\":3387:3410  return amountERC20Token */\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":2834:3417  function estimateERC20TokenToProvide(uint _amountEth) public view returns (uint amountERC20Token) {... */\n    tag_238:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_250:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_252:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_253:\n        /* \"#utility.yul\":490:514   */\n      tag_307\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_252\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_308:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_254:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_310\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_253\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_20:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_313\n      tag_250\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":766:885   */\n    tag_312:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_314\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_254\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_255:\n        /* \"#utility.yul\":1112:1136   */\n      tag_316\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_252\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_26:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_318\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_255\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_256:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_257:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_321\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_256\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_258:\n        /* \"#utility.yul\":1684:1708   */\n      tag_323\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_257\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_324:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_259:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_326\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_258\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_38:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_329\n      tag_250\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1960:2079   */\n    tag_328:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_330\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_259\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_260:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_261:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_333\n        /* \"#utility.yul\":2386:2420   */\n      tag_334\n        /* \"#utility.yul\":2395:2419   */\n      tag_335\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_256\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2386:2420   */\n      tag_260\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2368:2421   */\n      tag_256\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_262:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_337\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_261\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2704   */\n    tag_263:\n        /* \"#utility.yul\":2628:2637   */\n      0x00\n        /* \"#utility.yul\":2661:2698   */\n      tag_339\n        /* \"#utility.yul\":2692:2697   */\n      dup3\n        /* \"#utility.yul\":2661:2698   */\n      tag_262\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2648:2698   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2867   */\n    tag_264:\n        /* \"#utility.yul\":2810:2860   */\n      tag_341\n        /* \"#utility.yul\":2854:2859   */\n      dup2\n        /* \"#utility.yul\":2810:2860   */\n      tag_263\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2805:2808   */\n      dup3\n        /* \"#utility.yul\":2798:2861   */\n      mstore\n        /* \"#utility.yul\":2710:2867   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2873:3121   */\n    tag_50:\n        /* \"#utility.yul\":2979:2983   */\n      0x00\n        /* \"#utility.yul\":3017:3019   */\n      0x20\n        /* \"#utility.yul\":3006:3015   */\n      dup3\n        /* \"#utility.yul\":3002:3020   */\n      add\n        /* \"#utility.yul\":2994:3020   */\n      swap1\n      pop\n        /* \"#utility.yul\":3030:3114   */\n      tag_343\n        /* \"#utility.yul\":3111:3112   */\n      0x00\n        /* \"#utility.yul\":3100:3109   */\n      dup4\n        /* \"#utility.yul\":3096:3113   */\n      add\n        /* \"#utility.yul\":3087:3093   */\n      dup5\n        /* \"#utility.yul\":3030:3114   */\n      tag_264\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2873:3121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3127:3296   */\n    tag_265:\n        /* \"#utility.yul\":3211:3222   */\n      0x00\n        /* \"#utility.yul\":3245:3251   */\n      dup3\n        /* \"#utility.yul\":3240:3243   */\n      dup3\n        /* \"#utility.yul\":3233:3252   */\n      mstore\n        /* \"#utility.yul\":3285:3289   */\n      0x20\n        /* \"#utility.yul\":3280:3283   */\n      dup3\n        /* \"#utility.yul\":3276:3290   */\n      add\n        /* \"#utility.yul\":3261:3290   */\n      swap1\n      pop\n        /* \"#utility.yul\":3127:3296   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3302:3525   */\n    tag_266:\n        /* \"#utility.yul\":3442:3476   */\n      0x43616e6e6f74206275726e207a65726f206c697175696469747920706f736974\n        /* \"#utility.yul\":3438:3439   */\n      0x00\n        /* \"#utility.yul\":3430:3436   */\n      dup3\n        /* \"#utility.yul\":3426:3440   */\n      add\n        /* \"#utility.yul\":3419:3477   */\n      mstore\n        /* \"#utility.yul\":3511:3517   */\n      0x696f6e7300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3506:3508   */\n      0x20\n        /* \"#utility.yul\":3498:3504   */\n      dup3\n        /* \"#utility.yul\":3494:3509   */\n      add\n        /* \"#utility.yul\":3487:3518   */\n      mstore\n        /* \"#utility.yul\":3302:3525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3531:3897   */\n    tag_267:\n        /* \"#utility.yul\":3673:3676   */\n      0x00\n        /* \"#utility.yul\":3694:3761   */\n      tag_347\n        /* \"#utility.yul\":3758:3760   */\n      0x24\n        /* \"#utility.yul\":3753:3756   */\n      dup4\n        /* \"#utility.yul\":3694:3761   */\n      tag_265\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3687:3761   */\n      swap2\n      pop\n        /* \"#utility.yul\":3770:3863   */\n      tag_348\n        /* \"#utility.yul\":3859:3862   */\n      dup3\n        /* \"#utility.yul\":3770:3863   */\n      tag_266\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3888:3890   */\n      0x40\n        /* \"#utility.yul\":3883:3886   */\n      dup3\n        /* \"#utility.yul\":3879:3891   */\n      add\n        /* \"#utility.yul\":3872:3891   */\n      swap1\n      pop\n        /* \"#utility.yul\":3531:3897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3903:4322   */\n    tag_81:\n        /* \"#utility.yul\":4069:4073   */\n      0x00\n        /* \"#utility.yul\":4107:4109   */\n      0x20\n        /* \"#utility.yul\":4096:4105   */\n      dup3\n        /* \"#utility.yul\":4092:4110   */\n      add\n        /* \"#utility.yul\":4084:4110   */\n      swap1\n      pop\n        /* \"#utility.yul\":4156:4165   */\n      dup2\n        /* \"#utility.yul\":4150:4154   */\n      dup2\n        /* \"#utility.yul\":4146:4166   */\n      sub\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4131:4140   */\n      dup4\n        /* \"#utility.yul\":4127:4144   */\n      add\n        /* \"#utility.yul\":4120:4167   */\n      mstore\n        /* \"#utility.yul\":4184:4315   */\n      tag_350\n        /* \"#utility.yul\":4310:4314   */\n      dup2\n        /* \"#utility.yul\":4184:4315   */\n      tag_267\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4176:4315   */\n      swap1\n      pop\n        /* \"#utility.yul\":3903:4322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4328:4553   */\n    tag_268:\n        /* \"#utility.yul\":4468:4502   */\n      0x4e6f7420656e6f756768206c697175696469747920706f736974696f6e732074\n        /* \"#utility.yul\":4464:4465   */\n      0x00\n        /* \"#utility.yul\":4456:4462   */\n      dup3\n        /* \"#utility.yul\":4452:4466   */\n      add\n        /* \"#utility.yul\":4445:4503   */\n      mstore\n        /* \"#utility.yul\":4537:4545   */\n      0x6f206275726e0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4532:4534   */\n      0x20\n        /* \"#utility.yul\":4524:4530   */\n      dup3\n        /* \"#utility.yul\":4520:4535   */\n      add\n        /* \"#utility.yul\":4513:4546   */\n      mstore\n        /* \"#utility.yul\":4328:4553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4559:4925   */\n    tag_269:\n        /* \"#utility.yul\":4701:4704   */\n      0x00\n        /* \"#utility.yul\":4722:4789   */\n      tag_353\n        /* \"#utility.yul\":4786:4788   */\n      0x26\n        /* \"#utility.yul\":4781:4784   */\n      dup4\n        /* \"#utility.yul\":4722:4789   */\n      tag_265\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4715:4789   */\n      swap2\n      pop\n        /* \"#utility.yul\":4798:4891   */\n      tag_354\n        /* \"#utility.yul\":4887:4890   */\n      dup3\n        /* \"#utility.yul\":4798:4891   */\n      tag_268\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4916:4918   */\n      0x40\n        /* \"#utility.yul\":4911:4914   */\n      dup3\n        /* \"#utility.yul\":4907:4919   */\n      add\n        /* \"#utility.yul\":4900:4919   */\n      swap1\n      pop\n        /* \"#utility.yul\":4559:4925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4931:5350   */\n    tag_84:\n        /* \"#utility.yul\":5097:5101   */\n      0x00\n        /* \"#utility.yul\":5135:5137   */\n      0x20\n        /* \"#utility.yul\":5124:5133   */\n      dup3\n        /* \"#utility.yul\":5120:5138   */\n      add\n        /* \"#utility.yul\":5112:5138   */\n      swap1\n      pop\n        /* \"#utility.yul\":5184:5193   */\n      dup2\n        /* \"#utility.yul\":5178:5182   */\n      dup2\n        /* \"#utility.yul\":5174:5194   */\n      sub\n        /* \"#utility.yul\":5170:5171   */\n      0x00\n        /* \"#utility.yul\":5159:5168   */\n      dup4\n        /* \"#utility.yul\":5155:5172   */\n      add\n        /* \"#utility.yul\":5148:5195   */\n      mstore\n        /* \"#utility.yul\":5212:5343   */\n      tag_356\n        /* \"#utility.yul\":5338:5342   */\n      dup2\n        /* \"#utility.yul\":5212:5343   */\n      tag_269\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5204:5343   */\n      swap1\n      pop\n        /* \"#utility.yul\":4931:5350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5356:5474   */\n    tag_270:\n        /* \"#utility.yul\":5443:5467   */\n      tag_358\n        /* \"#utility.yul\":5461:5466   */\n      dup2\n        /* \"#utility.yul\":5443:5467   */\n      tag_257\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5438:5441   */\n      dup3\n        /* \"#utility.yul\":5431:5468   */\n      mstore\n        /* \"#utility.yul\":5356:5474   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5480:5702   */\n    tag_86:\n        /* \"#utility.yul\":5573:5577   */\n      0x00\n        /* \"#utility.yul\":5611:5613   */\n      0x20\n        /* \"#utility.yul\":5600:5609   */\n      dup3\n        /* \"#utility.yul\":5596:5614   */\n      add\n        /* \"#utility.yul\":5588:5614   */\n      swap1\n      pop\n        /* \"#utility.yul\":5624:5695   */\n      tag_360\n        /* \"#utility.yul\":5692:5693   */\n      0x00\n        /* \"#utility.yul\":5681:5690   */\n      dup4\n        /* \"#utility.yul\":5677:5694   */\n      add\n        /* \"#utility.yul\":5668:5674   */\n      dup5\n        /* \"#utility.yul\":5624:5695   */\n      tag_270\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5480:5702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5708:5851   */\n    tag_271:\n        /* \"#utility.yul\":5765:5770   */\n      0x00\n        /* \"#utility.yul\":5796:5802   */\n      dup2\n        /* \"#utility.yul\":5790:5803   */\n      mload\n        /* \"#utility.yul\":5781:5803   */\n      swap1\n      pop\n        /* \"#utility.yul\":5812:5845   */\n      tag_362\n        /* \"#utility.yul\":5839:5844   */\n      dup2\n        /* \"#utility.yul\":5812:5845   */\n      tag_253\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5708:5851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5857:6208   */\n    tag_90:\n        /* \"#utility.yul\":5927:5933   */\n      0x00\n        /* \"#utility.yul\":5976:5978   */\n      0x20\n        /* \"#utility.yul\":5964:5973   */\n      dup3\n        /* \"#utility.yul\":5955:5962   */\n      dup5\n        /* \"#utility.yul\":5951:5974   */\n      sub\n        /* \"#utility.yul\":5947:5979   */\n      slt\n        /* \"#utility.yul\":5944:6063   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":5982:6061   */\n      tag_365\n      tag_250\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5944:6063   */\n    tag_364:\n        /* \"#utility.yul\":6102:6103   */\n      0x00\n        /* \"#utility.yul\":6127:6191   */\n      tag_366\n        /* \"#utility.yul\":6183:6190   */\n      dup5\n        /* \"#utility.yul\":6174:6180   */\n      dup3\n        /* \"#utility.yul\":6163:6172   */\n      dup6\n        /* \"#utility.yul\":6159:6181   */\n      add\n        /* \"#utility.yul\":6127:6191   */\n      tag_271\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6117:6191   */\n      swap2\n      pop\n        /* \"#utility.yul\":6073:6201   */\n      pop\n        /* \"#utility.yul\":5857:6208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6214:6394   */\n    tag_272:\n        /* \"#utility.yul\":6262:6339   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6259:6260   */\n      0x00\n        /* \"#utility.yul\":6252:6340   */\n      mstore\n        /* \"#utility.yul\":6359:6363   */\n      0x11\n        /* \"#utility.yul\":6356:6357   */\n      0x04\n        /* \"#utility.yul\":6349:6364   */\n      mstore\n        /* \"#utility.yul\":6383:6387   */\n      0x24\n        /* \"#utility.yul\":6380:6381   */\n      0x00\n        /* \"#utility.yul\":6373:6388   */\n      revert\n        /* \"#utility.yul\":6400:6810   */\n    tag_92:\n        /* \"#utility.yul\":6440:6447   */\n      0x00\n        /* \"#utility.yul\":6463:6483   */\n      tag_369\n        /* \"#utility.yul\":6481:6482   */\n      dup3\n        /* \"#utility.yul\":6463:6483   */\n      tag_252\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6458:6483   */\n      swap2\n      pop\n        /* \"#utility.yul\":6497:6517   */\n      tag_370\n        /* \"#utility.yul\":6515:6516   */\n      dup4\n        /* \"#utility.yul\":6497:6517   */\n      tag_252\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6492:6517   */\n      swap3\n      pop\n        /* \"#utility.yul\":6552:6553   */\n      dup3\n        /* \"#utility.yul\":6549:6550   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      mul\n        /* \"#utility.yul\":6574:6604   */\n      tag_371\n        /* \"#utility.yul\":6592:6603   */\n      dup2\n        /* \"#utility.yul\":6574:6604   */\n      tag_252\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6563:6604   */\n      swap2\n      pop\n        /* \"#utility.yul\":6753:6754   */\n      dup3\n        /* \"#utility.yul\":6744:6751   */\n      dup3\n        /* \"#utility.yul\":6740:6755   */\n      div\n        /* \"#utility.yul\":6737:6738   */\n      dup5\n        /* \"#utility.yul\":6734:6756   */\n      eq\n        /* \"#utility.yul\":6714:6715   */\n      dup4\n        /* \"#utility.yul\":6707:6716   */\n      iszero\n        /* \"#utility.yul\":6687:6770   */\n      or\n        /* \"#utility.yul\":6664:6803   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":6783:6801   */\n      tag_373\n      tag_272\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6664:6803   */\n    tag_372:\n        /* \"#utility.yul\":6448:6810   */\n      pop\n        /* \"#utility.yul\":6400:6810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6816:6996   */\n    tag_273:\n        /* \"#utility.yul\":6864:6941   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6861:6862   */\n      0x00\n        /* \"#utility.yul\":6854:6942   */\n      mstore\n        /* \"#utility.yul\":6961:6965   */\n      0x12\n        /* \"#utility.yul\":6958:6959   */\n      0x04\n        /* \"#utility.yul\":6951:6966   */\n      mstore\n        /* \"#utility.yul\":6985:6989   */\n      0x24\n        /* \"#utility.yul\":6982:6983   */\n      0x00\n        /* \"#utility.yul\":6975:6990   */\n      revert\n        /* \"#utility.yul\":7002:7187   */\n    tag_94:\n        /* \"#utility.yul\":7042:7043   */\n      0x00\n        /* \"#utility.yul\":7059:7079   */\n      tag_376\n        /* \"#utility.yul\":7077:7078   */\n      dup3\n        /* \"#utility.yul\":7059:7079   */\n      tag_252\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7054:7079   */\n      swap2\n      pop\n        /* \"#utility.yul\":7093:7113   */\n      tag_377\n        /* \"#utility.yul\":7111:7112   */\n      dup4\n        /* \"#utility.yul\":7093:7113   */\n      tag_252\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7088:7113   */\n      swap3\n      pop\n        /* \"#utility.yul\":7132:7133   */\n      dup3\n        /* \"#utility.yul\":7122:7157   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":7137:7155   */\n      tag_379\n      tag_273\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7122:7157   */\n    tag_378:\n        /* \"#utility.yul\":7179:7180   */\n      dup3\n        /* \"#utility.yul\":7176:7177   */\n      dup3\n        /* \"#utility.yul\":7172:7181   */\n      div\n        /* \"#utility.yul\":7167:7181   */\n      swap1\n      pop\n        /* \"#utility.yul\":7002:7187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7193:7387   */\n    tag_98:\n        /* \"#utility.yul\":7233:7237   */\n      0x00\n        /* \"#utility.yul\":7253:7273   */\n      tag_381\n        /* \"#utility.yul\":7271:7272   */\n      dup3\n        /* \"#utility.yul\":7253:7273   */\n      tag_252\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7248:7273   */\n      swap2\n      pop\n        /* \"#utility.yul\":7287:7307   */\n      tag_382\n        /* \"#utility.yul\":7305:7306   */\n      dup4\n        /* \"#utility.yul\":7287:7307   */\n      tag_252\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7282:7307   */\n      swap3\n      pop\n        /* \"#utility.yul\":7331:7332   */\n      dup3\n        /* \"#utility.yul\":7328:7329   */\n      dup3\n        /* \"#utility.yul\":7324:7333   */\n      sub\n        /* \"#utility.yul\":7316:7333   */\n      swap1\n      pop\n        /* \"#utility.yul\":7355:7356   */\n      dup2\n        /* \"#utility.yul\":7349:7353   */\n      dup2\n        /* \"#utility.yul\":7346:7357   */\n      gt\n        /* \"#utility.yul\":7343:7380   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7360:7378   */\n      tag_384\n      tag_272\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7343:7380   */\n    tag_383:\n        /* \"#utility.yul\":7193:7387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7393:7725   */\n    tag_103:\n        /* \"#utility.yul\":7514:7518   */\n      0x00\n        /* \"#utility.yul\":7552:7554   */\n      0x40\n        /* \"#utility.yul\":7541:7550   */\n      dup3\n        /* \"#utility.yul\":7537:7555   */\n      add\n        /* \"#utility.yul\":7529:7555   */\n      swap1\n      pop\n        /* \"#utility.yul\":7565:7636   */\n      tag_386\n        /* \"#utility.yul\":7633:7634   */\n      0x00\n        /* \"#utility.yul\":7622:7631   */\n      dup4\n        /* \"#utility.yul\":7618:7635   */\n      add\n        /* \"#utility.yul\":7609:7615   */\n      dup6\n        /* \"#utility.yul\":7565:7636   */\n      tag_270\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7646:7718   */\n      tag_387\n        /* \"#utility.yul\":7714:7716   */\n      0x20\n        /* \"#utility.yul\":7703:7712   */\n      dup4\n        /* \"#utility.yul\":7699:7717   */\n      add\n        /* \"#utility.yul\":7690:7696   */\n      dup5\n        /* \"#utility.yul\":7646:7718   */\n      tag_255\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7393:7725   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7731:7821   */\n    tag_274:\n        /* \"#utility.yul\":7765:7772   */\n      0x00\n        /* \"#utility.yul\":7808:7813   */\n      dup2\n        /* \"#utility.yul\":7801:7814   */\n      iszero\n        /* \"#utility.yul\":7794:7815   */\n      iszero\n        /* \"#utility.yul\":7783:7815   */\n      swap1\n      pop\n        /* \"#utility.yul\":7731:7821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7827:7943   */\n    tag_275:\n        /* \"#utility.yul\":7897:7918   */\n      tag_390\n        /* \"#utility.yul\":7912:7917   */\n      dup2\n        /* \"#utility.yul\":7897:7918   */\n      tag_274\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7890:7895   */\n      dup2\n        /* \"#utility.yul\":7887:7919   */\n      eq\n        /* \"#utility.yul\":7877:7937   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":7933:7934   */\n      0x00\n        /* \"#utility.yul\":7930:7931   */\n      dup1\n        /* \"#utility.yul\":7923:7935   */\n      revert\n        /* \"#utility.yul\":7877:7937   */\n    tag_391:\n        /* \"#utility.yul\":7827:7943   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7949:8086   */\n    tag_276:\n        /* \"#utility.yul\":8003:8008   */\n      0x00\n        /* \"#utility.yul\":8034:8040   */\n      dup2\n        /* \"#utility.yul\":8028:8041   */\n      mload\n        /* \"#utility.yul\":8019:8041   */\n      swap1\n      pop\n        /* \"#utility.yul\":8050:8080   */\n      tag_393\n        /* \"#utility.yul\":8074:8079   */\n      dup2\n        /* \"#utility.yul\":8050:8080   */\n      tag_275\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7949:8086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8092:8437   */\n    tag_107:\n        /* \"#utility.yul\":8159:8165   */\n      0x00\n        /* \"#utility.yul\":8208:8210   */\n      0x20\n        /* \"#utility.yul\":8196:8205   */\n      dup3\n        /* \"#utility.yul\":8187:8194   */\n      dup5\n        /* \"#utility.yul\":8183:8206   */\n      sub\n        /* \"#utility.yul\":8179:8211   */\n      slt\n        /* \"#utility.yul\":8176:8295   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":8214:8293   */\n      tag_396\n      tag_250\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8176:8295   */\n    tag_395:\n        /* \"#utility.yul\":8334:8335   */\n      0x00\n        /* \"#utility.yul\":8359:8420   */\n      tag_397\n        /* \"#utility.yul\":8412:8419   */\n      dup5\n        /* \"#utility.yul\":8403:8409   */\n      dup3\n        /* \"#utility.yul\":8392:8401   */\n      dup6\n        /* \"#utility.yul\":8388:8410   */\n      add\n        /* \"#utility.yul\":8359:8420   */\n      tag_276\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8349:8420   */\n      swap2\n      pop\n        /* \"#utility.yul\":8305:8430   */\n      pop\n        /* \"#utility.yul\":8092:8437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8443:8620   */\n    tag_277:\n        /* \"#utility.yul\":8583:8612   */\n      0x4661696c656420746f2073656e6420455243323020746f6b656e730000000000\n        /* \"#utility.yul\":8579:8580   */\n      0x00\n        /* \"#utility.yul\":8571:8577   */\n      dup3\n        /* \"#utility.yul\":8567:8581   */\n      add\n        /* \"#utility.yul\":8560:8613   */\n      mstore\n        /* \"#utility.yul\":8443:8620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8626:8992   */\n    tag_278:\n        /* \"#utility.yul\":8768:8771   */\n      0x00\n        /* \"#utility.yul\":8789:8856   */\n      tag_400\n        /* \"#utility.yul\":8853:8855   */\n      0x1b\n        /* \"#utility.yul\":8848:8851   */\n      dup4\n        /* \"#utility.yul\":8789:8856   */\n      tag_265\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8782:8856   */\n      swap2\n      pop\n        /* \"#utility.yul\":8865:8958   */\n      tag_401\n        /* \"#utility.yul\":8954:8957   */\n      dup3\n        /* \"#utility.yul\":8865:8958   */\n      tag_277\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":8983:8985   */\n      0x20\n        /* \"#utility.yul\":8978:8981   */\n      dup3\n        /* \"#utility.yul\":8974:8986   */\n      add\n        /* \"#utility.yul\":8967:8986   */\n      swap1\n      pop\n        /* \"#utility.yul\":8626:8992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8998:9417   */\n    tag_110:\n        /* \"#utility.yul\":9164:9168   */\n      0x00\n        /* \"#utility.yul\":9202:9204   */\n      0x20\n        /* \"#utility.yul\":9191:9200   */\n      dup3\n        /* \"#utility.yul\":9187:9205   */\n      add\n        /* \"#utility.yul\":9179:9205   */\n      swap1\n      pop\n        /* \"#utility.yul\":9251:9260   */\n      dup2\n        /* \"#utility.yul\":9245:9249   */\n      dup2\n        /* \"#utility.yul\":9241:9261   */\n      sub\n        /* \"#utility.yul\":9237:9238   */\n      0x00\n        /* \"#utility.yul\":9226:9235   */\n      dup4\n        /* \"#utility.yul\":9222:9239   */\n      add\n        /* \"#utility.yul\":9215:9262   */\n      mstore\n        /* \"#utility.yul\":9279:9410   */\n      tag_403\n        /* \"#utility.yul\":9405:9409   */\n      dup2\n        /* \"#utility.yul\":9279:9410   */\n      tag_278\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9271:9410   */\n      swap1\n      pop\n        /* \"#utility.yul\":8998:9417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9423:9865   */\n    tag_115:\n        /* \"#utility.yul\":9572:9576   */\n      0x00\n        /* \"#utility.yul\":9610:9612   */\n      0x60\n        /* \"#utility.yul\":9599:9608   */\n      dup3\n        /* \"#utility.yul\":9595:9613   */\n      add\n        /* \"#utility.yul\":9587:9613   */\n      swap1\n      pop\n        /* \"#utility.yul\":9623:9694   */\n      tag_405\n        /* \"#utility.yul\":9691:9692   */\n      0x00\n        /* \"#utility.yul\":9680:9689   */\n      dup4\n        /* \"#utility.yul\":9676:9693   */\n      add\n        /* \"#utility.yul\":9667:9673   */\n      dup7\n        /* \"#utility.yul\":9623:9694   */\n      tag_255\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9704:9776   */\n      tag_406\n        /* \"#utility.yul\":9772:9774   */\n      0x20\n        /* \"#utility.yul\":9761:9770   */\n      dup4\n        /* \"#utility.yul\":9757:9775   */\n      add\n        /* \"#utility.yul\":9748:9754   */\n      dup6\n        /* \"#utility.yul\":9704:9776   */\n      tag_255\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9786:9858   */\n      tag_407\n        /* \"#utility.yul\":9854:9856   */\n      0x40\n        /* \"#utility.yul\":9843:9852   */\n      dup4\n        /* \"#utility.yul\":9839:9857   */\n      add\n        /* \"#utility.yul\":9830:9836   */\n      dup5\n        /* \"#utility.yul\":9786:9858   */\n      tag_255\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9423:9865   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9871:10093   */\n    tag_279:\n        /* \"#utility.yul\":10011:10045   */\n      0x455243323020746f6b656e206d7573742062652067726561746572207468616e\n        /* \"#utility.yul\":10007:10008   */\n      0x00\n        /* \"#utility.yul\":9999:10005   */\n      dup3\n        /* \"#utility.yul\":9995:10009   */\n      add\n        /* \"#utility.yul\":9988:10046   */\n      mstore\n        /* \"#utility.yul\":10080:10085   */\n      0x20302e0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10075:10077   */\n      0x20\n        /* \"#utility.yul\":10067:10073   */\n      dup3\n        /* \"#utility.yul\":10063:10078   */\n      add\n        /* \"#utility.yul\":10056:10086   */\n      mstore\n        /* \"#utility.yul\":9871:10093   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10099:10465   */\n    tag_280:\n        /* \"#utility.yul\":10241:10244   */\n      0x00\n        /* \"#utility.yul\":10262:10329   */\n      tag_410\n        /* \"#utility.yul\":10326:10328   */\n      0x23\n        /* \"#utility.yul\":10321:10324   */\n      dup4\n        /* \"#utility.yul\":10262:10329   */\n      tag_265\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10255:10329   */\n      swap2\n      pop\n        /* \"#utility.yul\":10338:10431   */\n      tag_411\n        /* \"#utility.yul\":10427:10430   */\n      dup3\n        /* \"#utility.yul\":10338:10431   */\n      tag_279\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10456:10458   */\n      0x40\n        /* \"#utility.yul\":10451:10454   */\n      dup3\n        /* \"#utility.yul\":10447:10459   */\n      add\n        /* \"#utility.yul\":10440:10459   */\n      swap1\n      pop\n        /* \"#utility.yul\":10099:10465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10890   */\n    tag_119:\n        /* \"#utility.yul\":10637:10641   */\n      0x00\n        /* \"#utility.yul\":10675:10677   */\n      0x20\n        /* \"#utility.yul\":10664:10673   */\n      dup3\n        /* \"#utility.yul\":10660:10678   */\n      add\n        /* \"#utility.yul\":10652:10678   */\n      swap1\n      pop\n        /* \"#utility.yul\":10724:10733   */\n      dup2\n        /* \"#utility.yul\":10718:10722   */\n      dup2\n        /* \"#utility.yul\":10714:10734   */\n      sub\n        /* \"#utility.yul\":10710:10711   */\n      0x00\n        /* \"#utility.yul\":10699:10708   */\n      dup4\n        /* \"#utility.yul\":10695:10712   */\n      add\n        /* \"#utility.yul\":10688:10735   */\n      mstore\n        /* \"#utility.yul\":10752:10883   */\n      tag_413\n        /* \"#utility.yul\":10878:10882   */\n      dup2\n        /* \"#utility.yul\":10752:10883   */\n      tag_280\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10744:10883   */\n      swap1\n      pop\n        /* \"#utility.yul\":10471:10890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10896:11075   */\n    tag_281:\n        /* \"#utility.yul\":11036:11067   */\n      0x4d757374206465706f736974206d6f7265207468616e2030204554482e000000\n        /* \"#utility.yul\":11032:11033   */\n      0x00\n        /* \"#utility.yul\":11024:11030   */\n      dup3\n        /* \"#utility.yul\":11020:11034   */\n      add\n        /* \"#utility.yul\":11013:11068   */\n      mstore\n        /* \"#utility.yul\":10896:11075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11081:11447   */\n    tag_282:\n        /* \"#utility.yul\":11223:11226   */\n      0x00\n        /* \"#utility.yul\":11244:11311   */\n      tag_416\n        /* \"#utility.yul\":11308:11310   */\n      0x1d\n        /* \"#utility.yul\":11303:11306   */\n      dup4\n        /* \"#utility.yul\":11244:11311   */\n      tag_265\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11237:11311   */\n      swap2\n      pop\n        /* \"#utility.yul\":11320:11413   */\n      tag_417\n        /* \"#utility.yul\":11409:11412   */\n      dup3\n        /* \"#utility.yul\":11320:11413   */\n      tag_281\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11438:11440   */\n      0x20\n        /* \"#utility.yul\":11433:11436   */\n      dup3\n        /* \"#utility.yul\":11429:11441   */\n      add\n        /* \"#utility.yul\":11422:11441   */\n      swap1\n      pop\n        /* \"#utility.yul\":11081:11447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11453:11872   */\n    tag_130:\n        /* \"#utility.yul\":11619:11623   */\n      0x00\n        /* \"#utility.yul\":11657:11659   */\n      0x20\n        /* \"#utility.yul\":11646:11655   */\n      dup3\n        /* \"#utility.yul\":11642:11660   */\n      add\n        /* \"#utility.yul\":11634:11660   */\n      swap1\n      pop\n        /* \"#utility.yul\":11706:11715   */\n      dup2\n        /* \"#utility.yul\":11700:11704   */\n      dup2\n        /* \"#utility.yul\":11696:11716   */\n      sub\n        /* \"#utility.yul\":11692:11693   */\n      0x00\n        /* \"#utility.yul\":11681:11690   */\n      dup4\n        /* \"#utility.yul\":11677:11694   */\n      add\n        /* \"#utility.yul\":11670:11717   */\n      mstore\n        /* \"#utility.yul\":11734:11865   */\n      tag_419\n        /* \"#utility.yul\":11860:11864   */\n      dup2\n        /* \"#utility.yul\":11734:11865   */\n      tag_282\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11726:11865   */\n      swap1\n      pop\n        /* \"#utility.yul\":11453:11872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11878:12069   */\n    tag_137:\n        /* \"#utility.yul\":11918:11921   */\n      0x00\n        /* \"#utility.yul\":11937:11957   */\n      tag_421\n        /* \"#utility.yul\":11955:11956   */\n      dup3\n        /* \"#utility.yul\":11937:11957   */\n      tag_252\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11932:11957   */\n      swap2\n      pop\n        /* \"#utility.yul\":11971:11991   */\n      tag_422\n        /* \"#utility.yul\":11989:11990   */\n      dup4\n        /* \"#utility.yul\":11971:11991   */\n      tag_252\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11966:11991   */\n      swap3\n      pop\n        /* \"#utility.yul\":12014:12015   */\n      dup3\n        /* \"#utility.yul\":12011:12012   */\n      dup3\n        /* \"#utility.yul\":12007:12016   */\n      add\n        /* \"#utility.yul\":12000:12016   */\n      swap1\n      pop\n        /* \"#utility.yul\":12035:12038   */\n      dup1\n        /* \"#utility.yul\":12032:12033   */\n      dup3\n        /* \"#utility.yul\":12029:12039   */\n      gt\n        /* \"#utility.yul\":12026:12062   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":12042:12060   */\n      tag_424\n      tag_272\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12026:12062   */\n    tag_423:\n        /* \"#utility.yul\":11878:12069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12075:12407   */\n    tag_147:\n        /* \"#utility.yul\":12196:12200   */\n      0x00\n        /* \"#utility.yul\":12234:12236   */\n      0x40\n        /* \"#utility.yul\":12223:12232   */\n      dup3\n        /* \"#utility.yul\":12219:12237   */\n      add\n        /* \"#utility.yul\":12211:12237   */\n      swap1\n      pop\n        /* \"#utility.yul\":12247:12318   */\n      tag_426\n        /* \"#utility.yul\":12315:12316   */\n      0x00\n        /* \"#utility.yul\":12304:12313   */\n      dup4\n        /* \"#utility.yul\":12300:12317   */\n      add\n        /* \"#utility.yul\":12291:12297   */\n      dup6\n        /* \"#utility.yul\":12247:12318   */\n      tag_255\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12328:12400   */\n      tag_427\n        /* \"#utility.yul\":12396:12398   */\n      0x20\n        /* \"#utility.yul\":12385:12394   */\n      dup4\n        /* \"#utility.yul\":12381:12399   */\n      add\n        /* \"#utility.yul\":12372:12378   */\n      dup5\n        /* \"#utility.yul\":12328:12400   */\n      tag_255\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12075:12407   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12413:12634   */\n    tag_283:\n        /* \"#utility.yul\":12553:12587   */\n      0x45544820616d6f756e74206d7573742062652067726561746572207468616e20\n        /* \"#utility.yul\":12549:12550   */\n      0x00\n        /* \"#utility.yul\":12541:12547   */\n      dup3\n        /* \"#utility.yul\":12537:12551   */\n      add\n        /* \"#utility.yul\":12530:12588   */\n      mstore\n        /* \"#utility.yul\":12622:12626   */\n      0x302e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12617:12619   */\n      0x20\n        /* \"#utility.yul\":12609:12615   */\n      dup3\n        /* \"#utility.yul\":12605:12620   */\n      add\n        /* \"#utility.yul\":12598:12627   */\n      mstore\n        /* \"#utility.yul\":12413:12634   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12640:13006   */\n    tag_284:\n        /* \"#utility.yul\":12782:12785   */\n      0x00\n        /* \"#utility.yul\":12803:12870   */\n      tag_430\n        /* \"#utility.yul\":12867:12869   */\n      0x22\n        /* \"#utility.yul\":12862:12865   */\n      dup4\n        /* \"#utility.yul\":12803:12870   */\n      tag_265\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12796:12870   */\n      swap2\n      pop\n        /* \"#utility.yul\":12879:12972   */\n      tag_431\n        /* \"#utility.yul\":12968:12971   */\n      dup3\n        /* \"#utility.yul\":12879:12972   */\n      tag_283\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12997:12999   */\n      0x40\n        /* \"#utility.yul\":12992:12995   */\n      dup3\n        /* \"#utility.yul\":12988:13000   */\n      add\n        /* \"#utility.yul\":12981:13000   */\n      swap1\n      pop\n        /* \"#utility.yul\":12640:13006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13012:13431   */\n    tag_151:\n        /* \"#utility.yul\":13178:13182   */\n      0x00\n        /* \"#utility.yul\":13216:13218   */\n      0x20\n        /* \"#utility.yul\":13205:13214   */\n      dup3\n        /* \"#utility.yul\":13201:13219   */\n      add\n        /* \"#utility.yul\":13193:13219   */\n      swap1\n      pop\n        /* \"#utility.yul\":13265:13274   */\n      dup2\n        /* \"#utility.yul\":13259:13263   */\n      dup2\n        /* \"#utility.yul\":13255:13275   */\n      sub\n        /* \"#utility.yul\":13251:13252   */\n      0x00\n        /* \"#utility.yul\":13240:13249   */\n      dup4\n        /* \"#utility.yul\":13236:13253   */\n      add\n        /* \"#utility.yul\":13229:13276   */\n      mstore\n        /* \"#utility.yul\":13293:13424   */\n      tag_433\n        /* \"#utility.yul\":13419:13423   */\n      dup2\n        /* \"#utility.yul\":13293:13424   */\n      tag_284\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13285:13424   */\n      swap1\n      pop\n        /* \"#utility.yul\":13012:13431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13437:13659   */\n    tag_285:\n        /* \"#utility.yul\":13577:13611   */\n      0x4d75737420696e707574206d6f7265207468616e203020455243323020546f6b\n        /* \"#utility.yul\":13573:13574   */\n      0x00\n        /* \"#utility.yul\":13565:13571   */\n      dup3\n        /* \"#utility.yul\":13561:13575   */\n      add\n        /* \"#utility.yul\":13554:13612   */\n      mstore\n        /* \"#utility.yul\":13646:13651   */\n      0x656e2e0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13641:13643   */\n      0x20\n        /* \"#utility.yul\":13633:13639   */\n      dup3\n        /* \"#utility.yul\":13629:13644   */\n      add\n        /* \"#utility.yul\":13622:13652   */\n      mstore\n        /* \"#utility.yul\":13437:13659   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13665:14031   */\n    tag_286:\n        /* \"#utility.yul\":13807:13810   */\n      0x00\n        /* \"#utility.yul\":13828:13895   */\n      tag_436\n        /* \"#utility.yul\":13892:13894   */\n      0x23\n        /* \"#utility.yul\":13887:13890   */\n      dup4\n        /* \"#utility.yul\":13828:13895   */\n      tag_265\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13821:13895   */\n      swap2\n      pop\n        /* \"#utility.yul\":13904:13997   */\n      tag_437\n        /* \"#utility.yul\":13993:13996   */\n      dup3\n        /* \"#utility.yul\":13904:13997   */\n      tag_285\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14022:14024   */\n      0x40\n        /* \"#utility.yul\":14017:14020   */\n      dup3\n        /* \"#utility.yul\":14013:14025   */\n      add\n        /* \"#utility.yul\":14006:14025   */\n      swap1\n      pop\n        /* \"#utility.yul\":13665:14031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14037:14456   */\n    tag_162:\n        /* \"#utility.yul\":14203:14207   */\n      0x00\n        /* \"#utility.yul\":14241:14243   */\n      0x20\n        /* \"#utility.yul\":14230:14239   */\n      dup3\n        /* \"#utility.yul\":14226:14244   */\n      add\n        /* \"#utility.yul\":14218:14244   */\n      swap1\n      pop\n        /* \"#utility.yul\":14290:14299   */\n      dup2\n        /* \"#utility.yul\":14284:14288   */\n      dup2\n        /* \"#utility.yul\":14280:14300   */\n      sub\n        /* \"#utility.yul\":14276:14277   */\n      0x00\n        /* \"#utility.yul\":14265:14274   */\n      dup4\n        /* \"#utility.yul\":14261:14278   */\n      add\n        /* \"#utility.yul\":14254:14301   */\n      mstore\n        /* \"#utility.yul\":14318:14449   */\n      tag_439\n        /* \"#utility.yul\":14444:14448   */\n      dup2\n        /* \"#utility.yul\":14318:14449   */\n      tag_286\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":14310:14449   */\n      swap1\n      pop\n        /* \"#utility.yul\":14037:14456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14462:14635   */\n    tag_287:\n        /* \"#utility.yul\":14602:14627   */\n      0x496e73756666696369656e74206c69717569646974792e000000000000000000\n        /* \"#utility.yul\":14598:14599   */\n      0x00\n        /* \"#utility.yul\":14590:14596   */\n      dup3\n        /* \"#utility.yul\":14586:14600   */\n      add\n        /* \"#utility.yul\":14579:14628   */\n      mstore\n        /* \"#utility.yul\":14462:14635   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14641:15007   */\n    tag_288:\n        /* \"#utility.yul\":14783:14786   */\n      0x00\n        /* \"#utility.yul\":14804:14871   */\n      tag_442\n        /* \"#utility.yul\":14868:14870   */\n      0x17\n        /* \"#utility.yul\":14863:14866   */\n      dup4\n        /* \"#utility.yul\":14804:14871   */\n      tag_265\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":14797:14871   */\n      swap2\n      pop\n        /* \"#utility.yul\":14880:14973   */\n      tag_443\n        /* \"#utility.yul\":14969:14972   */\n      dup3\n        /* \"#utility.yul\":14880:14973   */\n      tag_287\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":14998:15000   */\n      0x20\n        /* \"#utility.yul\":14993:14996   */\n      dup3\n        /* \"#utility.yul\":14989:15001   */\n      add\n        /* \"#utility.yul\":14982:15001   */\n      swap1\n      pop\n        /* \"#utility.yul\":14641:15007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15013:15432   */\n    tag_169:\n        /* \"#utility.yul\":15179:15183   */\n      0x00\n        /* \"#utility.yul\":15217:15219   */\n      0x20\n        /* \"#utility.yul\":15206:15215   */\n      dup3\n        /* \"#utility.yul\":15202:15220   */\n      add\n        /* \"#utility.yul\":15194:15220   */\n      swap1\n      pop\n        /* \"#utility.yul\":15266:15275   */\n      dup2\n        /* \"#utility.yul\":15260:15264   */\n      dup2\n        /* \"#utility.yul\":15256:15276   */\n      sub\n        /* \"#utility.yul\":15252:15253   */\n      0x00\n        /* \"#utility.yul\":15241:15250   */\n      dup4\n        /* \"#utility.yul\":15237:15254   */\n      add\n        /* \"#utility.yul\":15230:15277   */\n      mstore\n        /* \"#utility.yul\":15294:15425   */\n      tag_445\n        /* \"#utility.yul\":15420:15424   */\n      dup2\n        /* \"#utility.yul\":15294:15425   */\n      tag_288\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":15286:15425   */\n      swap1\n      pop\n        /* \"#utility.yul\":15013:15432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15438:15609   */\n    tag_289:\n        /* \"#utility.yul\":15578:15601   */\n      0x496e76616c6964207377617020657374696d6174650000000000000000000000\n        /* \"#utility.yul\":15574:15575   */\n      0x00\n        /* \"#utility.yul\":15566:15572   */\n      dup3\n        /* \"#utility.yul\":15562:15576   */\n      add\n        /* \"#utility.yul\":15555:15602   */\n      mstore\n        /* \"#utility.yul\":15438:15609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15615:15981   */\n    tag_290:\n        /* \"#utility.yul\":15757:15760   */\n      0x00\n        /* \"#utility.yul\":15778:15845   */\n      tag_448\n        /* \"#utility.yul\":15842:15844   */\n      0x15\n        /* \"#utility.yul\":15837:15840   */\n      dup4\n        /* \"#utility.yul\":15778:15845   */\n      tag_265\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":15771:15845   */\n      swap2\n      pop\n        /* \"#utility.yul\":15854:15947   */\n      tag_449\n        /* \"#utility.yul\":15943:15946   */\n      dup3\n        /* \"#utility.yul\":15854:15947   */\n      tag_289\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":15972:15974   */\n      0x20\n        /* \"#utility.yul\":15967:15970   */\n      dup3\n        /* \"#utility.yul\":15963:15975   */\n      add\n        /* \"#utility.yul\":15956:15975   */\n      swap1\n      pop\n        /* \"#utility.yul\":15615:15981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15987:16406   */\n    tag_176:\n        /* \"#utility.yul\":16153:16157   */\n      0x00\n        /* \"#utility.yul\":16191:16193   */\n      0x20\n        /* \"#utility.yul\":16180:16189   */\n      dup3\n        /* \"#utility.yul\":16176:16194   */\n      add\n        /* \"#utility.yul\":16168:16194   */\n      swap1\n      pop\n        /* \"#utility.yul\":16240:16249   */\n      dup2\n        /* \"#utility.yul\":16234:16238   */\n      dup2\n        /* \"#utility.yul\":16230:16250   */\n      sub\n        /* \"#utility.yul\":16226:16227   */\n      0x00\n        /* \"#utility.yul\":16215:16224   */\n      dup4\n        /* \"#utility.yul\":16211:16228   */\n      add\n        /* \"#utility.yul\":16204:16251   */\n      mstore\n        /* \"#utility.yul\":16268:16399   */\n      tag_451\n        /* \"#utility.yul\":16394:16398   */\n      dup2\n        /* \"#utility.yul\":16268:16399   */\n      tag_290\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":16260:16399   */\n      swap1\n      pop\n        /* \"#utility.yul\":15987:16406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16412:16854   */\n    tag_187:\n        /* \"#utility.yul\":16561:16565   */\n      0x00\n        /* \"#utility.yul\":16599:16601   */\n      0x60\n        /* \"#utility.yul\":16588:16597   */\n      dup3\n        /* \"#utility.yul\":16584:16602   */\n      add\n        /* \"#utility.yul\":16576:16602   */\n      swap1\n      pop\n        /* \"#utility.yul\":16612:16683   */\n      tag_453\n        /* \"#utility.yul\":16680:16681   */\n      0x00\n        /* \"#utility.yul\":16669:16678   */\n      dup4\n        /* \"#utility.yul\":16665:16682   */\n      add\n        /* \"#utility.yul\":16656:16662   */\n      dup7\n        /* \"#utility.yul\":16612:16683   */\n      tag_270\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":16693:16765   */\n      tag_454\n        /* \"#utility.yul\":16761:16763   */\n      0x20\n        /* \"#utility.yul\":16750:16759   */\n      dup4\n        /* \"#utility.yul\":16746:16764   */\n      add\n        /* \"#utility.yul\":16737:16743   */\n      dup6\n        /* \"#utility.yul\":16693:16765   */\n      tag_270\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":16775:16847   */\n      tag_455\n        /* \"#utility.yul\":16843:16845   */\n      0x40\n        /* \"#utility.yul\":16832:16841   */\n      dup4\n        /* \"#utility.yul\":16828:16846   */\n      add\n        /* \"#utility.yul\":16819:16825   */\n      dup5\n        /* \"#utility.yul\":16775:16847   */\n      tag_255\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":16412:16854   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16860:17031   */\n    tag_291:\n        /* \"#utility.yul\":17000:17023   */\n      0x4552433230207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":16996:16997   */\n      0x00\n        /* \"#utility.yul\":16988:16994   */\n      dup3\n        /* \"#utility.yul\":16984:16998   */\n      add\n        /* \"#utility.yul\":16977:17024   */\n      mstore\n        /* \"#utility.yul\":16860:17031   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17037:17403   */\n    tag_292:\n        /* \"#utility.yul\":17179:17182   */\n      0x00\n        /* \"#utility.yul\":17200:17267   */\n      tag_458\n        /* \"#utility.yul\":17264:17266   */\n      0x15\n        /* \"#utility.yul\":17259:17262   */\n      dup4\n        /* \"#utility.yul\":17200:17267   */\n      tag_265\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":17193:17267   */\n      swap2\n      pop\n        /* \"#utility.yul\":17276:17369   */\n      tag_459\n        /* \"#utility.yul\":17365:17368   */\n      dup3\n        /* \"#utility.yul\":17276:17369   */\n      tag_291\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":17394:17396   */\n      0x20\n        /* \"#utility.yul\":17389:17392   */\n      dup3\n        /* \"#utility.yul\":17385:17397   */\n      add\n        /* \"#utility.yul\":17378:17397   */\n      swap1\n      pop\n        /* \"#utility.yul\":17037:17403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17409:17828   */\n    tag_193:\n        /* \"#utility.yul\":17575:17579   */\n      0x00\n        /* \"#utility.yul\":17613:17615   */\n      0x20\n        /* \"#utility.yul\":17602:17611   */\n      dup3\n        /* \"#utility.yul\":17598:17616   */\n      add\n        /* \"#utility.yul\":17590:17616   */\n      swap1\n      pop\n        /* \"#utility.yul\":17662:17671   */\n      dup2\n        /* \"#utility.yul\":17656:17660   */\n      dup2\n        /* \"#utility.yul\":17652:17672   */\n      sub\n        /* \"#utility.yul\":17648:17649   */\n      0x00\n        /* \"#utility.yul\":17637:17646   */\n      dup4\n        /* \"#utility.yul\":17633:17650   */\n      add\n        /* \"#utility.yul\":17626:17673   */\n      mstore\n        /* \"#utility.yul\":17690:17821   */\n      tag_461\n        /* \"#utility.yul\":17816:17820   */\n      dup2\n        /* \"#utility.yul\":17690:17821   */\n      tag_292\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":17682:17821   */\n      swap1\n      pop\n        /* \"#utility.yul\":17409:17828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17834:18004   */\n    tag_293:\n        /* \"#utility.yul\":17974:17996   */\n      0x496e76616c696420737761702072657175657374000000000000000000000000\n        /* \"#utility.yul\":17970:17971   */\n      0x00\n        /* \"#utility.yul\":17962:17968   */\n      dup3\n        /* \"#utility.yul\":17958:17972   */\n      add\n        /* \"#utility.yul\":17951:17997   */\n      mstore\n        /* \"#utility.yul\":17834:18004   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18010:18376   */\n    tag_294:\n        /* \"#utility.yul\":18152:18155   */\n      0x00\n        /* \"#utility.yul\":18173:18240   */\n      tag_464\n        /* \"#utility.yul\":18237:18239   */\n      0x14\n        /* \"#utility.yul\":18232:18235   */\n      dup4\n        /* \"#utility.yul\":18173:18240   */\n      tag_265\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":18166:18240   */\n      swap2\n      pop\n        /* \"#utility.yul\":18249:18342   */\n      tag_465\n        /* \"#utility.yul\":18338:18341   */\n      dup3\n        /* \"#utility.yul\":18249:18342   */\n      tag_293\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":18367:18369   */\n      0x20\n        /* \"#utility.yul\":18362:18365   */\n      dup3\n        /* \"#utility.yul\":18358:18370   */\n      add\n        /* \"#utility.yul\":18351:18370   */\n      swap1\n      pop\n        /* \"#utility.yul\":18010:18376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18382:18801   */\n    tag_200:\n        /* \"#utility.yul\":18548:18552   */\n      0x00\n        /* \"#utility.yul\":18586:18588   */\n      0x20\n        /* \"#utility.yul\":18575:18584   */\n      dup3\n        /* \"#utility.yul\":18571:18589   */\n      add\n        /* \"#utility.yul\":18563:18589   */\n      swap1\n      pop\n        /* \"#utility.yul\":18635:18644   */\n      dup2\n        /* \"#utility.yul\":18629:18633   */\n      dup2\n        /* \"#utility.yul\":18625:18645   */\n      sub\n        /* \"#utility.yul\":18621:18622   */\n      0x00\n        /* \"#utility.yul\":18610:18619   */\n      dup4\n        /* \"#utility.yul\":18606:18623   */\n      add\n        /* \"#utility.yul\":18599:18646   */\n      mstore\n        /* \"#utility.yul\":18663:18794   */\n      tag_467\n        /* \"#utility.yul\":18789:18793   */\n      dup2\n        /* \"#utility.yul\":18663:18794   */\n      tag_294\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":18655:18794   */\n      swap1\n      pop\n        /* \"#utility.yul\":18382:18801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18807:18984   */\n    tag_295:\n        /* \"#utility.yul\":18947:18976   */\n      0x4d75737420696e707574206d6f7265207468616e2030204554482e0000000000\n        /* \"#utility.yul\":18943:18944   */\n      0x00\n        /* \"#utility.yul\":18935:18941   */\n      dup3\n        /* \"#utility.yul\":18931:18945   */\n      add\n        /* \"#utility.yul\":18924:18977   */\n      mstore\n        /* \"#utility.yul\":18807:18984   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18990:19356   */\n    tag_296:\n        /* \"#utility.yul\":19132:19135   */\n      0x00\n        /* \"#utility.yul\":19153:19220   */\n      tag_470\n        /* \"#utility.yul\":19217:19219   */\n      0x1b\n        /* \"#utility.yul\":19212:19215   */\n      dup4\n        /* \"#utility.yul\":19153:19220   */\n      tag_265\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":19146:19220   */\n      swap2\n      pop\n        /* \"#utility.yul\":19229:19322   */\n      tag_471\n        /* \"#utility.yul\":19318:19321   */\n      dup3\n        /* \"#utility.yul\":19229:19322   */\n      tag_295\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":19347:19349   */\n      0x20\n        /* \"#utility.yul\":19342:19345   */\n      dup3\n        /* \"#utility.yul\":19338:19350   */\n      add\n        /* \"#utility.yul\":19331:19350   */\n      swap1\n      pop\n        /* \"#utility.yul\":18990:19356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19362:19781   */\n    tag_208:\n        /* \"#utility.yul\":19528:19532   */\n      0x00\n        /* \"#utility.yul\":19566:19568   */\n      0x20\n        /* \"#utility.yul\":19555:19564   */\n      dup3\n        /* \"#utility.yul\":19551:19569   */\n      add\n        /* \"#utility.yul\":19543:19569   */\n      swap1\n      pop\n        /* \"#utility.yul\":19615:19624   */\n      dup2\n        /* \"#utility.yul\":19609:19613   */\n      dup2\n        /* \"#utility.yul\":19605:19625   */\n      sub\n        /* \"#utility.yul\":19601:19602   */\n      0x00\n        /* \"#utility.yul\":19590:19599   */\n      dup4\n        /* \"#utility.yul\":19586:19603   */\n      add\n        /* \"#utility.yul\":19579:19626   */\n      mstore\n        /* \"#utility.yul\":19643:19774   */\n      tag_473\n        /* \"#utility.yul\":19769:19773   */\n      dup2\n        /* \"#utility.yul\":19643:19774   */\n      tag_296\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19635:19774   */\n      swap1\n      pop\n        /* \"#utility.yul\":19362:19781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19787:19966   */\n    tag_297:\n        /* \"#utility.yul\":19927:19958   */\n      0x4d757374206d61696e7461696e204554482f455243323020726174696f000000\n        /* \"#utility.yul\":19923:19924   */\n      0x00\n        /* \"#utility.yul\":19915:19921   */\n      dup3\n        /* \"#utility.yul\":19911:19925   */\n      add\n        /* \"#utility.yul\":19904:19959   */\n      mstore\n        /* \"#utility.yul\":19787:19966   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19972:20338   */\n    tag_298:\n        /* \"#utility.yul\":20114:20117   */\n      0x00\n        /* \"#utility.yul\":20135:20202   */\n      tag_476\n        /* \"#utility.yul\":20199:20201   */\n      0x1d\n        /* \"#utility.yul\":20194:20197   */\n      dup4\n        /* \"#utility.yul\":20135:20202   */\n      tag_265\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":20128:20202   */\n      swap2\n      pop\n        /* \"#utility.yul\":20211:20304   */\n      tag_477\n        /* \"#utility.yul\":20300:20303   */\n      dup3\n        /* \"#utility.yul\":20211:20304   */\n      tag_297\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20329:20331   */\n      0x20\n        /* \"#utility.yul\":20324:20327   */\n      dup3\n        /* \"#utility.yul\":20320:20332   */\n      add\n        /* \"#utility.yul\":20313:20332   */\n      swap1\n      pop\n        /* \"#utility.yul\":19972:20338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20344:20763   */\n    tag_228:\n        /* \"#utility.yul\":20510:20514   */\n      0x00\n        /* \"#utility.yul\":20548:20550   */\n      0x20\n        /* \"#utility.yul\":20537:20546   */\n      dup3\n        /* \"#utility.yul\":20533:20551   */\n      add\n        /* \"#utility.yul\":20525:20551   */\n      swap1\n      pop\n        /* \"#utility.yul\":20597:20606   */\n      dup2\n        /* \"#utility.yul\":20591:20595   */\n      dup2\n        /* \"#utility.yul\":20587:20607   */\n      sub\n        /* \"#utility.yul\":20583:20584   */\n      0x00\n        /* \"#utility.yul\":20572:20581   */\n      dup4\n        /* \"#utility.yul\":20568:20585   */\n      add\n        /* \"#utility.yul\":20561:20608   */\n      mstore\n        /* \"#utility.yul\":20625:20756   */\n      tag_479\n        /* \"#utility.yul\":20751:20755   */\n      dup2\n        /* \"#utility.yul\":20625:20756   */\n      tag_298\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":20617:20756   */\n      swap1\n      pop\n        /* \"#utility.yul\":20344:20763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20769:21322   */\n    tag_237:\n        /* \"#utility.yul\":20946:20950   */\n      0x00\n        /* \"#utility.yul\":20984:20987   */\n      0x80\n        /* \"#utility.yul\":20973:20982   */\n      dup3\n        /* \"#utility.yul\":20969:20988   */\n      add\n        /* \"#utility.yul\":20961:20988   */\n      swap1\n      pop\n        /* \"#utility.yul\":20998:21069   */\n      tag_481\n        /* \"#utility.yul\":21066:21067   */\n      0x00\n        /* \"#utility.yul\":21055:21064   */\n      dup4\n        /* \"#utility.yul\":21051:21068   */\n      add\n        /* \"#utility.yul\":21042:21048   */\n      dup8\n        /* \"#utility.yul\":20998:21069   */\n      tag_270\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":21079:21151   */\n      tag_482\n        /* \"#utility.yul\":21147:21149   */\n      0x20\n        /* \"#utility.yul\":21136:21145   */\n      dup4\n        /* \"#utility.yul\":21132:21150   */\n      add\n        /* \"#utility.yul\":21123:21129   */\n      dup7\n        /* \"#utility.yul\":21079:21151   */\n      tag_255\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":21161:21233   */\n      tag_483\n        /* \"#utility.yul\":21229:21231   */\n      0x40\n        /* \"#utility.yul\":21218:21227   */\n      dup4\n        /* \"#utility.yul\":21214:21232   */\n      add\n        /* \"#utility.yul\":21205:21211   */\n      dup6\n        /* \"#utility.yul\":21161:21233   */\n      tag_255\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":21243:21315   */\n      tag_484\n        /* \"#utility.yul\":21311:21313   */\n      0x60\n        /* \"#utility.yul\":21300:21309   */\n      dup4\n        /* \"#utility.yul\":21296:21314   */\n      add\n        /* \"#utility.yul\":21287:21293   */\n      dup5\n        /* \"#utility.yul\":21243:21315   */\n      tag_255\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":20769:21322   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21328:21505   */\n    tag_299:\n        /* \"#utility.yul\":21468:21497   */\n      0x455448206d7573742062652067726561746572207468616e20302e0000000000\n        /* \"#utility.yul\":21464:21465   */\n      0x00\n        /* \"#utility.yul\":21456:21462   */\n      dup3\n        /* \"#utility.yul\":21452:21466   */\n      add\n        /* \"#utility.yul\":21445:21498   */\n      mstore\n        /* \"#utility.yul\":21328:21505   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21511:21877   */\n    tag_300:\n        /* \"#utility.yul\":21653:21656   */\n      0x00\n        /* \"#utility.yul\":21674:21741   */\n      tag_487\n        /* \"#utility.yul\":21738:21740   */\n      0x1b\n        /* \"#utility.yul\":21733:21736   */\n      dup4\n        /* \"#utility.yul\":21674:21741   */\n      tag_265\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":21667:21741   */\n      swap2\n      pop\n        /* \"#utility.yul\":21750:21843   */\n      tag_488\n        /* \"#utility.yul\":21839:21842   */\n      dup3\n        /* \"#utility.yul\":21750:21843   */\n      tag_299\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":21868:21870   */\n      0x20\n        /* \"#utility.yul\":21863:21866   */\n      dup3\n        /* \"#utility.yul\":21859:21871   */\n      add\n        /* \"#utility.yul\":21852:21871   */\n      swap1\n      pop\n        /* \"#utility.yul\":21511:21877   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21883:22302   */\n    tag_241:\n        /* \"#utility.yul\":22049:22053   */\n      0x00\n        /* \"#utility.yul\":22087:22089   */\n      0x20\n        /* \"#utility.yul\":22076:22085   */\n      dup3\n        /* \"#utility.yul\":22072:22090   */\n      add\n        /* \"#utility.yul\":22064:22090   */\n      swap1\n      pop\n        /* \"#utility.yul\":22136:22145   */\n      dup2\n        /* \"#utility.yul\":22130:22134   */\n      dup2\n        /* \"#utility.yul\":22126:22146   */\n      sub\n        /* \"#utility.yul\":22122:22123   */\n      0x00\n        /* \"#utility.yul\":22111:22120   */\n      dup4\n        /* \"#utility.yul\":22107:22124   */\n      add\n        /* \"#utility.yul\":22100:22147   */\n      mstore\n        /* \"#utility.yul\":22164:22295   */\n      tag_490\n        /* \"#utility.yul\":22290:22294   */\n      dup2\n        /* \"#utility.yul\":22164:22295   */\n      tag_300\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":22156:22295   */\n      swap1\n      pop\n        /* \"#utility.yul\":21883:22302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207bd669e82bad2e117656b5dd4128b8040bc5e76af474fa0121685629cf403e1c64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_803": {
									"entryPoint": null,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200222c3803806200222c8339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b612102806200012a6000396000f3fe6080604052600436106100c25760003560e01c80638a13eea71161007f578063c8ab832511610059578063c8ab832514610283578063e0ba2000146102c0578063eb521a4c146102eb578063ed7bf8681461031b576100c2565b80638a13eea7146101f0578063903875f71461021b578063a932492f14610258576100c2565b80630a861f2a146100c75780631cde6226146100f0578063240f3dea1461011b57806329cbab3e146101585780636fd0ea921461017657806379ed3562146101b3575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e991906115aa565b610358565b005b3480156100fc57600080fd5b506101056106f8565b60405161011291906115e6565b60405180910390f35b34801561012757600080fd5b50610142600480360381019061013d91906115aa565b6106fe565b60405161014f91906115e6565b60405180910390f35b61016061081a565b60405161016d91906115e6565b60405180910390f35b34801561018257600080fd5b5061019d6004803603810190610198919061165f565b610a54565b6040516101aa91906115e6565b60405180910390f35b3480156101bf57600080fd5b506101da60048036038101906101d591906115aa565b610a6c565b6040516101e791906115e6565b60405180910390f35b3480156101fc57600080fd5b50610205610b87565b60405161021291906116eb565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d91906115aa565b610bab565b60405161024f91906115e6565b60405180910390f35b34801561026457600080fd5b5061026d610d5e565b60405161027a91906115e6565b60405180910390f35b34801561028f57600080fd5b506102aa60048036038101906102a591906115aa565b610d64565b6040516102b791906115e6565b60405180910390f35b3480156102cc57600080fd5b506102d5611076565b6040516102e291906115e6565b60405180910390f35b610305600480360381019061030091906115aa565b6110bd565b60405161031291906115e6565b60405180910390f35b34801561032757600080fd5b50610342600480360381019061033d91906115aa565b611453565b60405161034f91906115e6565b60405180910390f35b6000811161039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039290611789565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561041d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104149061181b565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161047e919061184a565b602060405180830381865afa15801561049b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bf919061187a565b9050600060015483856104d291906118d6565b6104dc9190611947565b9050600060015483866104ef91906118d6565b6104f99190611947565b905084600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054a9190611978565b9250508190555084600160008282546105639190611978565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156105b0573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161060c9291906119ac565b6020604051808303816000875af115801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190611a0d565b61068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068590611a86565b60405180910390fd5b808361069a9190611978565b82856106a69190611978565b6106b091906118d6565b6002819055507fb14f451e613015c13a17c78777f1d87fcb448d7330d67299a09b8f2db38aab108183876040516106e993929190611aa6565b60405180910390a15050505050565b60015481565b6000808211610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611b4f565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107a3919061184a565b602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061187a565b9050600081036107f957600092505050610815565b80848361080691906118d6565b6108109190611947565b925050505b919050565b600080341161085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085590611bbb565b60405180910390fd5b6000344761086c9190611978565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ca919061184a565b602060405180830381865afa1580156108e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090b919061187a565b90506000348361091b9190611bdb565b6002546109289190611947565b905080826109369190611978565b935060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016109939291906119ac565b6020604051808303816000875af11580156109b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d69190611a0d565b610a15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0c90611a86565b60405180910390fd5b7fcdfc57b3d0cdc24b23cea1f480aabea287321f5bee23ad76c2b52fa7982f5ea58434604051610a46929190611c0f565b60405180910390a150505090565b60036020528060005260406000206000915090505481565b6000808211610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790611caa565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b11919061184a565b602060405180830381865afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b52919061187a565b905060008483610b629190611bdb565b600254610b6f9190611947565b90508082610b7d9190611978565b9350505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808211610bef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be690611d3c565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c50919061184a565b602060405180830381865afa158015610c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c91919061187a565b905060008111610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90611da8565b60405180910390fd5b60008482610ce49190611bdb565b9050600081600254610cf69190611947565b90508084610d049190611978565b9450600085118015610d165750838511155b610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c90611e14565b60405180910390fd5b50505050919050565b60025481565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dc6919061184a565b602060405180830381865afa158015610de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e07919061187a565b905060008411610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390611d3c565b60405180910390fd5b60008111610e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8690611da8565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610eec93929190611e34565b6020604051808303816000875af1158015610f0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2f9190611a0d565b610f6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6590611eb7565b60405180910390fd5b60008482610f7c9190611bdb565b9050600081600254610f8e9190611947565b90508084610f9c9190611978565b9450600085118015610fae5750838511155b610fed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe490611f23565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015611033573d6000803e3d6000fd5b507f3297a389bb586920e62a196af529d5f42651b17a1013d6bfe77f22372a0b21128686604051611065929190611c0f565b60405180910390a150505050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000803411611101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f890611f8f565b60405180910390fd5b60008211611144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113b90611d3c565b60405180910390fd5b600034476111529190611978565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111b0919061184a565b602060405180830381865afa1580156111cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f1919061187a565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161125393929190611e34565b6020604051808303816000875af1158015611272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112969190611a0d565b9050806112d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cf90611eb7565b60405180910390fd5b6000600154036112eb5760649350611377565b6000839050600083905060003490506000889050828261130b91906118d6565b818561131791906118d6565b14611357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134e90611ffb565b60405180910390fd5b838260015461136691906118d6565b6113709190611947565b9750505050505b83600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113c69190611bdb565b9250508190555083600160008282546113df9190611bdb565b9250508190555084826113f29190611bdb565b34846113fe9190611bdb565b61140891906118d6565b6002819055507f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f50033863487604051611443949392919061201b565b60405180910390a1505050919050565b6000808211611497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148e906120ac565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114f8919061184a565b602060405180830381865afa158015611515573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611539919061187a565b90506000820361154e5760009250505061156a565b81848261155b91906118d6565b6115659190611947565b925050505b919050565b600080fd5b6000819050919050565b61158781611574565b811461159257600080fd5b50565b6000813590506115a48161157e565b92915050565b6000602082840312156115c0576115bf61156f565b5b60006115ce84828501611595565b91505092915050565b6115e081611574565b82525050565b60006020820190506115fb60008301846115d7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061162c82611601565b9050919050565b61163c81611621565b811461164757600080fd5b50565b60008135905061165981611633565b92915050565b6000602082840312156116755761167461156f565b5b60006116838482850161164a565b91505092915050565b6000819050919050565b60006116b16116ac6116a784611601565b61168c565b611601565b9050919050565b60006116c382611696565b9050919050565b60006116d5826116b8565b9050919050565b6116e5816116ca565b82525050565b600060208201905061170060008301846116dc565b92915050565b600082825260208201905092915050565b7f43616e6e6f74206275726e207a65726f206c697175696469747920706f73697460008201527f696f6e7300000000000000000000000000000000000000000000000000000000602082015250565b6000611773602483611706565b915061177e82611717565b604082019050919050565b600060208201905081810360008301526117a281611766565b9050919050565b7f4e6f7420656e6f756768206c697175696469747920706f736974696f6e73207460008201527f6f206275726e0000000000000000000000000000000000000000000000000000602082015250565b6000611805602683611706565b9150611810826117a9565b604082019050919050565b60006020820190508181036000830152611834816117f8565b9050919050565b61184481611621565b82525050565b600060208201905061185f600083018461183b565b92915050565b6000815190506118748161157e565b92915050565b6000602082840312156118905761188f61156f565b5b600061189e84828501611865565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118e182611574565b91506118ec83611574565b92508282026118fa81611574565b91508282048414831517611911576119106118a7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195282611574565b915061195d83611574565b92508261196d5761196c611918565b5b828204905092915050565b600061198382611574565b915061198e83611574565b92508282039050818111156119a6576119a56118a7565b5b92915050565b60006040820190506119c1600083018561183b565b6119ce60208301846115d7565b9392505050565b60008115159050919050565b6119ea816119d5565b81146119f557600080fd5b50565b600081519050611a07816119e1565b92915050565b600060208284031215611a2357611a2261156f565b5b6000611a31848285016119f8565b91505092915050565b7f4661696c656420746f2073656e6420455243323020746f6b656e730000000000600082015250565b6000611a70601b83611706565b9150611a7b82611a3a565b602082019050919050565b60006020820190508181036000830152611a9f81611a63565b9050919050565b6000606082019050611abb60008301866115d7565b611ac860208301856115d7565b611ad560408301846115d7565b949350505050565b7f455243323020746f6b656e206d7573742062652067726561746572207468616e60008201527f20302e0000000000000000000000000000000000000000000000000000000000602082015250565b6000611b39602383611706565b9150611b4482611add565b604082019050919050565b60006020820190508181036000830152611b6881611b2c565b9050919050565b7f4d757374206465706f736974206d6f7265207468616e2030204554482e000000600082015250565b6000611ba5601d83611706565b9150611bb082611b6f565b602082019050919050565b60006020820190508181036000830152611bd481611b98565b9050919050565b6000611be682611574565b9150611bf183611574565b9250828201905080821115611c0957611c086118a7565b5b92915050565b6000604082019050611c2460008301856115d7565b611c3160208301846115d7565b9392505050565b7f45544820616d6f756e74206d7573742062652067726561746572207468616e2060008201527f302e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c94602283611706565b9150611c9f82611c38565b604082019050919050565b60006020820190508181036000830152611cc381611c87565b9050919050565b7f4d75737420696e707574206d6f7265207468616e203020455243323020546f6b60008201527f656e2e0000000000000000000000000000000000000000000000000000000000602082015250565b6000611d26602383611706565b9150611d3182611cca565b604082019050919050565b60006020820190508181036000830152611d5581611d19565b9050919050565b7f496e73756666696369656e74206c69717569646974792e000000000000000000600082015250565b6000611d92601783611706565b9150611d9d82611d5c565b602082019050919050565b60006020820190508181036000830152611dc181611d85565b9050919050565b7f496e76616c6964207377617020657374696d6174650000000000000000000000600082015250565b6000611dfe601583611706565b9150611e0982611dc8565b602082019050919050565b60006020820190508181036000830152611e2d81611df1565b9050919050565b6000606082019050611e49600083018661183b565b611e56602083018561183b565b611e6360408301846115d7565b949350505050565b7f4552433230207472616e73666572206661696c65640000000000000000000000600082015250565b6000611ea1601583611706565b9150611eac82611e6b565b602082019050919050565b60006020820190508181036000830152611ed081611e94565b9050919050565b7f496e76616c696420737761702072657175657374000000000000000000000000600082015250565b6000611f0d601483611706565b9150611f1882611ed7565b602082019050919050565b60006020820190508181036000830152611f3c81611f00565b9050919050565b7f4d75737420696e707574206d6f7265207468616e2030204554482e0000000000600082015250565b6000611f79601b83611706565b9150611f8482611f43565b602082019050919050565b60006020820190508181036000830152611fa881611f6c565b9050919050565b7f4d757374206d61696e7461696e204554482f455243323020726174696f000000600082015250565b6000611fe5601d83611706565b9150611ff082611faf565b602082019050919050565b6000602082019050818103600083015261201481611fd8565b9050919050565b6000608082019050612030600083018761183b565b61203d60208301866115d7565b61204a60408301856115d7565b61205760608301846115d7565b95945050505050565b7f455448206d7573742062652067726561746572207468616e20302e0000000000600082015250565b6000612096601b83611706565b91506120a182612060565b602082019050919050565b600060208201905081810360008301526120c581612089565b905091905056fea26469706673582212207bd669e82bad2e117656b5dd4128b8040bc5e76af474fa0121685629cf403e1c64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x222C CODESIZE SUB DUP1 PUSH3 0x222C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xE8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x11A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB0 DUP3 PUSH3 0x83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0xA3 JUMP JUMPDEST DUP2 EQ PUSH3 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xE2 DUP2 PUSH3 0xB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x101 JUMPI PUSH3 0x100 PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x111 DUP5 DUP3 DUP6 ADD PUSH3 0xD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2102 DUP1 PUSH3 0x12A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A13EEA7 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xC8AB8325 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC8AB8325 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xE0BA2000 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xED7BF868 EQ PUSH2 0x31B JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x8A13EEA7 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x903875F7 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xA932492F EQ PUSH2 0x258 JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0xA861F2A EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x1CDE6226 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x240F3DEA EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x29CBAB3E EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x6FD0EA92 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x79ED3562 EQ PUSH2 0x1B3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x165F JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x205 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP1 PUSH2 0x1789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x414 SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP4 DUP6 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP4 DUP7 PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP3 SWAP2 SWAP1 PUSH2 0x19AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST DUP3 DUP6 PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xB14F451E613015C13A17C78777F1D87FCB448D7330D67299A09B8F2DB38AAB10 DUP2 DUP4 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x739 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x7F9 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x815 JUMP JUMPDEST DUP1 DUP5 DUP4 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x855 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SELFBALANCE PUSH2 0x86C SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90B SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLVALUE DUP4 PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x936 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP3 SWAP2 SWAP1 PUSH2 0x19AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D6 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xCDFC57B3D0CDC24B23CEA1F480AABEA287321F5BEE23AD76C2B52FA7982F5EA5 DUP5 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xA46 SWAP3 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 DUP4 PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE6 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP3 PUSH2 0xCE4 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 SLOAD PUSH2 0xCF6 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH2 0xD04 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0xD16 JUMPI POP DUP4 DUP6 GT ISZERO JUMPDEST PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x1E14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 GT PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE86 SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0xF6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF65 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP3 PUSH2 0xF7C SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 SLOAD PUSH2 0xF8E SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH2 0xF9C SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0xFAE JUMPI POP DUP4 DUP6 GT ISZERO JUMPDEST PUSH2 0xFED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP7 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1033 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0x3297A389BB586920E62A196AF529D5F42651B17A1013D6BFE77F22372A0B2112 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1065 SWAP3 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x1101 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F8 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SELFBALANCE PUSH2 0x1152 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B0 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1272 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CF SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x12EB JUMPI PUSH1 0x64 SWAP4 POP PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x0 DUP9 SWAP1 POP DUP3 DUP3 PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST DUP2 DUP6 PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST EQ PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH1 0x1 SLOAD PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP8 POP POP POP POP POP JUMPDEST DUP4 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13C6 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13DF SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST CALLVALUE DUP5 PUSH2 0x13FE SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x1408 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x3BCA7014F4C0CCC8016338C79F4C00E82068DBADAF4F01CA5449040FDD39F500 CALLER DUP7 CALLVALUE DUP8 PUSH1 0x40 MLOAD PUSH2 0x1443 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x201B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1497 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148E SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1515 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1539 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SUB PUSH2 0x154E JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x156A JUMP JUMPDEST DUP2 DUP5 DUP3 PUSH2 0x155B SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x1565 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1587 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP2 EQ PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A4 DUP2 PUSH2 0x157E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP5 DUP3 DUP6 ADD PUSH2 0x1595 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15E0 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x162C DUP3 PUSH2 0x1601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x1621 JUMP JUMPDEST DUP2 EQ PUSH2 0x1647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1659 DUP2 PUSH2 0x1633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1675 JUMPI PUSH2 0x1674 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1683 DUP5 DUP3 DUP6 ADD PUSH2 0x164A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B1 PUSH2 0x16AC PUSH2 0x16A7 DUP5 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C3 DUP3 PUSH2 0x1696 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D5 DUP3 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E5 DUP2 PUSH2 0x16CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1700 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206275726E207A65726F206C697175696469747920706F736974 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696F6E7300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1773 PUSH1 0x24 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x177E DUP3 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A2 DUP2 PUSH2 0x1766 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206C697175696469747920706F736974696F6E732074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F206275726E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1805 PUSH1 0x26 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1810 DUP3 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1834 DUP2 PUSH2 0x17F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1844 DUP2 PUSH2 0x1621 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x183B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1874 DUP2 PUSH2 0x157E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1890 JUMPI PUSH2 0x188F PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x189E DUP5 DUP3 DUP6 ADD PUSH2 0x1865 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EC DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18FA DUP2 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1911 JUMPI PUSH2 0x1910 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1952 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x195D DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x196D JUMPI PUSH2 0x196C PUSH2 0x1918 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1983 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x198E DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19C1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x19CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x19D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A07 DUP2 PUSH2 0x19E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A23 JUMPI PUSH2 0x1A22 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A31 DUP5 DUP3 DUP6 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E6420455243323020746F6B656E730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A70 PUSH1 0x1B DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7B DUP3 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A9F DUP2 PUSH2 0x1A63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x1AC8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x1AD5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x455243323020746F6B656E206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20302E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B39 PUSH1 0x23 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B44 DUP3 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B68 DUP2 PUSH2 0x1B2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206465706F736974206D6F7265207468616E2030204554482E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 PUSH1 0x1D DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD4 DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE6 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF1 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C24 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x1C31 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x302E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C94 PUSH1 0x22 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9F DUP3 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC3 DUP2 PUSH2 0x1C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D75737420696E707574206D6F7265207468616E203020455243323020546F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E2E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D26 PUSH1 0x23 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D31 DUP3 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 PUSH2 0x1D19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 PUSH1 0x17 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9D DUP3 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC1 DUP2 PUSH2 0x1D85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207377617020657374696D6174650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DFE PUSH1 0x15 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E09 DUP3 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E2D DUP2 PUSH2 0x1DF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E49 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x1E56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x1E63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH1 0x15 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAC DUP3 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED0 DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420737761702072657175657374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0D PUSH1 0x14 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F18 DUP3 PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3C DUP2 PUSH2 0x1F00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D75737420696E707574206D6F7265207468616E2030204554482E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F79 PUSH1 0x1B DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F84 DUP3 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA8 DUP2 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206D61696E7461696E204554482F455243323020726174696F000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE5 PUSH1 0x1D DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF0 DUP3 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2014 DUP2 PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2030 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x203D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x204A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x2057 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x455448206D7573742062652067726561746572207468616E20302E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2096 PUSH1 0x1B DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x20A1 DUP3 PUSH2 0x2060 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20C5 DUP2 PUSH2 0x2089 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD669E82BAD2E117656B5DD4128B8040BC5E76AF474FA0121685629CF BLOCKHASH RETURNDATACOPY SHR PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "121:8764:5:-:0;;;365:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;429:13;410:10;;:33;;;;;;;;;;;;;;;;;;365:85;121:8764;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;121:8764:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@K_787": {
									"entryPoint": 3422,
									"id": 787,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Token_783": {
									"entryPoint": 2951,
									"id": 783,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@estimateERC20TokenToProvide_1046": {
									"entryPoint": 5203,
									"id": 1046,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@estimateEthToProvide_996": {
									"entryPoint": 1790,
									"id": 996,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@estimateSwapForERC20Token_1451": {
									"entryPoint": 2668,
									"id": 1451,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@estimateSwapForEth_1332": {
									"entryPoint": 2987,
									"id": 1332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMyLiquidityPositions_1057": {
									"entryPoint": 4214,
									"id": 1057,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@liquidityPositions_791": {
									"entryPoint": 2644,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@provideLiquidity_946": {
									"entryPoint": 4285,
									"id": 946,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapForERC20Token_1401": {
									"entryPoint": 2074,
									"id": 1401,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@swapForEth_1261": {
									"entryPoint": 3428,
									"id": 1261,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalLiquidityPositions_785": {
									"entryPoint": 1784,
									"id": 785,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawLiquidity_1162": {
									"entryPoint": 856,
									"id": 1162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack": {
									"entryPoint": 5852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7732,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8219,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed": {
									"entryPoint": 5867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7183,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6822,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$651_to_t_address": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff": {
									"entryPoint": 7787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f": {
									"entryPoint": 5911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5": {
									"entryPoint": 8111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582": {
									"entryPoint": 6714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051": {
									"entryPoint": 7624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545": {
									"entryPoint": 7516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff": {
									"entryPoint": 7224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22305:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:6"
															},
															"nodeType": "YulIf",
															"src": "766:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:6",
														"type": ""
													}
												],
												"src": "690:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:6",
														"type": ""
													}
												],
												"src": "1025:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:6",
														"type": ""
													}
												],
												"src": "1149:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:6",
														"type": ""
													}
												],
												"src": "1377:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:6",
														"type": ""
													}
												],
												"src": "1509:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:6"
															},
															"nodeType": "YulIf",
															"src": "1664:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													}
												],
												"src": "1611:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													}
												],
												"src": "1739:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:6"
															},
															"nodeType": "YulIf",
															"src": "1960:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:6",
														"type": ""
													}
												],
												"src": "1884:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2251:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2261:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2268:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2237:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2247:3:6",
														"type": ""
													}
												],
												"src": "2219:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2345:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2355:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2325:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2335:9:6",
														"type": ""
													}
												],
												"src": "2285:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2493:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2503:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2473:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2483:9:6",
														"type": ""
													}
												],
												"src": "2433:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2638:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2648:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2692:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2661:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2648:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$651_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2618:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2628:9:6",
														"type": ""
													}
												],
												"src": "2565:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2788:79:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2805:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2854:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$651_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2810:43:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2810:50:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:63:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2798:63:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2776:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2783:3:6",
														"type": ""
													}
												],
												"src": "2710:157:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2984:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2994:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3006:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3017:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3002:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2994:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3087:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3100:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3111:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3096:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3030:56:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3030:84:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3030:84:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2956:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2968:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2979:4:6",
														"type": ""
													}
												],
												"src": "2873:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3223:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3240:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3245:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3233:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3261:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3280:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3276:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3261:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3195:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3200:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3211:11:6",
														"type": ""
													}
												],
												"src": "3127:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3408:117:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3430:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3438:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3426:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3426:14:6"
																	},
																	{
																		"hexValue": "43616e6e6f74206275726e207a65726f206c697175696469747920706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3442:34:6",
																		"type": "",
																		"value": "Cannot burn zero liquidity posit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3419:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3498:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3506:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3494:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3494:15:6"
																	},
																	{
																		"hexValue": "696f6e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3511:6:6",
																		"type": "",
																		"value": "ions"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3487:31:6"
														}
													]
												},
												"name": "store_literal_in_memory_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3400:6:6",
														"type": ""
													}
												],
												"src": "3302:223:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3677:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3687:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3753:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3758:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3694:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3694:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3859:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f",
																	"nodeType": "YulIdentifier",
																	"src": "3770:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3770:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3872:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3883:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3888:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3879:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3872:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3665:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3673:3:6",
														"type": ""
													}
												],
												"src": "3531:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4074:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4084:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4096:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4107:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4092:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4084:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4131:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4142:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4127:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4127:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4146:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4120:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4120:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4176:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4310:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4184:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4176:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4054:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4069:4:6",
														"type": ""
													}
												],
												"src": "3903:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4434:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4456:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4464:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4452:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4452:14:6"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206c697175696469747920706f736974696f6e732074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4468:34:6",
																		"type": "",
																		"value": "Not enough liquidity positions t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4445:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4445:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4445:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4532:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4520:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4520:15:6"
																	},
																	{
																		"hexValue": "6f206275726e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4537:8:6",
																		"type": "",
																		"value": "o burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4513:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4513:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4426:6:6",
														"type": ""
													}
												],
												"src": "4328:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4705:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4715:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4781:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4786:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4722:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4887:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6",
																	"nodeType": "YulIdentifier",
																	"src": "4798:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4798:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4900:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4911:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4916:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4907:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4907:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4900:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4693:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4701:3:6",
														"type": ""
													}
												],
												"src": "4559:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5112:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5124:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5120:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5159:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5170:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5155:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5155:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5178:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5184:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5174:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5148:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5148:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5204:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5338:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5212:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5204:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5082:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5097:4:6",
														"type": ""
													}
												],
												"src": "4931:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5421:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5438:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5461:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5443:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5443:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5431:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5431:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5431:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5409:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5416:3:6",
														"type": ""
													}
												],
												"src": "5356:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5578:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5588:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5600:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5611:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5588:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5668:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5681:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5692:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5677:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5677:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5624:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5550:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5562:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5573:4:6",
														"type": ""
													}
												],
												"src": "5480:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5771:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5781:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5796:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5790:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5790:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5781:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5839:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5812:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5812:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5812:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5749:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5757:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5765:5:6",
														"type": ""
													}
												],
												"src": "5708:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5934:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5980:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5982:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5982:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5982:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5955:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5951:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5976:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5947:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5947:32:6"
															},
															"nodeType": "YulIf",
															"src": "5944:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6073:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6088:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6102:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6092:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6117:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6163:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6174:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6159:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6159:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6183:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6127:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6117:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5904:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5915:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5927:6:6",
														"type": ""
													}
												],
												"src": "5857:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6259:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6262:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6252:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6252:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6356:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6359:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6349:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6349:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6380:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6383:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6373:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6373:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6373:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6214:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6448:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6458:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6481:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6463:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6458:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6492:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6515:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6497:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6492:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6526:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6549:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6552:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6545:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6530:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6563:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "6592:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6574:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6563:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6781:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6783:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6783:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6783:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6714:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6707:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6707:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6737:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6744:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6753:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6740:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6740:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6734:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6734:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6687:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6687:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:113:6"
															},
															"nodeType": "YulIf",
															"src": "6664:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6431:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6434:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6440:7:6",
														"type": ""
													}
												],
												"src": "6400:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6844:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6861:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6864:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6854:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6854:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6854:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6958:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6961:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6951:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6951:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6951:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6982:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6985:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6975:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6975:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6816:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7044:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7054:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7077:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7059:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7059:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7054:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7088:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7111:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7093:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7093:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7088:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7135:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7137:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7137:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7137:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7132:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7125:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:9:6"
															},
															"nodeType": "YulIf",
															"src": "7122:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7167:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7176:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7179:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7172:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7172:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7167:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7033:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7036:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7042:1:6",
														"type": ""
													}
												],
												"src": "7002:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7238:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7248:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7271:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7253:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7248:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7282:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7305:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7287:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7287:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7282:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7316:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7328:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7331:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7324:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7316:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7358:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7360:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7360:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7360:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7349:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7355:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7346:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7346:11:6"
															},
															"nodeType": "YulIf",
															"src": "7343:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7224:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7227:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7233:4:6",
														"type": ""
													}
												],
												"src": "7193:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7519:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7529:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7541:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7552:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7537:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7537:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7529:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7609:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7622:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7633:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7618:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7618:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7565:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7565:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7565:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7690:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7703:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7714:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7699:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7699:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7646:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7646:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7646:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7483:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7495:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7503:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7514:4:6",
														"type": ""
													}
												],
												"src": "7393:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7773:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7783:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7808:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7801:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7801:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7794:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7783:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7755:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7765:7:6",
														"type": ""
													}
												],
												"src": "7731:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7867:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7921:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7930:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7933:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7923:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7923:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7923:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7890:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7912:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7897:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7897:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7887:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7887:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7880:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7880:40:6"
															},
															"nodeType": "YulIf",
															"src": "7877:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7860:5:6",
														"type": ""
													}
												],
												"src": "7827:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8009:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8019:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8034:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8028:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8028:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8019:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8074:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8050:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8050:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7987:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7995:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8003:5:6",
														"type": ""
													}
												],
												"src": "7949:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8166:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8212:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8214:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8214:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8214:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8187:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8196:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8183:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8183:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8208:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8179:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8179:32:6"
															},
															"nodeType": "YulIf",
															"src": "8176:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "8305:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8320:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8334:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8324:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8349:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8392:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8403:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8388:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8388:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8412:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8359:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8359:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8349:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8136:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8147:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8159:6:6",
														"type": ""
													}
												],
												"src": "8092:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8549:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8571:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8579:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8567:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8567:14:6"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e6420455243323020746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8583:29:6",
																		"type": "",
																		"value": "Failed to send ERC20 tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8560:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8541:6:6",
														"type": ""
													}
												],
												"src": "8443:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8772:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8782:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8848:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8853:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8789:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8789:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8782:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8954:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582",
																	"nodeType": "YulIdentifier",
																	"src": "8865:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8865:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8865:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8967:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8978:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8983:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8974:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8974:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8967:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8760:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8768:3:6",
														"type": ""
													}
												],
												"src": "8626:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9169:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9179:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9191:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9202:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9187:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9187:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9179:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9226:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9237:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9222:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9222:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9245:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9251:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9241:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9241:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9215:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9215:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9215:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9271:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9405:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9279:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9271:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9149:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9164:4:6",
														"type": ""
													}
												],
												"src": "8998:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9577:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9587:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9599:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9610:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9595:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9595:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9587:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9667:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9680:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9691:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9676:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9676:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9623:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9623:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9623:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9748:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9761:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9772:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9757:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9704:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9704:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9704:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9830:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9843:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9854:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9839:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9839:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9786:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9786:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9786:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9533:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9545:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9553:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9561:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9572:4:6",
														"type": ""
													}
												],
												"src": "9423:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9977:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9999:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10007:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9995:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9995:14:6"
																	},
																	{
																		"hexValue": "455243323020746f6b656e206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10011:34:6",
																		"type": "",
																		"value": "ERC20 token must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9988:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10067:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10075:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10063:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10063:15:6"
																	},
																	{
																		"hexValue": "20302e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10080:5:6",
																		"type": "",
																		"value": " 0."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10056:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10056:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10056:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9969:6:6",
														"type": ""
													}
												],
												"src": "9871:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10245:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10255:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10321:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10326:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10262:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10262:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10255:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10427:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c",
																	"nodeType": "YulIdentifier",
																	"src": "10338:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10338:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10338:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10440:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10451:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10456:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10447:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10447:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10440:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10233:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10241:3:6",
														"type": ""
													}
												],
												"src": "10099:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10642:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10652:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10664:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10675:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10660:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10660:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10652:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10699:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10710:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10695:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10695:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10718:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10724:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10714:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10714:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10688:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10688:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10688:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10744:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10878:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10752:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10752:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10744:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10622:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10637:4:6",
														"type": ""
													}
												],
												"src": "10471:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11002:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11024:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11032:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11020:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11020:14:6"
																	},
																	{
																		"hexValue": "4d757374206465706f736974206d6f7265207468616e2030204554482e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11036:31:6",
																		"type": "",
																		"value": "Must deposit more than 0 ETH."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11013:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11013:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11013:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10994:6:6",
														"type": ""
													}
												],
												"src": "10896:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11227:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11237:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11303:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11308:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11244:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11244:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11237:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11409:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c",
																	"nodeType": "YulIdentifier",
																	"src": "11320:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11320:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11320:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11422:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11433:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11438:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11429:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11429:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11422:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11215:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11223:3:6",
														"type": ""
													}
												],
												"src": "11081:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11624:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11634:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11646:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11657:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11642:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11642:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11634:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11681:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11692:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11677:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11677:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11700:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11706:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11696:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11696:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11670:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11670:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11670:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11726:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11860:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11734:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11734:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11726:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11604:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11619:4:6",
														"type": ""
													}
												],
												"src": "11453:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11922:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11932:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11955:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11937:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11937:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11932:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11966:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11989:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11971:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11971:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11966:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12000:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12011:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12014:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12007:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12007:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12000:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12040:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12042:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12042:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12042:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12032:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12035:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12029:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12029:10:6"
															},
															"nodeType": "YulIf",
															"src": "12026:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11909:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11912:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11918:3:6",
														"type": ""
													}
												],
												"src": "11878:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12201:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12211:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12223:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12234:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12219:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12219:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12211:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12291:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12304:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12315:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12300:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12300:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12247:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12247:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12247:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12372:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12385:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12396:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12381:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12381:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12328:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12328:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12328:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12165:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12177:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12196:4:6",
														"type": ""
													}
												],
												"src": "12075:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12519:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12541:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12549:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12537:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12537:14:6"
																	},
																	{
																		"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12553:34:6",
																		"type": "",
																		"value": "ETH amount must be greater than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12530:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12530:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12609:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12617:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12605:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12605:15:6"
																	},
																	{
																		"hexValue": "302e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12622:4:6",
																		"type": "",
																		"value": "0."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12598:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12598:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12598:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12511:6:6",
														"type": ""
													}
												],
												"src": "12413:221:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12786:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12796:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12862:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12867:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12803:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12803:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12796:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12968:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff",
																	"nodeType": "YulIdentifier",
																	"src": "12879:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12879:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12879:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12981:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12992:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12997:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12988:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12988:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12981:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12774:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12782:3:6",
														"type": ""
													}
												],
												"src": "12640:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13183:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13193:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13205:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13216:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13201:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13201:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13193:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13240:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13251:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13236:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13236:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13259:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13265:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13255:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13255:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13229:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13229:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13229:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13285:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13419:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13293:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13293:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13285:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13163:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13178:4:6",
														"type": ""
													}
												],
												"src": "13012:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13543:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13565:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13573:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13561:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13561:14:6"
																	},
																	{
																		"hexValue": "4d75737420696e707574206d6f7265207468616e203020455243323020546f6b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13577:34:6",
																		"type": "",
																		"value": "Must input more than 0 ERC20 Tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13554:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13554:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13554:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13633:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13641:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13629:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13629:15:6"
																	},
																	{
																		"hexValue": "656e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13646:5:6",
																		"type": "",
																		"value": "en."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13622:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13622:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13622:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13535:6:6",
														"type": ""
													}
												],
												"src": "13437:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13811:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13821:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13887:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13892:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13828:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13828:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13821:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13993:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2",
																	"nodeType": "YulIdentifier",
																	"src": "13904:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13904:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13904:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14006:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14017:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14022:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14013:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14013:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14006:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13799:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13807:3:6",
														"type": ""
													}
												],
												"src": "13665:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14208:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14218:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14230:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14241:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14226:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14226:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14218:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14265:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14276:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14261:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14261:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14284:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14290:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14280:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14280:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14254:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14254:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14254:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14310:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14444:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14318:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14310:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14188:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14203:4:6",
														"type": ""
													}
												],
												"src": "14037:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14568:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14590:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14598:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14586:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14586:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c69717569646974792e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14602:25:6",
																		"type": "",
																		"value": "Insufficient liquidity."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14579:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14579:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14579:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14560:6:6",
														"type": ""
													}
												],
												"src": "14462:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14787:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14797:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14863:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14868:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14804:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14804:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14797:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14969:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545",
																	"nodeType": "YulIdentifier",
																	"src": "14880:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14880:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14880:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14982:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14993:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14998:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14989:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14989:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14982:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14775:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14783:3:6",
														"type": ""
													}
												],
												"src": "14641:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15184:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15194:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15206:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15217:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15202:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15202:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15194:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15241:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15252:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15237:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15237:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15260:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15266:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15256:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15256:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15230:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15230:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15230:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15286:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15420:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15294:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15294:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15286:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15164:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15179:4:6",
														"type": ""
													}
												],
												"src": "15013:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15544:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15566:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15574:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15562:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15562:14:6"
																	},
																	{
																		"hexValue": "496e76616c6964207377617020657374696d617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15578:23:6",
																		"type": "",
																		"value": "Invalid swap estimate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15555:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15555:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15555:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15536:6:6",
														"type": ""
													}
												],
												"src": "15438:171:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15761:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15771:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15837:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15842:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15778:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15778:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15771:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15943:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051",
																	"nodeType": "YulIdentifier",
																	"src": "15854:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15854:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15854:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15956:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15967:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15972:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15963:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15963:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15956:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15749:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15757:3:6",
														"type": ""
													}
												],
												"src": "15615:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16158:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16168:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16180:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16191:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16176:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16176:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16168:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16215:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16226:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16211:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16211:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16234:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16240:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16230:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16230:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16204:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16204:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16204:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16260:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16394:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16268:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16268:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16260:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16138:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16153:4:6",
														"type": ""
													}
												],
												"src": "15987:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16566:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16576:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16588:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16599:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16584:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16584:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16576:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16656:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16669:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16680:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16665:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16665:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16612:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16612:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16612:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16737:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16750:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16761:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16746:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16746:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16693:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16693:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16693:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16819:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16832:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16843:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16828:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16828:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16775:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16775:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16775:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16522:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16534:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16542:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16550:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16561:4:6",
														"type": ""
													}
												],
												"src": "16412:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16966:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16988:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16996:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16984:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16984:14:6"
																	},
																	{
																		"hexValue": "4552433230207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17000:23:6",
																		"type": "",
																		"value": "ERC20 transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16977:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16977:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16977:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16958:6:6",
														"type": ""
													}
												],
												"src": "16860:171:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17183:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17193:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17259:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17264:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17200:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17200:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17193:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17365:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																	"nodeType": "YulIdentifier",
																	"src": "17276:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17276:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17276:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17378:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17389:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17394:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17385:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17385:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17378:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17171:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17179:3:6",
														"type": ""
													}
												],
												"src": "17037:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17580:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17590:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17602:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17613:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17598:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17598:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17590:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17637:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17648:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17633:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17633:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17656:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17662:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17652:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17626:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17626:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17626:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17682:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17816:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17690:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17690:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17682:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17560:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17575:4:6",
														"type": ""
													}
												],
												"src": "17409:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17940:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17962:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17970:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17958:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17958:14:6"
																	},
																	{
																		"hexValue": "496e76616c696420737761702072657175657374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17974:22:6",
																		"type": "",
																		"value": "Invalid swap request"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17951:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17951:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17951:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17932:6:6",
														"type": ""
													}
												],
												"src": "17834:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18156:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18166:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18232:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18237:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18173:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18173:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18166:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18338:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b",
																	"nodeType": "YulIdentifier",
																	"src": "18249:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18249:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18249:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18351:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18362:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18367:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18358:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18358:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18351:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18144:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18152:3:6",
														"type": ""
													}
												],
												"src": "18010:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18553:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18563:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18575:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18586:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18571:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18571:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18563:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18610:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18621:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18606:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18606:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18629:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18635:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18625:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18625:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18599:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18599:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18599:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18655:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18789:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18663:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18663:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18655:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18533:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18548:4:6",
														"type": ""
													}
												],
												"src": "18382:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18913:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18935:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18943:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18931:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18931:14:6"
																	},
																	{
																		"hexValue": "4d75737420696e707574206d6f7265207468616e2030204554482e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18947:29:6",
																		"type": "",
																		"value": "Must input more than 0 ETH."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18924:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18924:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18924:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18905:6:6",
														"type": ""
													}
												],
												"src": "18807:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19136:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19146:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19212:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19217:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19153:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19153:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19146:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19318:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856",
																	"nodeType": "YulIdentifier",
																	"src": "19229:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19229:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19229:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19331:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19342:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19347:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19338:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19338:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19331:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19124:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19132:3:6",
														"type": ""
													}
												],
												"src": "18990:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19533:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19543:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19555:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19566:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19551:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19551:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19543:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19590:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19601:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19586:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19586:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19609:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19615:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19605:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19605:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19579:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19579:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19579:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19635:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19769:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19643:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19643:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19635:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19513:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19528:4:6",
														"type": ""
													}
												],
												"src": "19362:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19893:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19915:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19923:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19911:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19911:14:6"
																	},
																	{
																		"hexValue": "4d757374206d61696e7461696e204554482f455243323020726174696f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19927:31:6",
																		"type": "",
																		"value": "Must maintain ETH/ERC20 ratio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19904:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "19904:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19904:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19885:6:6",
														"type": ""
													}
												],
												"src": "19787:179:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20118:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20128:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20194:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20199:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20135:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20135:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20128:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20300:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5",
																	"nodeType": "YulIdentifier",
																	"src": "20211:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20211:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20211:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20313:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20324:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20329:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20320:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20320:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20313:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20106:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20114:3:6",
														"type": ""
													}
												],
												"src": "19972:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20515:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20525:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20537:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20548:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20533:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20533:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20525:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20572:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20583:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20568:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20568:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20591:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20597:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20587:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20587:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20561:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20561:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20561:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20617:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20751:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20625:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20625:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20617:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20495:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20510:4:6",
														"type": ""
													}
												],
												"src": "20344:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20951:371:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20961:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20973:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20984:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20969:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20969:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20961:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21042:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21055:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21066:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21051:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21051:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20998:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "20998:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20998:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21123:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21136:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21147:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21132:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21132:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21079:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21079:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21079:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21205:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21218:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21229:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21214:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21214:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21161:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21161:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21161:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21287:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21300:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21311:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21296:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21296:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21243:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21243:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21243:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20899:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20911:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20919:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20927:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20935:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20946:4:6",
														"type": ""
													}
												],
												"src": "20769:553:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21434:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21456:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21464:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21452:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21452:14:6"
																	},
																	{
																		"hexValue": "455448206d7573742062652067726561746572207468616e20302e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21468:29:6",
																		"type": "",
																		"value": "ETH must be greater than 0."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21445:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21445:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21445:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21426:6:6",
														"type": ""
													}
												],
												"src": "21328:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21657:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21667:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21733:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21738:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21674:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21674:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21667:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21839:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20",
																	"nodeType": "YulIdentifier",
																	"src": "21750:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21750:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21750:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21852:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21863:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21868:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21859:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "21859:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21852:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21645:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21653:3:6",
														"type": ""
													}
												],
												"src": "21511:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22054:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22064:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22076:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22087:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22072:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "22072:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22064:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22111:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22122:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22107:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22107:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22130:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22136:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22126:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22126:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22100:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "22100:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22100:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22156:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22290:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22164:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "22164:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22156:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22034:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22049:4:6",
														"type": ""
													}
												],
												"src": "21883:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot burn zero liquidity posit\")\n\n        mstore(add(memPtr, 32), \"ions\")\n\n    }\n\n    function abi_encode_t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough liquidity positions t\")\n\n        mstore(add(memPtr, 32), \"o burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send ERC20 tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 token must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0.\")\n\n    }\n\n    function abi_encode_t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must deposit more than 0 ETH.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH amount must be greater than \")\n\n        mstore(add(memPtr, 32), \"0.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must input more than 0 ERC20 Tok\")\n\n        mstore(add(memPtr, 32), \"en.\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid swap estimate\")\n\n    }\n\n    function abi_encode_t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid swap request\")\n\n    }\n\n    function abi_encode_t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must input more than 0 ETH.\")\n\n    }\n\n    function abi_encode_t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must maintain ETH/ERC20 ratio\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH must be greater than 0.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100c25760003560e01c80638a13eea71161007f578063c8ab832511610059578063c8ab832514610283578063e0ba2000146102c0578063eb521a4c146102eb578063ed7bf8681461031b576100c2565b80638a13eea7146101f0578063903875f71461021b578063a932492f14610258576100c2565b80630a861f2a146100c75780631cde6226146100f0578063240f3dea1461011b57806329cbab3e146101585780636fd0ea921461017657806379ed3562146101b3575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e991906115aa565b610358565b005b3480156100fc57600080fd5b506101056106f8565b60405161011291906115e6565b60405180910390f35b34801561012757600080fd5b50610142600480360381019061013d91906115aa565b6106fe565b60405161014f91906115e6565b60405180910390f35b61016061081a565b60405161016d91906115e6565b60405180910390f35b34801561018257600080fd5b5061019d6004803603810190610198919061165f565b610a54565b6040516101aa91906115e6565b60405180910390f35b3480156101bf57600080fd5b506101da60048036038101906101d591906115aa565b610a6c565b6040516101e791906115e6565b60405180910390f35b3480156101fc57600080fd5b50610205610b87565b60405161021291906116eb565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d91906115aa565b610bab565b60405161024f91906115e6565b60405180910390f35b34801561026457600080fd5b5061026d610d5e565b60405161027a91906115e6565b60405180910390f35b34801561028f57600080fd5b506102aa60048036038101906102a591906115aa565b610d64565b6040516102b791906115e6565b60405180910390f35b3480156102cc57600080fd5b506102d5611076565b6040516102e291906115e6565b60405180910390f35b610305600480360381019061030091906115aa565b6110bd565b60405161031291906115e6565b60405180910390f35b34801561032757600080fd5b50610342600480360381019061033d91906115aa565b611453565b60405161034f91906115e6565b60405180910390f35b6000811161039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039290611789565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561041d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104149061181b565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161047e919061184a565b602060405180830381865afa15801561049b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bf919061187a565b9050600060015483856104d291906118d6565b6104dc9190611947565b9050600060015483866104ef91906118d6565b6104f99190611947565b905084600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054a9190611978565b9250508190555084600160008282546105639190611978565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156105b0573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161060c9291906119ac565b6020604051808303816000875af115801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190611a0d565b61068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068590611a86565b60405180910390fd5b808361069a9190611978565b82856106a69190611978565b6106b091906118d6565b6002819055507fb14f451e613015c13a17c78777f1d87fcb448d7330d67299a09b8f2db38aab108183876040516106e993929190611aa6565b60405180910390a15050505050565b60015481565b6000808211610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611b4f565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107a3919061184a565b602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061187a565b9050600081036107f957600092505050610815565b80848361080691906118d6565b6108109190611947565b925050505b919050565b600080341161085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085590611bbb565b60405180910390fd5b6000344761086c9190611978565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ca919061184a565b602060405180830381865afa1580156108e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090b919061187a565b90506000348361091b9190611bdb565b6002546109289190611947565b905080826109369190611978565b935060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016109939291906119ac565b6020604051808303816000875af11580156109b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d69190611a0d565b610a15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0c90611a86565b60405180910390fd5b7fcdfc57b3d0cdc24b23cea1f480aabea287321f5bee23ad76c2b52fa7982f5ea58434604051610a46929190611c0f565b60405180910390a150505090565b60036020528060005260406000206000915090505481565b6000808211610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790611caa565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b11919061184a565b602060405180830381865afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b52919061187a565b905060008483610b629190611bdb565b600254610b6f9190611947565b90508082610b7d9190611978565b9350505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808211610bef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be690611d3c565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c50919061184a565b602060405180830381865afa158015610c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c91919061187a565b905060008111610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90611da8565b60405180910390fd5b60008482610ce49190611bdb565b9050600081600254610cf69190611947565b90508084610d049190611978565b9450600085118015610d165750838511155b610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c90611e14565b60405180910390fd5b50505050919050565b60025481565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dc6919061184a565b602060405180830381865afa158015610de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e07919061187a565b905060008411610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390611d3c565b60405180910390fd5b60008111610e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8690611da8565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610eec93929190611e34565b6020604051808303816000875af1158015610f0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2f9190611a0d565b610f6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6590611eb7565b60405180910390fd5b60008482610f7c9190611bdb565b9050600081600254610f8e9190611947565b90508084610f9c9190611978565b9450600085118015610fae5750838511155b610fed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe490611f23565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015611033573d6000803e3d6000fd5b507f3297a389bb586920e62a196af529d5f42651b17a1013d6bfe77f22372a0b21128686604051611065929190611c0f565b60405180910390a150505050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000803411611101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f890611f8f565b60405180910390fd5b60008211611144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113b90611d3c565b60405180910390fd5b600034476111529190611978565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111b0919061184a565b602060405180830381865afa1580156111cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f1919061187a565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161125393929190611e34565b6020604051808303816000875af1158015611272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112969190611a0d565b9050806112d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cf90611eb7565b60405180910390fd5b6000600154036112eb5760649350611377565b6000839050600083905060003490506000889050828261130b91906118d6565b818561131791906118d6565b14611357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134e90611ffb565b60405180910390fd5b838260015461136691906118d6565b6113709190611947565b9750505050505b83600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113c69190611bdb565b9250508190555083600160008282546113df9190611bdb565b9250508190555084826113f29190611bdb565b34846113fe9190611bdb565b61140891906118d6565b6002819055507f3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f50033863487604051611443949392919061201b565b60405180910390a1505050919050565b6000808211611497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148e906120ac565b60405180910390fd5b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114f8919061184a565b602060405180830381865afa158015611515573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611539919061187a565b90506000820361154e5760009250505061156a565b81848261155b91906118d6565b6115659190611947565b925050505b919050565b600080fd5b6000819050919050565b61158781611574565b811461159257600080fd5b50565b6000813590506115a48161157e565b92915050565b6000602082840312156115c0576115bf61156f565b5b60006115ce84828501611595565b91505092915050565b6115e081611574565b82525050565b60006020820190506115fb60008301846115d7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061162c82611601565b9050919050565b61163c81611621565b811461164757600080fd5b50565b60008135905061165981611633565b92915050565b6000602082840312156116755761167461156f565b5b60006116838482850161164a565b91505092915050565b6000819050919050565b60006116b16116ac6116a784611601565b61168c565b611601565b9050919050565b60006116c382611696565b9050919050565b60006116d5826116b8565b9050919050565b6116e5816116ca565b82525050565b600060208201905061170060008301846116dc565b92915050565b600082825260208201905092915050565b7f43616e6e6f74206275726e207a65726f206c697175696469747920706f73697460008201527f696f6e7300000000000000000000000000000000000000000000000000000000602082015250565b6000611773602483611706565b915061177e82611717565b604082019050919050565b600060208201905081810360008301526117a281611766565b9050919050565b7f4e6f7420656e6f756768206c697175696469747920706f736974696f6e73207460008201527f6f206275726e0000000000000000000000000000000000000000000000000000602082015250565b6000611805602683611706565b9150611810826117a9565b604082019050919050565b60006020820190508181036000830152611834816117f8565b9050919050565b61184481611621565b82525050565b600060208201905061185f600083018461183b565b92915050565b6000815190506118748161157e565b92915050565b6000602082840312156118905761188f61156f565b5b600061189e84828501611865565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118e182611574565b91506118ec83611574565b92508282026118fa81611574565b91508282048414831517611911576119106118a7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195282611574565b915061195d83611574565b92508261196d5761196c611918565b5b828204905092915050565b600061198382611574565b915061198e83611574565b92508282039050818111156119a6576119a56118a7565b5b92915050565b60006040820190506119c1600083018561183b565b6119ce60208301846115d7565b9392505050565b60008115159050919050565b6119ea816119d5565b81146119f557600080fd5b50565b600081519050611a07816119e1565b92915050565b600060208284031215611a2357611a2261156f565b5b6000611a31848285016119f8565b91505092915050565b7f4661696c656420746f2073656e6420455243323020746f6b656e730000000000600082015250565b6000611a70601b83611706565b9150611a7b82611a3a565b602082019050919050565b60006020820190508181036000830152611a9f81611a63565b9050919050565b6000606082019050611abb60008301866115d7565b611ac860208301856115d7565b611ad560408301846115d7565b949350505050565b7f455243323020746f6b656e206d7573742062652067726561746572207468616e60008201527f20302e0000000000000000000000000000000000000000000000000000000000602082015250565b6000611b39602383611706565b9150611b4482611add565b604082019050919050565b60006020820190508181036000830152611b6881611b2c565b9050919050565b7f4d757374206465706f736974206d6f7265207468616e2030204554482e000000600082015250565b6000611ba5601d83611706565b9150611bb082611b6f565b602082019050919050565b60006020820190508181036000830152611bd481611b98565b9050919050565b6000611be682611574565b9150611bf183611574565b9250828201905080821115611c0957611c086118a7565b5b92915050565b6000604082019050611c2460008301856115d7565b611c3160208301846115d7565b9392505050565b7f45544820616d6f756e74206d7573742062652067726561746572207468616e2060008201527f302e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c94602283611706565b9150611c9f82611c38565b604082019050919050565b60006020820190508181036000830152611cc381611c87565b9050919050565b7f4d75737420696e707574206d6f7265207468616e203020455243323020546f6b60008201527f656e2e0000000000000000000000000000000000000000000000000000000000602082015250565b6000611d26602383611706565b9150611d3182611cca565b604082019050919050565b60006020820190508181036000830152611d5581611d19565b9050919050565b7f496e73756666696369656e74206c69717569646974792e000000000000000000600082015250565b6000611d92601783611706565b9150611d9d82611d5c565b602082019050919050565b60006020820190508181036000830152611dc181611d85565b9050919050565b7f496e76616c6964207377617020657374696d6174650000000000000000000000600082015250565b6000611dfe601583611706565b9150611e0982611dc8565b602082019050919050565b60006020820190508181036000830152611e2d81611df1565b9050919050565b6000606082019050611e49600083018661183b565b611e56602083018561183b565b611e6360408301846115d7565b949350505050565b7f4552433230207472616e73666572206661696c65640000000000000000000000600082015250565b6000611ea1601583611706565b9150611eac82611e6b565b602082019050919050565b60006020820190508181036000830152611ed081611e94565b9050919050565b7f496e76616c696420737761702072657175657374000000000000000000000000600082015250565b6000611f0d601483611706565b9150611f1882611ed7565b602082019050919050565b60006020820190508181036000830152611f3c81611f00565b9050919050565b7f4d75737420696e707574206d6f7265207468616e2030204554482e0000000000600082015250565b6000611f79601b83611706565b9150611f8482611f43565b602082019050919050565b60006020820190508181036000830152611fa881611f6c565b9050919050565b7f4d757374206d61696e7461696e204554482f455243323020726174696f000000600082015250565b6000611fe5601d83611706565b9150611ff082611faf565b602082019050919050565b6000602082019050818103600083015261201481611fd8565b9050919050565b6000608082019050612030600083018761183b565b61203d60208301866115d7565b61204a60408301856115d7565b61205760608301846115d7565b95945050505050565b7f455448206d7573742062652067726561746572207468616e20302e0000000000600082015250565b6000612096601b83611706565b91506120a182612060565b602082019050919050565b600060208201905081810360008301526120c581612089565b905091905056fea26469706673582212207bd669e82bad2e117656b5dd4128b8040bc5e76af474fa0121685629cf403e1c64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A13EEA7 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xC8AB8325 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC8AB8325 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xE0BA2000 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xED7BF868 EQ PUSH2 0x31B JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x8A13EEA7 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x903875F7 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xA932492F EQ PUSH2 0x258 JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0xA861F2A EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x1CDE6226 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x240F3DEA EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x29CBAB3E EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x6FD0EA92 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x79ED3562 EQ PUSH2 0x1B3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x165F JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x205 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP1 PUSH2 0x1789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x414 SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP4 DUP6 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP4 DUP7 PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP3 SWAP2 SWAP1 PUSH2 0x19AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST DUP3 DUP6 PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xB14F451E613015C13A17C78777F1D87FCB448D7330D67299A09B8F2DB38AAB10 DUP2 DUP4 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x739 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x7F9 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x815 JUMP JUMPDEST DUP1 DUP5 DUP4 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x855 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SELFBALANCE PUSH2 0x86C SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90B SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLVALUE DUP4 PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x936 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP3 SWAP2 SWAP1 PUSH2 0x19AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D6 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xCDFC57B3D0CDC24B23CEA1F480AABEA287321F5BEE23AD76C2B52FA7982F5EA5 DUP5 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xA46 SWAP3 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 DUP4 PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE6 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP3 PUSH2 0xCE4 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 SLOAD PUSH2 0xCF6 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH2 0xD04 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0xD16 JUMPI POP DUP4 DUP6 GT ISZERO JUMPDEST PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x1E14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 GT PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE86 SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0xF6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF65 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP3 PUSH2 0xF7C SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 SLOAD PUSH2 0xF8E SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH2 0xF9C SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0xFAE JUMPI POP DUP4 DUP6 GT ISZERO JUMPDEST PUSH2 0xFED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP7 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1033 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0x3297A389BB586920E62A196AF529D5F42651B17A1013D6BFE77F22372A0B2112 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1065 SWAP3 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x1101 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F8 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE SELFBALANCE PUSH2 0x1152 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B0 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1272 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CF SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x12EB JUMPI PUSH1 0x64 SWAP4 POP PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 CALLVALUE SWAP1 POP PUSH1 0x0 DUP9 SWAP1 POP DUP3 DUP3 PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST DUP2 DUP6 PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST EQ PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH1 0x1 SLOAD PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP8 POP POP POP POP POP JUMPDEST DUP4 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13C6 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13DF SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST CALLVALUE DUP5 PUSH2 0x13FE SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x1408 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x3BCA7014F4C0CCC8016338C79F4C00E82068DBADAF4F01CA5449040FDD39F500 CALLER DUP7 CALLVALUE DUP8 PUSH1 0x40 MLOAD PUSH2 0x1443 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x201B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1497 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148E SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F8 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1515 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1539 SWAP2 SWAP1 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SUB PUSH2 0x154E JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x156A JUMP JUMPDEST DUP2 DUP5 DUP3 PUSH2 0x155B SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0x1565 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1587 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP2 EQ PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A4 DUP2 PUSH2 0x157E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP5 DUP3 DUP6 ADD PUSH2 0x1595 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15E0 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x162C DUP3 PUSH2 0x1601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x1621 JUMP JUMPDEST DUP2 EQ PUSH2 0x1647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1659 DUP2 PUSH2 0x1633 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1675 JUMPI PUSH2 0x1674 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1683 DUP5 DUP3 DUP6 ADD PUSH2 0x164A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B1 PUSH2 0x16AC PUSH2 0x16A7 DUP5 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C3 DUP3 PUSH2 0x1696 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D5 DUP3 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E5 DUP2 PUSH2 0x16CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1700 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206275726E207A65726F206C697175696469747920706F736974 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696F6E7300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1773 PUSH1 0x24 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x177E DUP3 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A2 DUP2 PUSH2 0x1766 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206C697175696469747920706F736974696F6E732074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F206275726E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1805 PUSH1 0x26 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1810 DUP3 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1834 DUP2 PUSH2 0x17F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1844 DUP2 PUSH2 0x1621 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x183B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1874 DUP2 PUSH2 0x157E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1890 JUMPI PUSH2 0x188F PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x189E DUP5 DUP3 DUP6 ADD PUSH2 0x1865 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EC DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18FA DUP2 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1911 JUMPI PUSH2 0x1910 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1952 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x195D DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x196D JUMPI PUSH2 0x196C PUSH2 0x1918 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1983 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x198E DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19C1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x19CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x19D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A07 DUP2 PUSH2 0x19E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A23 JUMPI PUSH2 0x1A22 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A31 DUP5 DUP3 DUP6 ADD PUSH2 0x19F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E6420455243323020746F6B656E730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A70 PUSH1 0x1B DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7B DUP3 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A9F DUP2 PUSH2 0x1A63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x1AC8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x1AD5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x455243323020746F6B656E206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20302E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B39 PUSH1 0x23 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B44 DUP3 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B68 DUP2 PUSH2 0x1B2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206465706F736974206D6F7265207468616E2030204554482E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 PUSH1 0x1D DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD4 DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE6 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF1 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C24 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x1C31 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x302E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C94 PUSH1 0x22 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9F DUP3 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC3 DUP2 PUSH2 0x1C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D75737420696E707574206D6F7265207468616E203020455243323020546F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E2E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D26 PUSH1 0x23 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D31 DUP3 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 PUSH2 0x1D19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C69717569646974792E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 PUSH1 0x17 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9D DUP3 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC1 DUP2 PUSH2 0x1D85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207377617020657374696D6174650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DFE PUSH1 0x15 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E09 DUP3 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E2D DUP2 PUSH2 0x1DF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E49 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x1E56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x1E63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH1 0x15 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAC DUP3 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED0 DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420737761702072657175657374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0D PUSH1 0x14 DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F18 DUP3 PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3C DUP2 PUSH2 0x1F00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D75737420696E707574206D6F7265207468616E2030204554482E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F79 PUSH1 0x1B DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F84 DUP3 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA8 DUP2 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206D61696E7461696E204554482F455243323020726174696F000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE5 PUSH1 0x1D DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF0 DUP3 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2014 DUP2 PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2030 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x203D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x204A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x2057 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15D7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x455448206D7573742062652067726561746572207468616E20302E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2096 PUSH1 0x1B DUP4 PUSH2 0x1706 JUMP JUMPDEST SWAP2 POP PUSH2 0x20A1 DUP3 PUSH2 0x2060 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20C5 DUP2 PUSH2 0x2089 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD669E82BAD2E117656B5DD4128B8040BC5E76AF474FA0121685629CF BLOCKHASH RETURNDATACOPY SHR PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "121:8764:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3548:1383;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;174:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2150:678;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7153:773;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;254:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7932:523;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;145:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6199:948;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;215:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4937:1256;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3424:118;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;456:1688;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2834:583;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3548:1383;3660:1;3632:25;:29;3624:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3754:25;3720:18;:30;3739:10;3720:30;;;;;;;;;;;;;;;;:59;;3712:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;3833:23;3859:21;3833:47;;3890:30;3923:10;;;;;;;;;;;:20;;;3952:4;3923:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3890:68;;3969:20;4041:23;;4020:18;3992:25;:46;;;;:::i;:::-;:72;;;;:::i;:::-;3969:95;;4074:22;4155:23;;4127:25;4099;:53;;;;:::i;:::-;:79;;;;:::i;:::-;4074:104;;4223:25;4189:18;:30;4208:10;4189:30;;;;;;;;;;;;;;;;:59;;;;;;;:::i;:::-;;;;;;;;4285:25;4258:23;;:52;;;;;;;:::i;:::-;;;;;;;;4383:10;4375:28;;:45;4404:15;4375:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4477:10;;;;;;;;;;:19;;;4497:10;4509:17;4477:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4469:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;4701:17;4673:25;:45;;;;:::i;:::-;4653:15;4632:18;:36;;;;:::i;:::-;4631:88;;;;:::i;:::-;4627:1;:92;;;;4844:80;4862:17;4881:15;4898:25;4844:80;;;;;;;;:::i;:::-;;;;;;;;3614:1317;;;;3548:1383;:::o;174:35::-;;;;:::o;2150:678::-;2225:14;2279:1;2259:17;:21;2251:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2330:23;2356:21;2330:47;;2387:30;2420:10;;;;;;;;;;;:20;;;2449:4;2420:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2387:68;;2592:1;2563:25;:30;2559:69;;2616:1;2609:8;;;;;;2559:69;2770:25;2750:17;2729:18;:38;;;;:::i;:::-;:66;;;;:::i;:::-;2717:78;;2805:16;;2150:678;;;;:::o;7153:773::-;7206:21;7259:1;7247:9;:13;7239:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;7304:29;7360:9;7336:21;:33;;;;:::i;:::-;7304:65;;7379:30;7412:10;;;;;;;;;;;:20;;;7441:4;7412:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7379:68;;7457:39;7531:9;7504:24;:36;;;;:::i;:::-;7499:1;;:42;;;;:::i;:::-;7457:84;;7598:34;7570:25;:62;;;;:::i;:::-;7551:81;;7716:10;;;;;;;;;;:19;;;7736:10;7748:16;7716:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7708:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;7839:46;7857:16;7875:9;7839:46;;;;;;;:::i;:::-;;;;;;;;7896:23;;;7153:773;:::o;254:50::-;;;;;;;;;;;;;;;;;:::o;7932:523::-;8005:21;8059:1;8046:10;:14;8038:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;8109:23;8135:21;8109:47;;8166:30;8199:10;;;;;;;;;;;:20;;;8228:4;8199:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8166:68;;8244:39;8312:10;8291:18;:31;;;;:::i;:::-;8286:1;;:37;;;;:::i;:::-;8244:79;;8380:34;8352:25;:62;;;;:::i;:::-;8333:81;;8425:23;;;7932:523;;;:::o;145:23::-;;;;;;;;;;;;:::o;6199:948::-;6272:14;6326:1;6306:17;:21;6298:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6386:23;6412:21;6386:47;;6443:30;6476:10;;;;;;;;;;;:20;;;6505:4;6476:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6443:68;;6557:1;6529:25;:29;6521:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6681:39;6751:17;6723:25;:45;;;;:::i;:::-;6681:87;;6778:32;6817:34;6813:1;;:38;;;;:::i;:::-;6778:73;;6894:27;6873:18;:48;;;;:::i;:::-;6861:60;;7051:1;7039:9;:13;:48;;;;;7069:18;7056:9;:31;;7039:48;7031:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;7124:16;;;;6199:948;;;:::o;215:13::-;;;;:::o;4937:1256::-;4997:14;5023:23;5049:21;5023:47;;5080:30;5113:10;;;;;;;;;;;:20;;;5142:4;5113:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5080:68;;5187:1;5167:17;:21;5159:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5274:1;5246:25;:29;5238:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5393:10;;;;;;;;;;:23;;;5417:10;5437:4;5444:17;5393:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5385:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5583:39;5653:17;5625:25;:45;;;;:::i;:::-;5583:87;;5680:32;5719:34;5715:1;;:38;;;;:::i;:::-;5680:73;;5796:27;5775:18;:48;;;;:::i;:::-;5763:60;;5934:1;5922:9;:13;:48;;;;;5952:18;5939:9;:31;;5922:48;5914:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6046:10;6038:28;;:39;6067:9;6038:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6119:40;6130:17;6149:9;6119:40;;;;;;;:::i;:::-;;;;;;;;6170:16;;;;4937:1256;;;:::o;3424:118::-;3482:4;3505:18;:30;3524:10;3505:30;;;;;;;;;;;;;;;;3498:37;;3424:118;:::o;456:1688::-;530:14;576:1;564:9;:13;556:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;647:1;627:17;:21;619:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;698:21;746:9;722:21;:33;;;;:::i;:::-;698:57;;765:23;791:10;;;;;;;;;;;:20;;;820:4;791:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;765:61;;900:9;912:10;;;;;;;;;;;:23;;;936:10;956:4;963:17;912:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;900:81;;999:4;991:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1071:1;1044:23;;:28;1040:691;;1100:3;1088:15;;1040:691;;;1184:15;1202:16;1184:34;;1232:17;1252:18;1232:38;;1284:14;1301:9;1284:26;;1324:16;1343:17;1324:36;;1502:12;1490:9;:24;;;;:::i;:::-;1475:11;1462:10;:24;;;;:::i;:::-;:52;1454:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1710:10;1698:9;1672:23;;:35;;;;:::i;:::-;:48;;;;:::i;:::-;1660:60;;1170:561;;;;1040:691;1774:9;1740:18;:30;1759:10;1740:30;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;1820:9;1793:23;;:36;;;;;;;:::i;:::-;;;;;;;;1971:17;1950:18;:38;;;;:::i;:::-;1936:9;1917:16;:28;;;;:::i;:::-;1916:73;;;;:::i;:::-;1912:1;:77;;;;2005:70;2023:10;2035:17;2054:9;2065;2005:70;;;;;;;;;:::i;:::-;;;;;;;;2121:16;;;456:1688;;;:::o;2834:583::-;2909:21;2963:1;2950:10;:14;2942:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3006:23;3032:21;3006:47;;3063:30;3096:10;;;;;;;;;;;:20;;;3125:4;3096:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3063:68;;3167:1;3145:18;:23;3141:62;;3191:1;3184:8;;;;;;3141:62;3359:18;3346:10;3318:25;:38;;;;:::i;:::-;:59;;;;:::i;:::-;3299:78;;3387:23;;2834:583;;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:139::-;2628:9;2661:37;2692:5;2661:37;:::i;:::-;2648:50;;2565:139;;;:::o;2710:157::-;2810:50;2854:5;2810:50;:::i;:::-;2805:3;2798:63;2710:157;;:::o;2873:248::-;2979:4;3017:2;3006:9;3002:18;2994:26;;3030:84;3111:1;3100:9;3096:17;3087:6;3030:84;:::i;:::-;2873:248;;;;:::o;3127:169::-;3211:11;3245:6;3240:3;3233:19;3285:4;3280:3;3276:14;3261:29;;3127:169;;;;:::o;3302:223::-;3442:34;3438:1;3430:6;3426:14;3419:58;3511:6;3506:2;3498:6;3494:15;3487:31;3302:223;:::o;3531:366::-;3673:3;3694:67;3758:2;3753:3;3694:67;:::i;:::-;3687:74;;3770:93;3859:3;3770:93;:::i;:::-;3888:2;3883:3;3879:12;3872:19;;3531:366;;;:::o;3903:419::-;4069:4;4107:2;4096:9;4092:18;4084:26;;4156:9;4150:4;4146:20;4142:1;4131:9;4127:17;4120:47;4184:131;4310:4;4184:131;:::i;:::-;4176:139;;3903:419;;;:::o;4328:225::-;4468:34;4464:1;4456:6;4452:14;4445:58;4537:8;4532:2;4524:6;4520:15;4513:33;4328:225;:::o;4559:366::-;4701:3;4722:67;4786:2;4781:3;4722:67;:::i;:::-;4715:74;;4798:93;4887:3;4798:93;:::i;:::-;4916:2;4911:3;4907:12;4900:19;;4559:366;;;:::o;4931:419::-;5097:4;5135:2;5124:9;5120:18;5112:26;;5184:9;5178:4;5174:20;5170:1;5159:9;5155:17;5148:47;5212:131;5338:4;5212:131;:::i;:::-;5204:139;;4931:419;;;:::o;5356:118::-;5443:24;5461:5;5443:24;:::i;:::-;5438:3;5431:37;5356:118;;:::o;5480:222::-;5573:4;5611:2;5600:9;5596:18;5588:26;;5624:71;5692:1;5681:9;5677:17;5668:6;5624:71;:::i;:::-;5480:222;;;;:::o;5708:143::-;5765:5;5796:6;5790:13;5781:22;;5812:33;5839:5;5812:33;:::i;:::-;5708:143;;;;:::o;5857:351::-;5927:6;5976:2;5964:9;5955:7;5951:23;5947:32;5944:119;;;5982:79;;:::i;:::-;5944:119;6102:1;6127:64;6183:7;6174:6;6163:9;6159:22;6127:64;:::i;:::-;6117:74;;6073:128;5857:351;;;;:::o;6214:180::-;6262:77;6259:1;6252:88;6359:4;6356:1;6349:15;6383:4;6380:1;6373:15;6400:410;6440:7;6463:20;6481:1;6463:20;:::i;:::-;6458:25;;6497:20;6515:1;6497:20;:::i;:::-;6492:25;;6552:1;6549;6545:9;6574:30;6592:11;6574:30;:::i;:::-;6563:41;;6753:1;6744:7;6740:15;6737:1;6734:22;6714:1;6707:9;6687:83;6664:139;;6783:18;;:::i;:::-;6664:139;6448:362;6400:410;;;;:::o;6816:180::-;6864:77;6861:1;6854:88;6961:4;6958:1;6951:15;6985:4;6982:1;6975:15;7002:185;7042:1;7059:20;7077:1;7059:20;:::i;:::-;7054:25;;7093:20;7111:1;7093:20;:::i;:::-;7088:25;;7132:1;7122:35;;7137:18;;:::i;:::-;7122:35;7179:1;7176;7172:9;7167:14;;7002:185;;;;:::o;7193:194::-;7233:4;7253:20;7271:1;7253:20;:::i;:::-;7248:25;;7287:20;7305:1;7287:20;:::i;:::-;7282:25;;7331:1;7328;7324:9;7316:17;;7355:1;7349:4;7346:11;7343:37;;;7360:18;;:::i;:::-;7343:37;7193:194;;;;:::o;7393:332::-;7514:4;7552:2;7541:9;7537:18;7529:26;;7565:71;7633:1;7622:9;7618:17;7609:6;7565:71;:::i;:::-;7646:72;7714:2;7703:9;7699:18;7690:6;7646:72;:::i;:::-;7393:332;;;;;:::o;7731:90::-;7765:7;7808:5;7801:13;7794:21;7783:32;;7731:90;;;:::o;7827:116::-;7897:21;7912:5;7897:21;:::i;:::-;7890:5;7887:32;7877:60;;7933:1;7930;7923:12;7877:60;7827:116;:::o;7949:137::-;8003:5;8034:6;8028:13;8019:22;;8050:30;8074:5;8050:30;:::i;:::-;7949:137;;;;:::o;8092:345::-;8159:6;8208:2;8196:9;8187:7;8183:23;8179:32;8176:119;;;8214:79;;:::i;:::-;8176:119;8334:1;8359:61;8412:7;8403:6;8392:9;8388:22;8359:61;:::i;:::-;8349:71;;8305:125;8092:345;;;;:::o;8443:177::-;8583:29;8579:1;8571:6;8567:14;8560:53;8443:177;:::o;8626:366::-;8768:3;8789:67;8853:2;8848:3;8789:67;:::i;:::-;8782:74;;8865:93;8954:3;8865:93;:::i;:::-;8983:2;8978:3;8974:12;8967:19;;8626:366;;;:::o;8998:419::-;9164:4;9202:2;9191:9;9187:18;9179:26;;9251:9;9245:4;9241:20;9237:1;9226:9;9222:17;9215:47;9279:131;9405:4;9279:131;:::i;:::-;9271:139;;8998:419;;;:::o;9423:442::-;9572:4;9610:2;9599:9;9595:18;9587:26;;9623:71;9691:1;9680:9;9676:17;9667:6;9623:71;:::i;:::-;9704:72;9772:2;9761:9;9757:18;9748:6;9704:72;:::i;:::-;9786;9854:2;9843:9;9839:18;9830:6;9786:72;:::i;:::-;9423:442;;;;;;:::o;9871:222::-;10011:34;10007:1;9999:6;9995:14;9988:58;10080:5;10075:2;10067:6;10063:15;10056:30;9871:222;:::o;10099:366::-;10241:3;10262:67;10326:2;10321:3;10262:67;:::i;:::-;10255:74;;10338:93;10427:3;10338:93;:::i;:::-;10456:2;10451:3;10447:12;10440:19;;10099:366;;;:::o;10471:419::-;10637:4;10675:2;10664:9;10660:18;10652:26;;10724:9;10718:4;10714:20;10710:1;10699:9;10695:17;10688:47;10752:131;10878:4;10752:131;:::i;:::-;10744:139;;10471:419;;;:::o;10896:179::-;11036:31;11032:1;11024:6;11020:14;11013:55;10896:179;:::o;11081:366::-;11223:3;11244:67;11308:2;11303:3;11244:67;:::i;:::-;11237:74;;11320:93;11409:3;11320:93;:::i;:::-;11438:2;11433:3;11429:12;11422:19;;11081:366;;;:::o;11453:419::-;11619:4;11657:2;11646:9;11642:18;11634:26;;11706:9;11700:4;11696:20;11692:1;11681:9;11677:17;11670:47;11734:131;11860:4;11734:131;:::i;:::-;11726:139;;11453:419;;;:::o;11878:191::-;11918:3;11937:20;11955:1;11937:20;:::i;:::-;11932:25;;11971:20;11989:1;11971:20;:::i;:::-;11966:25;;12014:1;12011;12007:9;12000:16;;12035:3;12032:1;12029:10;12026:36;;;12042:18;;:::i;:::-;12026:36;11878:191;;;;:::o;12075:332::-;12196:4;12234:2;12223:9;12219:18;12211:26;;12247:71;12315:1;12304:9;12300:17;12291:6;12247:71;:::i;:::-;12328:72;12396:2;12385:9;12381:18;12372:6;12328:72;:::i;:::-;12075:332;;;;;:::o;12413:221::-;12553:34;12549:1;12541:6;12537:14;12530:58;12622:4;12617:2;12609:6;12605:15;12598:29;12413:221;:::o;12640:366::-;12782:3;12803:67;12867:2;12862:3;12803:67;:::i;:::-;12796:74;;12879:93;12968:3;12879:93;:::i;:::-;12997:2;12992:3;12988:12;12981:19;;12640:366;;;:::o;13012:419::-;13178:4;13216:2;13205:9;13201:18;13193:26;;13265:9;13259:4;13255:20;13251:1;13240:9;13236:17;13229:47;13293:131;13419:4;13293:131;:::i;:::-;13285:139;;13012:419;;;:::o;13437:222::-;13577:34;13573:1;13565:6;13561:14;13554:58;13646:5;13641:2;13633:6;13629:15;13622:30;13437:222;:::o;13665:366::-;13807:3;13828:67;13892:2;13887:3;13828:67;:::i;:::-;13821:74;;13904:93;13993:3;13904:93;:::i;:::-;14022:2;14017:3;14013:12;14006:19;;13665:366;;;:::o;14037:419::-;14203:4;14241:2;14230:9;14226:18;14218:26;;14290:9;14284:4;14280:20;14276:1;14265:9;14261:17;14254:47;14318:131;14444:4;14318:131;:::i;:::-;14310:139;;14037:419;;;:::o;14462:173::-;14602:25;14598:1;14590:6;14586:14;14579:49;14462:173;:::o;14641:366::-;14783:3;14804:67;14868:2;14863:3;14804:67;:::i;:::-;14797:74;;14880:93;14969:3;14880:93;:::i;:::-;14998:2;14993:3;14989:12;14982:19;;14641:366;;;:::o;15013:419::-;15179:4;15217:2;15206:9;15202:18;15194:26;;15266:9;15260:4;15256:20;15252:1;15241:9;15237:17;15230:47;15294:131;15420:4;15294:131;:::i;:::-;15286:139;;15013:419;;;:::o;15438:171::-;15578:23;15574:1;15566:6;15562:14;15555:47;15438:171;:::o;15615:366::-;15757:3;15778:67;15842:2;15837:3;15778:67;:::i;:::-;15771:74;;15854:93;15943:3;15854:93;:::i;:::-;15972:2;15967:3;15963:12;15956:19;;15615:366;;;:::o;15987:419::-;16153:4;16191:2;16180:9;16176:18;16168:26;;16240:9;16234:4;16230:20;16226:1;16215:9;16211:17;16204:47;16268:131;16394:4;16268:131;:::i;:::-;16260:139;;15987:419;;;:::o;16412:442::-;16561:4;16599:2;16588:9;16584:18;16576:26;;16612:71;16680:1;16669:9;16665:17;16656:6;16612:71;:::i;:::-;16693:72;16761:2;16750:9;16746:18;16737:6;16693:72;:::i;:::-;16775;16843:2;16832:9;16828:18;16819:6;16775:72;:::i;:::-;16412:442;;;;;;:::o;16860:171::-;17000:23;16996:1;16988:6;16984:14;16977:47;16860:171;:::o;17037:366::-;17179:3;17200:67;17264:2;17259:3;17200:67;:::i;:::-;17193:74;;17276:93;17365:3;17276:93;:::i;:::-;17394:2;17389:3;17385:12;17378:19;;17037:366;;;:::o;17409:419::-;17575:4;17613:2;17602:9;17598:18;17590:26;;17662:9;17656:4;17652:20;17648:1;17637:9;17633:17;17626:47;17690:131;17816:4;17690:131;:::i;:::-;17682:139;;17409:419;;;:::o;17834:170::-;17974:22;17970:1;17962:6;17958:14;17951:46;17834:170;:::o;18010:366::-;18152:3;18173:67;18237:2;18232:3;18173:67;:::i;:::-;18166:74;;18249:93;18338:3;18249:93;:::i;:::-;18367:2;18362:3;18358:12;18351:19;;18010:366;;;:::o;18382:419::-;18548:4;18586:2;18575:9;18571:18;18563:26;;18635:9;18629:4;18625:20;18621:1;18610:9;18606:17;18599:47;18663:131;18789:4;18663:131;:::i;:::-;18655:139;;18382:419;;;:::o;18807:177::-;18947:29;18943:1;18935:6;18931:14;18924:53;18807:177;:::o;18990:366::-;19132:3;19153:67;19217:2;19212:3;19153:67;:::i;:::-;19146:74;;19229:93;19318:3;19229:93;:::i;:::-;19347:2;19342:3;19338:12;19331:19;;18990:366;;;:::o;19362:419::-;19528:4;19566:2;19555:9;19551:18;19543:26;;19615:9;19609:4;19605:20;19601:1;19590:9;19586:17;19579:47;19643:131;19769:4;19643:131;:::i;:::-;19635:139;;19362:419;;;:::o;19787:179::-;19927:31;19923:1;19915:6;19911:14;19904:55;19787:179;:::o;19972:366::-;20114:3;20135:67;20199:2;20194:3;20135:67;:::i;:::-;20128:74;;20211:93;20300:3;20211:93;:::i;:::-;20329:2;20324:3;20320:12;20313:19;;19972:366;;;:::o;20344:419::-;20510:4;20548:2;20537:9;20533:18;20525:26;;20597:9;20591:4;20587:20;20583:1;20572:9;20568:17;20561:47;20625:131;20751:4;20625:131;:::i;:::-;20617:139;;20344:419;;;:::o;20769:553::-;20946:4;20984:3;20973:9;20969:19;20961:27;;20998:71;21066:1;21055:9;21051:17;21042:6;20998:71;:::i;:::-;21079:72;21147:2;21136:9;21132:18;21123:6;21079:72;:::i;:::-;21161;21229:2;21218:9;21214:18;21205:6;21161:72;:::i;:::-;21243;21311:2;21300:9;21296:18;21287:6;21243:72;:::i;:::-;20769:553;;;;;;;:::o;21328:177::-;21468:29;21464:1;21456:6;21452:14;21445:53;21328:177;:::o;21511:366::-;21653:3;21674:67;21738:2;21733:3;21674:67;:::i;:::-;21667:74;;21750:93;21839:3;21750:93;:::i;:::-;21868:2;21863:3;21859:12;21852:19;;21511:366;;;:::o;21883:419::-;22049:4;22087:2;22076:9;22072:18;22064:26;;22136:9;22130:4;22126:20;22122:1;22111:9;22107:17;22100:47;22164:131;22290:4;22164:131;:::i;:::-;22156:139;;21883:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1690000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"K()": "2496",
								"erc20Token()": "infinite",
								"estimateERC20TokenToProvide(uint256)": "infinite",
								"estimateEthToProvide(uint256)": "infinite",
								"estimateSwapForERC20Token(uint256)": "infinite",
								"estimateSwapForEth(uint256)": "infinite",
								"getMyLiquidityPositions()": "2570",
								"liquidityPositions(address)": "2903",
								"provideLiquidity(uint256)": "infinite",
								"swapForERC20Token()": "infinite",
								"swapForEth(uint256)": "infinite",
								"totalLiquidityPositions()": "2452",
								"withdrawLiquidity(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 121,
									"end": 8885,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 450,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 450,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 450,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 365,
									"end": 450,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 365,
									"end": 450,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 365,
									"end": 450,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 365,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 365,
									"end": 450,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 429,
									"end": 442,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 410,
									"end": 420,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 420,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 410,
									"end": 443,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 410,
									"end": 443,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 410,
									"end": 443,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 410,
									"end": 443,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 365,
									"end": 450,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 8885,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bd669e82bad2e117656b5dd4128b8040bc5e76af474fa0121685629cf403e1c64736f6c63430008130033",
									".code": [
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "8A13EEA7"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "C8AB8325"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "C8AB8325"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "E0BA2000"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "EB521A4C"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "ED7BF868"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "8A13EEA7"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "903875F7"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "A932492F"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "A861F2A"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "1CDE6226"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "240F3DEA"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "29CBAB3E"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "6FD0EA92"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "79ED3562"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 8885,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3548,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2150,
											"end": 2828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2150,
											"end": 2828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 7153,
											"end": 7926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 7153,
											"end": 7926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 254,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 254,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 254,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7932,
											"end": 8455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7932,
											"end": 8455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 7932,
											"end": 8455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 145,
											"end": 168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 145,
											"end": 168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 7147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 6199,
											"end": 7147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6199,
											"end": 7147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 215,
											"end": 228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 215,
											"end": 228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4937,
											"end": 6193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4937,
											"end": 6193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4937,
											"end": 6193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3424,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3424,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 456,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 456,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 3417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2834,
											"end": 3417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2834,
											"end": 3417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3632,
											"end": 3661,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3624,
											"end": 3702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3749,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3750,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3779,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3779,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3712,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3712,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3952,
											"end": 3956,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3923,
											"end": 3958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3923,
											"end": 3958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 3989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4017,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3992,
											"end": 4038,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4038,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3992,
											"end": 4038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4038,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3992,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3992,
											"end": 4064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3992,
											"end": 4064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4064,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3992,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 4064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4178,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4155,
											"end": 4178,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4152,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4124,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4099,
											"end": 4152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4099,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4099,
											"end": 4178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4248,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4208,
											"end": 4218,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4189,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4285,
											"end": 4310,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4258,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4393,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4375,
											"end": 4403,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 4404,
											"end": 4419,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4496,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4496,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4496,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4497,
											"end": 4507,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4509,
											"end": 4526,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4477,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4477,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4477,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4469,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4469,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4701,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4698,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4673,
											"end": 4718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4673,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4718,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4673,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4650,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4632,
											"end": 4668,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4632,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4668,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4632,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4631,
											"end": 4719,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4631,
											"end": 4719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4719,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4631,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4627,
											"end": 4719,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4719,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "B14F451E613015C13A17C78777F1D87FCB448D7330D67299A09B8F2DB38AAB10"
										},
										{
											"begin": 4862,
											"end": 4879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 4896,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4923,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4844,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4924,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 3614,
											"end": 4931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3614,
											"end": 4931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3614,
											"end": 4931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3614,
											"end": 4931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 4931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 209,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 174,
											"end": 209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2280,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2276,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2280,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2251,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2251,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2417,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2449,
											"end": 2453,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2420,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2420,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2420,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2559,
											"end": 2628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2617,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2617,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2609,
											"end": 2617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2609,
											"end": 2617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2609,
											"end": 2617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2609,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2609,
											"end": 2617,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2628,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2559,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2750,
											"end": 2767,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2729,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2729,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2729,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2795,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7259,
											"end": 7260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7256,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7260,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 7239,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 7239,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7333,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7369,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7357,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7336,
											"end": 7369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7336,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7409,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7412,
											"end": 7422,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7432,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7412,
											"end": 7432,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7432,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 7441,
											"end": 7445,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 7412,
											"end": 7447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7412,
											"end": 7447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7540,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7528,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 7504,
											"end": 7540,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 7504,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7504,
											"end": 7540,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 7504,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7500,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7499,
											"end": 7500,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7499,
											"end": 7541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 7499,
											"end": 7541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7541,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7499,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7598,
											"end": 7632,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 7570,
											"end": 7632,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7570,
											"end": 7632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7632,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 7570,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7632,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7632,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7716,
											"end": 7726,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7735,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7716,
											"end": 7735,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7735,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 7736,
											"end": 7746,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7748,
											"end": 7764,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 7716,
											"end": 7765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 7716,
											"end": 7765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 7716,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7708,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 7708,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "PUSH",
											"source": 5,
											"value": "CDFC57B3D0CDC24B23CEA1F480AABEA287321F5BEE23AD76C2B52FA7982F5EA5"
										},
										{
											"begin": 7857,
											"end": 7873,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 7884,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7839,
											"end": 7885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7885,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8005,
											"end": 8026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8060,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8046,
											"end": 8056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8046,
											"end": 8060,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8038,
											"end": 8099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8038,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8109,
											"end": 8132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8156,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 8109,
											"end": 8156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8109,
											"end": 8156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8166,
											"end": 8196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8199,
											"end": 8209,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8219,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8199,
											"end": 8219,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8219,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 8228,
											"end": 8232,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 8199,
											"end": 8234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 8199,
											"end": 8234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8166,
											"end": 8234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8166,
											"end": 8234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8309,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8291,
											"end": 8322,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 8291,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8322,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8291,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8286,
											"end": 8287,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8286,
											"end": 8287,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8286,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8286,
											"end": 8323,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8286,
											"end": 8323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8286,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 8286,
											"end": 8323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8286,
											"end": 8323,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8286,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8380,
											"end": 8414,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 8352,
											"end": 8414,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8414,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 8352,
											"end": 8414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8414,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 8352,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8333,
											"end": 8414,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8333,
											"end": 8414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8425,
											"end": 8448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8425,
											"end": 8448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8425,
											"end": 8448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 8455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 145,
											"end": 168,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 145,
											"end": 168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6272,
											"end": 6286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6326,
											"end": 6327,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6327,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6298,
											"end": 6367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6298,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6409,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6412,
											"end": 6433,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6473,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 6505,
											"end": 6509,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6476,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 6476,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6476,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6529,
											"end": 6558,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6521,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6521,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6751,
											"end": 6768,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6723,
											"end": 6748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6723,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6723,
											"end": 6768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6723,
											"end": 6768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6723,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6723,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6723,
											"end": 6768,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6723,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6778,
											"end": 6810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6813,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6813,
											"end": 6851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6813,
											"end": 6851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6813,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 6813,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6813,
											"end": 6851,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6813,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6778,
											"end": 6851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6778,
											"end": 6851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6894,
											"end": 6921,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6891,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6873,
											"end": 6921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6873,
											"end": 6921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6921,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6873,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6861,
											"end": 6921,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6861,
											"end": 6921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7048,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7039,
											"end": 7087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7039,
											"end": 7087,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7039,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 7039,
											"end": 7087,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7039,
											"end": 7087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7065,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7087,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7087,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7039,
											"end": 7087,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 7039,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7031,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7031,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 7147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 215,
											"end": 228,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 215,
											"end": 228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4997,
											"end": 5011,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5049,
											"end": 5070,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5023,
											"end": 5070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5023,
											"end": 5070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5113,
											"end": 5123,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5142,
											"end": 5146,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5113,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5113,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5113,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5188,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5159,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5159,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5271,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5275,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 5238,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5238,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5393,
											"end": 5403,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5416,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5393,
											"end": 5416,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5416,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 5417,
											"end": 5427,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5444,
											"end": 5461,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5393,
											"end": 5462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5393,
											"end": 5462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5393,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5385,
											"end": 5488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5385,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5670,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5650,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5625,
											"end": 5670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5625,
											"end": 5670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5670,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5625,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5716,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5715,
											"end": 5716,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5715,
											"end": 5753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5715,
											"end": 5753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5753,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5715,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5796,
											"end": 5823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5775,
											"end": 5823,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5775,
											"end": 5823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5823,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5775,
											"end": 5823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5823,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 5935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5931,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5922,
											"end": 5935,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5922,
											"end": 5970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5922,
											"end": 5970,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5922,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5922,
											"end": 5970,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5922,
											"end": 5970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5970,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5970,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5922,
											"end": 5970,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5922,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5914,
											"end": 5995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5914,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6056,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6066,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6038,
											"end": 6066,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 6067,
											"end": 6076,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "PUSH",
											"source": 5,
											"value": "3297A389BB586920E62A196AF529D5F42651B17A1013D6BFE77F22372A0B2112"
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6158,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6119,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6159,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 6170,
											"end": 6186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6170,
											"end": 6186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6170,
											"end": 6186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6170,
											"end": 6186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 6193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3534,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3535,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 530,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 564,
											"end": 573,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 564,
											"end": 577,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 556,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 647,
											"end": 648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 627,
											"end": 648,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 619,
											"end": 688,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 688,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 619,
											"end": 688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 619,
											"end": 688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 619,
											"end": 688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 619,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 619,
											"end": 688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 688,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 619,
											"end": 688,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 619,
											"end": 688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 698,
											"end": 719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 755,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 722,
											"end": 743,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 722,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 722,
											"end": 755,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 722,
											"end": 755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 722,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 722,
											"end": 755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 722,
											"end": 755,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 722,
											"end": 755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 698,
											"end": 755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 755,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 765,
											"end": 788,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 801,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 801,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 801,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 791,
											"end": 801,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 801,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 791,
											"end": 801,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 801,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 791,
											"end": 811,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 791,
											"end": 811,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 820,
											"end": 824,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 791,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 791,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 826,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 791,
											"end": 826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 765,
											"end": 826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 765,
											"end": 826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 900,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 922,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 922,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 922,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 922,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 912,
											"end": 922,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 922,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 912,
											"end": 922,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 912,
											"end": 922,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 912,
											"end": 935,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 912,
											"end": 935,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 912,
											"end": 935,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 936,
											"end": 946,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 956,
											"end": 960,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 963,
											"end": 980,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 912,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 912,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 981,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 912,
											"end": 981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 991,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 991,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1044,
											"end": 1067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1072,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1040,
											"end": 1731,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1088,
											"end": 1103,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1040,
											"end": 1731,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1040,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1360,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1502,
											"end": 1514,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1490,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1490,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1486,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1462,
											"end": 1486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1462,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1486,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1462,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1514,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1454,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1454,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1720,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1672,
											"end": 1707,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1672,
											"end": 1707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1707,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1672,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1672,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1720,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1040,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1740,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1829,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1793,
											"end": 1829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1988,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1950,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1933,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1917,
											"end": 1945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1917,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1945,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1917,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1916,
											"end": 1989,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1916,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1916,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1912,
											"end": 1989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1989,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "3BCA7014F4C0CCC8016338C79F4C00E82068DBADAF4F01CA5449040FDD39F500"
										},
										{
											"begin": 2023,
											"end": 2033,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2052,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2063,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2074,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2005,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2075,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 2144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2909,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2964,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2950,
											"end": 2960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2950,
											"end": 2964,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2942,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2942,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3053,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3096,
											"end": 3106,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3096,
											"end": 3116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3116,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3096,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3096,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3063,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3141,
											"end": 3203,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3192,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3184,
											"end": 3192,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3203,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3141,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3318,
											"end": 3356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3318,
											"end": 3356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3356,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3318,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3318,
											"end": 3377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3318,
											"end": 3377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3377,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3318,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3377,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2661,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2867,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2710,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2854,
											"end": 2859,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2810,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2860,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2810,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3019,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 3111,
											"end": 3112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3030,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 3030,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3211,
											"end": 3222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3289,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3290,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3525,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3302,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F74206275726E207A65726F206C697175696469747920706F736974"
										},
										{
											"begin": 3438,
											"end": 3439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3477,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "PUSH",
											"source": 6,
											"value": "696F6E7300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3504,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 3758,
											"end": 3760,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3753,
											"end": 3756,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3694,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3761,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 3694,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 3859,
											"end": 3862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3770,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3863,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 3770,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3886,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3879,
											"end": 3891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4109,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4105,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 4310,
											"end": 4314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4184,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4315,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 4184,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4553,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4328,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7420656E6F756768206C697175696469747920706F736974696F6E732074"
										},
										{
											"begin": 4464,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4452,
											"end": 4466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4545,
											"name": "PUSH",
											"source": 6,
											"value": "6F206275726E0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4532,
											"end": 4534,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4535,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4925,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4559,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4701,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 4786,
											"end": 4788,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4781,
											"end": 4784,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4722,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4789,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 4722,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 4887,
											"end": 4890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4798,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4891,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 4798,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4914,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 5350,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4931,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5194,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5170,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5155,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5212,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5343,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 5212,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 5350,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 5350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 5350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 5350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5474,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5356,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 5461,
											"end": 5466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5443,
											"end": 5467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5467,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 5443,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5438,
											"end": 5441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5468,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5480,
											"end": 5702,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5480,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5613,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5600,
											"end": 5609,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5681,
											"end": 5690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5674,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5624,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5695,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 5624,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5480,
											"end": 5702,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5480,
											"end": 5702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5480,
											"end": 5702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5480,
											"end": 5702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5480,
											"end": 5702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5851,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5708,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5803,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 5839,
											"end": 5844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 5812,
											"end": 5845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5845,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 5812,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6208,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5857,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5927,
											"end": 5933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 5978,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5974,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5979,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6063,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 5944,
											"end": 6063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 5982,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5982,
											"end": 6061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6061,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 5982,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 6063,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 5944,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 6183,
											"end": 6190,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6174,
											"end": 6180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6159,
											"end": 6181,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 6127,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6191,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 6127,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6208,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6208,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6214,
											"end": 6394,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6214,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6339,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6259,
											"end": 6260,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6349,
											"end": 6364,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6387,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6380,
											"end": 6381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6810,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6400,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6463,
											"end": 6483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6483,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 6463,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6497,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6517,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 6497,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6549,
											"end": 6550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 6592,
											"end": 6603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6574,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 6574,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6754,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6744,
											"end": 6751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6755,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6756,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6715,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6707,
											"end": 6716,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6770,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 6664,
											"end": 6803,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6783,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6783,
											"end": 6801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6801,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6783,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6803,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 6664,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6448,
											"end": 6810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6810,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 6996,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6816,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6941,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6942,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6958,
											"end": 6959,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6951,
											"end": 6966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6982,
											"end": 6983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6990,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7187,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 7002,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7042,
											"end": 7043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 7077,
											"end": 7078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7059,
											"end": 7079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 7059,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7054,
											"end": 7079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7054,
											"end": 7079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 7111,
											"end": 7112,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7093,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7132,
											"end": 7133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 7122,
											"end": 7157,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7137,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 7137,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7137,
											"end": 7155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7137,
											"end": 7155,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 7137,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7157,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 7122,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7179,
											"end": 7180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7172,
											"end": 7181,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7167,
											"end": 7181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7167,
											"end": 7181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7187,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7387,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7193,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 7271,
											"end": 7272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7253,
											"end": 7273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7273,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 7305,
											"end": 7306,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7287,
											"end": 7307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7307,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 7287,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7282,
											"end": 7307,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7282,
											"end": 7307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7332,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7328,
											"end": 7329,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7324,
											"end": 7333,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 7333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 7333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7355,
											"end": 7356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7357,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7380,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 7343,
											"end": 7380,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7360,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 7360,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 7360,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7360,
											"end": 7378,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 7360,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7380,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 7343,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7387,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7725,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 7393,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7554,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7541,
											"end": 7550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7565,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7565,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7565,
											"end": 7636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7565,
											"end": 7636,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 7565,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7646,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 7714,
											"end": 7716,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7703,
											"end": 7712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7699,
											"end": 7717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7646,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 7646,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7646,
											"end": 7718,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 7646,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7725,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7725,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7821,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7731,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7801,
											"end": 7814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7783,
											"end": 7815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 7821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7943,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 7827,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7897,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 7912,
											"end": 7917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7897,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7897,
											"end": 7918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7897,
											"end": 7918,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 7897,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7887,
											"end": 7919,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7933,
											"end": 7934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7923,
											"end": 7935,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 8086,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7949,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8003,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8034,
											"end": 8040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8041,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 8074,
											"end": 8079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 8050,
											"end": 8080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8080,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 8050,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 8086,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 8086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 8086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 8086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 8086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8437,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 8092,
											"end": 8437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8210,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8196,
											"end": 8205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8187,
											"end": 8194,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8206,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8211,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8295,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 8176,
											"end": 8295,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 8214,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8214,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8293,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 8214,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8295,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 8176,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8359,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 8412,
											"end": 8419,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8392,
											"end": 8401,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8359,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 8359,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8359,
											"end": 8420,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 8359,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8420,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8305,
											"end": 8430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8437,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8620,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 8443,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8612,
											"name": "PUSH",
											"source": 6,
											"value": "4661696C656420746F2073656E6420455243323020746F6B656E730000000000"
										},
										{
											"begin": 8579,
											"end": 8580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8567,
											"end": 8581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8560,
											"end": 8613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8626,
											"end": 8992,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 8626,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8768,
											"end": 8771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8789,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 8853,
											"end": 8855,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 8848,
											"end": 8851,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8789,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8789,
											"end": 8856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8789,
											"end": 8856,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 8789,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 8954,
											"end": 8957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 8865,
											"end": 8958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8958,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 8865,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 8985,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8978,
											"end": 8981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8974,
											"end": 8986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 8986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8967,
											"end": 8986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8626,
											"end": 8992,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8626,
											"end": 8992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8626,
											"end": 8992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8626,
											"end": 8992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9417,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 8998,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9164,
											"end": 9168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9202,
											"end": 9204,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9191,
											"end": 9200,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9179,
											"end": 9205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9179,
											"end": 9205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9260,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9245,
											"end": 9249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9241,
											"end": 9261,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9237,
											"end": 9238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9226,
											"end": 9235,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9215,
											"end": 9262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9279,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 9405,
											"end": 9409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9279,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 9279,
											"end": 9410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9279,
											"end": 9410,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 9279,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9417,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9865,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 9423,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9572,
											"end": 9576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9612,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9599,
											"end": 9608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9595,
											"end": 9613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9623,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 9691,
											"end": 9692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9680,
											"end": 9689,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9676,
											"end": 9693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9673,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9623,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9623,
											"end": 9694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9623,
											"end": 9694,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 9623,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 9772,
											"end": 9774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9761,
											"end": 9770,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 9754,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9704,
											"end": 9776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9776,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 9704,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9786,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 9854,
											"end": 9856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9852,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9830,
											"end": 9836,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9786,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9786,
											"end": 9858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9786,
											"end": 9858,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 9786,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9865,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9865,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 10093,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 9871,
											"end": 10093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10045,
											"name": "PUSH",
											"source": 6,
											"value": "455243323020746F6B656E206D7573742062652067726561746572207468616E"
										},
										{
											"begin": 10007,
											"end": 10008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9995,
											"end": 10009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9988,
											"end": 10046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10080,
											"end": 10085,
											"name": "PUSH",
											"source": 6,
											"value": "20302E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10075,
											"end": 10077,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10056,
											"end": 10086,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 10093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 10093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10465,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 10099,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 10321,
											"end": 10324,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 10262,
											"end": 10329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 10427,
											"end": 10430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 10338,
											"end": 10431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10431,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 10338,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10456,
											"end": 10458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10451,
											"end": 10454,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10890,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 10471,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10637,
											"end": 10641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10675,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10664,
											"end": 10673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10660,
											"end": 10678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10652,
											"end": 10678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10652,
											"end": 10678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10718,
											"end": 10722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10734,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10711,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10699,
											"end": 10708,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10688,
											"end": 10735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 10878,
											"end": 10882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 10752,
											"end": 10883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10883,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 10752,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10896,
											"end": 11075,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10896,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11036,
											"end": 11067,
											"name": "PUSH",
											"source": 6,
											"value": "4D757374206465706F736974206D6F7265207468616E2030204554482E000000"
										},
										{
											"begin": 11032,
											"end": 11033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11024,
											"end": 11030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10896,
											"end": 11075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10896,
											"end": 11075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11223,
											"end": 11226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11244,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 11308,
											"end": 11310,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 11303,
											"end": 11306,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 11244,
											"end": 11311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11311,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 11244,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11311,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11320,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 11409,
											"end": 11412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11320,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 11320,
											"end": 11413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11320,
											"end": 11413,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 11320,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11433,
											"end": 11436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11429,
											"end": 11441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11422,
											"end": 11441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11422,
											"end": 11441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11619,
											"end": 11623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11646,
											"end": 11655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11634,
											"end": 11660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11634,
											"end": 11660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11706,
											"end": 11715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11696,
											"end": 11716,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11692,
											"end": 11693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11681,
											"end": 11690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 11694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11734,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 11860,
											"end": 11864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11734,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 11734,
											"end": 11865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11734,
											"end": 11865,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 11734,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11726,
											"end": 11865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11726,
											"end": 11865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11453,
											"end": 11872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11453,
											"end": 11872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 12069,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 11878,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11918,
											"end": 11921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11937,
											"end": 11957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 11955,
											"end": 11956,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 11937,
											"end": 11957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11957,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 11937,
											"end": 11957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11932,
											"end": 11957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11932,
											"end": 11957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 11989,
											"end": 11990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 11971,
											"end": 11991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11991,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 11971,
											"end": 11991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11966,
											"end": 11991,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11966,
											"end": 11991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12014,
											"end": 12015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12011,
											"end": 12012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12007,
											"end": 12016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12035,
											"end": 12038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12032,
											"end": 12033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12029,
											"end": 12039,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12026,
											"end": 12062,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12026,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 12026,
											"end": 12062,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 12042,
											"end": 12060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12026,
											"end": 12062,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 12026,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 12069,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 12069,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 12069,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 12069,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 12069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12075,
											"end": 12407,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 12075,
											"end": 12407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12196,
											"end": 12200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12234,
											"end": 12236,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12223,
											"end": 12232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12219,
											"end": 12237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12211,
											"end": 12237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12211,
											"end": 12237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 12315,
											"end": 12316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12304,
											"end": 12313,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12300,
											"end": 12317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12291,
											"end": 12297,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 12247,
											"end": 12318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12318,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 12247,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12328,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 12396,
											"end": 12398,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12385,
											"end": 12394,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12372,
											"end": 12378,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12328,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 12328,
											"end": 12400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12328,
											"end": 12400,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 12328,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12075,
											"end": 12407,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12075,
											"end": 12407,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12075,
											"end": 12407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12075,
											"end": 12407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12075,
											"end": 12407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12075,
											"end": 12407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12413,
											"end": 12634,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 12413,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12553,
											"end": 12587,
											"name": "PUSH",
											"source": 6,
											"value": "45544820616D6F756E74206D7573742062652067726561746572207468616E20"
										},
										{
											"begin": 12549,
											"end": 12550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12541,
											"end": 12547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12530,
											"end": 12588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12622,
											"end": 12626,
											"name": "PUSH",
											"source": 6,
											"value": "302E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12609,
											"end": 12615,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 12620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12598,
											"end": 12627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12413,
											"end": 12634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12413,
											"end": 12634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12640,
											"end": 13006,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 12640,
											"end": 13006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12782,
											"end": 12785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12803,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 12867,
											"end": 12869,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 12862,
											"end": 12865,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 12803,
											"end": 12870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12870,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 12803,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12796,
											"end": 12870,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12796,
											"end": 12870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12879,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 12968,
											"end": 12971,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12879,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 12879,
											"end": 12972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12879,
											"end": 12972,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 12879,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12997,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12992,
											"end": 12995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12988,
											"end": 13000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12981,
											"end": 13000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12981,
											"end": 13000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12640,
											"end": 13006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12640,
											"end": 13006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12640,
											"end": 13006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12640,
											"end": 13006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13012,
											"end": 13431,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 13012,
											"end": 13431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13178,
											"end": 13182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13216,
											"end": 13218,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13205,
											"end": 13214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13201,
											"end": 13219,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13193,
											"end": 13219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13193,
											"end": 13219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13265,
											"end": 13274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13259,
											"end": 13263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13255,
											"end": 13275,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13251,
											"end": 13252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13240,
											"end": 13249,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13236,
											"end": 13253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13229,
											"end": 13276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13293,
											"end": 13424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 13419,
											"end": 13423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13293,
											"end": 13424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 13293,
											"end": 13424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13293,
											"end": 13424,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 13293,
											"end": 13424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13285,
											"end": 13424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13285,
											"end": 13424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13012,
											"end": 13431,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13012,
											"end": 13431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13012,
											"end": 13431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13012,
											"end": 13431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13437,
											"end": 13659,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 13437,
											"end": 13659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13577,
											"end": 13611,
											"name": "PUSH",
											"source": 6,
											"value": "4D75737420696E707574206D6F7265207468616E203020455243323020546F6B"
										},
										{
											"begin": 13573,
											"end": 13574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13565,
											"end": 13571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13561,
											"end": 13575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13554,
											"end": 13612,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13651,
											"name": "PUSH",
											"source": 6,
											"value": "656E2E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13641,
											"end": 13643,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13633,
											"end": 13639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13629,
											"end": 13644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13622,
											"end": 13652,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13437,
											"end": 13659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13437,
											"end": 13659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13665,
											"end": 14031,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 13665,
											"end": 14031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13807,
											"end": 13810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13828,
											"end": 13895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 13892,
											"end": 13894,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 13887,
											"end": 13890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13828,
											"end": 13895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 13828,
											"end": 13895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13828,
											"end": 13895,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 13828,
											"end": 13895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13821,
											"end": 13895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13821,
											"end": 13895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13904,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 13993,
											"end": 13996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13904,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 13904,
											"end": 13997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13904,
											"end": 13997,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 13904,
											"end": 13997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14017,
											"end": 14020,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14013,
											"end": 14025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14006,
											"end": 14025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14006,
											"end": 14025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13665,
											"end": 14031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13665,
											"end": 14031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13665,
											"end": 14031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13665,
											"end": 14031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14037,
											"end": 14456,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 14037,
											"end": 14456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14203,
											"end": 14207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14241,
											"end": 14243,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14226,
											"end": 14244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14218,
											"end": 14244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14218,
											"end": 14244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14290,
											"end": 14299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14284,
											"end": 14288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14280,
											"end": 14300,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14276,
											"end": 14277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14265,
											"end": 14274,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14261,
											"end": 14278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14254,
											"end": 14301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14318,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 14444,
											"end": 14448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14318,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 14318,
											"end": 14449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14318,
											"end": 14449,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 14318,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14310,
											"end": 14449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14310,
											"end": 14449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14037,
											"end": 14456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14037,
											"end": 14456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14037,
											"end": 14456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14037,
											"end": 14456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14462,
											"end": 14635,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 14462,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E74206C69717569646974792E000000000000000000"
										},
										{
											"begin": 14598,
											"end": 14599,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14590,
											"end": 14596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14586,
											"end": 14600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14579,
											"end": 14628,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14462,
											"end": 14635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14462,
											"end": 14635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 15007,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 14641,
											"end": 15007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14783,
											"end": 14786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14804,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 14868,
											"end": 14870,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 14863,
											"end": 14866,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14804,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 14804,
											"end": 14871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14804,
											"end": 14871,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 14804,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14797,
											"end": 14871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14797,
											"end": 14871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 14969,
											"end": 14972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 14880,
											"end": 14973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14880,
											"end": 14973,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 14880,
											"end": 14973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14998,
											"end": 15000,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14993,
											"end": 14996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14989,
											"end": 15001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14982,
											"end": 15001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14982,
											"end": 15001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 15007,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 15007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 15007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 15007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15013,
											"end": 15432,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 15013,
											"end": 15432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15179,
											"end": 15183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15217,
											"end": 15219,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15206,
											"end": 15215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15202,
											"end": 15220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15194,
											"end": 15220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15194,
											"end": 15220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15266,
											"end": 15275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15260,
											"end": 15264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15256,
											"end": 15276,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15252,
											"end": 15253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15241,
											"end": 15250,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15237,
											"end": 15254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15230,
											"end": 15277,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15294,
											"end": 15425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 15420,
											"end": 15424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15294,
											"end": 15425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 15294,
											"end": 15425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15294,
											"end": 15425,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 15294,
											"end": 15425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15286,
											"end": 15425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15286,
											"end": 15425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15013,
											"end": 15432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15013,
											"end": 15432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15013,
											"end": 15432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15013,
											"end": 15432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15438,
											"end": 15609,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 15438,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15578,
											"end": 15601,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C6964207377617020657374696D6174650000000000000000000000"
										},
										{
											"begin": 15574,
											"end": 15575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15566,
											"end": 15572,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15562,
											"end": 15576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15555,
											"end": 15602,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15438,
											"end": 15609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15438,
											"end": 15609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15615,
											"end": 15981,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 15615,
											"end": 15981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15757,
											"end": 15760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15778,
											"end": 15845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 15842,
											"end": 15844,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 15837,
											"end": 15840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15778,
											"end": 15845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 15778,
											"end": 15845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15778,
											"end": 15845,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 15778,
											"end": 15845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15771,
											"end": 15845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15771,
											"end": 15845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15854,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 15943,
											"end": 15946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15854,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 15854,
											"end": 15947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15854,
											"end": 15947,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 15854,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15972,
											"end": 15974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15967,
											"end": 15970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15963,
											"end": 15975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15956,
											"end": 15975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15956,
											"end": 15975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15615,
											"end": 15981,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15615,
											"end": 15981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15615,
											"end": 15981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15615,
											"end": 15981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15987,
											"end": 16406,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 15987,
											"end": 16406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16153,
											"end": 16157,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16191,
											"end": 16193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16176,
											"end": 16194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16168,
											"end": 16194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16168,
											"end": 16194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16240,
											"end": 16249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16234,
											"end": 16238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16230,
											"end": 16250,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16226,
											"end": 16227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16215,
											"end": 16224,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16211,
											"end": 16228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16204,
											"end": 16251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16268,
											"end": 16399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 16394,
											"end": 16398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16268,
											"end": 16399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 16268,
											"end": 16399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16268,
											"end": 16399,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 16268,
											"end": 16399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16260,
											"end": 16399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16260,
											"end": 16399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15987,
											"end": 16406,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15987,
											"end": 16406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15987,
											"end": 16406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15987,
											"end": 16406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16412,
											"end": 16854,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 16412,
											"end": 16854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16561,
											"end": 16565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16599,
											"end": 16601,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 16588,
											"end": 16597,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16584,
											"end": 16602,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16576,
											"end": 16602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16576,
											"end": 16602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16612,
											"end": 16683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 16680,
											"end": 16681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16669,
											"end": 16678,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16665,
											"end": 16682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16656,
											"end": 16662,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 16612,
											"end": 16683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 16612,
											"end": 16683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16612,
											"end": 16683,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 16612,
											"end": 16683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16693,
											"end": 16765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 16761,
											"end": 16763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16750,
											"end": 16759,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16746,
											"end": 16764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16737,
											"end": 16743,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16693,
											"end": 16765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 16693,
											"end": 16765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16693,
											"end": 16765,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 16693,
											"end": 16765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16775,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 16843,
											"end": 16845,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16832,
											"end": 16841,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16819,
											"end": 16825,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16775,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 16775,
											"end": 16847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16775,
											"end": 16847,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 16775,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16412,
											"end": 16854,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 16412,
											"end": 16854,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 16412,
											"end": 16854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16412,
											"end": 16854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16412,
											"end": 16854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16412,
											"end": 16854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16412,
											"end": 16854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16860,
											"end": 17031,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 16860,
											"end": 17031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17000,
											"end": 17023,
											"name": "PUSH",
											"source": 6,
											"value": "4552433230207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 16996,
											"end": 16997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16988,
											"end": 16994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16984,
											"end": 16998,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16977,
											"end": 17024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16860,
											"end": 17031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16860,
											"end": 17031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17037,
											"end": 17403,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 17037,
											"end": 17403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17179,
											"end": 17182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17200,
											"end": 17267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 17264,
											"end": 17266,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 17259,
											"end": 17262,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17200,
											"end": 17267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 17200,
											"end": 17267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17200,
											"end": 17267,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 17200,
											"end": 17267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17193,
											"end": 17267,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17193,
											"end": 17267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17276,
											"end": 17369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 17365,
											"end": 17368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17276,
											"end": 17369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 17276,
											"end": 17369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17276,
											"end": 17369,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 17276,
											"end": 17369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17394,
											"end": 17396,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17389,
											"end": 17392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17385,
											"end": 17397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17378,
											"end": 17397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17378,
											"end": 17397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17037,
											"end": 17403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17037,
											"end": 17403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17037,
											"end": 17403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17037,
											"end": 17403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17409,
											"end": 17828,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 17409,
											"end": 17828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17575,
											"end": 17579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17613,
											"end": 17615,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17602,
											"end": 17611,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17598,
											"end": 17616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17590,
											"end": 17616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17590,
											"end": 17616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17662,
											"end": 17671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17656,
											"end": 17660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17652,
											"end": 17672,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17648,
											"end": 17649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17637,
											"end": 17646,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17633,
											"end": 17650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17626,
											"end": 17673,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17690,
											"end": 17821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 17816,
											"end": 17820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17690,
											"end": 17821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 17690,
											"end": 17821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17690,
											"end": 17821,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 17690,
											"end": 17821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17682,
											"end": 17821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17682,
											"end": 17821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17409,
											"end": 17828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17409,
											"end": 17828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17409,
											"end": 17828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17409,
											"end": 17828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17834,
											"end": 18004,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 17834,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17974,
											"end": 17996,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C696420737761702072657175657374000000000000000000000000"
										},
										{
											"begin": 17970,
											"end": 17971,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17958,
											"end": 17972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17951,
											"end": 17997,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17834,
											"end": 18004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17834,
											"end": 18004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18010,
											"end": 18376,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 18010,
											"end": 18376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18152,
											"end": 18155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18173,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 18237,
											"end": 18239,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 18232,
											"end": 18235,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18173,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 18173,
											"end": 18240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18173,
											"end": 18240,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 18173,
											"end": 18240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18166,
											"end": 18240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18166,
											"end": 18240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18249,
											"end": 18342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 18338,
											"end": 18341,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18249,
											"end": 18342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 18249,
											"end": 18342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18249,
											"end": 18342,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 18249,
											"end": 18342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18367,
											"end": 18369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18362,
											"end": 18365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18358,
											"end": 18370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18351,
											"end": 18370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18351,
											"end": 18370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18010,
											"end": 18376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18010,
											"end": 18376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18010,
											"end": 18376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18010,
											"end": 18376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18382,
											"end": 18801,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 18382,
											"end": 18801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18548,
											"end": 18552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18586,
											"end": 18588,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18575,
											"end": 18584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18571,
											"end": 18589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18563,
											"end": 18589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18563,
											"end": 18589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18635,
											"end": 18644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18629,
											"end": 18633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18625,
											"end": 18645,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18621,
											"end": 18622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18610,
											"end": 18619,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18606,
											"end": 18623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18599,
											"end": 18646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18663,
											"end": 18794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 18789,
											"end": 18793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18663,
											"end": 18794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 18663,
											"end": 18794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18663,
											"end": 18794,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 18663,
											"end": 18794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18655,
											"end": 18794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18655,
											"end": 18794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18382,
											"end": 18801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18382,
											"end": 18801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18382,
											"end": 18801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18382,
											"end": 18801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18807,
											"end": 18984,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 18807,
											"end": 18984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18947,
											"end": 18976,
											"name": "PUSH",
											"source": 6,
											"value": "4D75737420696E707574206D6F7265207468616E2030204554482E0000000000"
										},
										{
											"begin": 18943,
											"end": 18944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18935,
											"end": 18941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18931,
											"end": 18945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18924,
											"end": 18977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18807,
											"end": 18984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18807,
											"end": 18984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18990,
											"end": 19356,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 18990,
											"end": 19356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19132,
											"end": 19135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19153,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 19217,
											"end": 19219,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 19212,
											"end": 19215,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19153,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 19153,
											"end": 19220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19153,
											"end": 19220,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 19153,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19146,
											"end": 19220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19146,
											"end": 19220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19229,
											"end": 19322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 19318,
											"end": 19321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19229,
											"end": 19322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 19229,
											"end": 19322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19229,
											"end": 19322,
											"name": "tag",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 19229,
											"end": 19322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19347,
											"end": 19349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19342,
											"end": 19345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19338,
											"end": 19350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19331,
											"end": 19350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19331,
											"end": 19350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18990,
											"end": 19356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18990,
											"end": 19356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18990,
											"end": 19356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18990,
											"end": 19356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19362,
											"end": 19781,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 19362,
											"end": 19781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19528,
											"end": 19532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19566,
											"end": 19568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19555,
											"end": 19564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19551,
											"end": 19569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19543,
											"end": 19569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19543,
											"end": 19569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19615,
											"end": 19624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19609,
											"end": 19613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19605,
											"end": 19625,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19601,
											"end": 19602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19590,
											"end": 19599,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19586,
											"end": 19603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19579,
											"end": 19626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19643,
											"end": 19774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 19769,
											"end": 19773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19643,
											"end": 19774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 19643,
											"end": 19774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19643,
											"end": 19774,
											"name": "tag",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 19643,
											"end": 19774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19635,
											"end": 19774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19635,
											"end": 19774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19362,
											"end": 19781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19362,
											"end": 19781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19362,
											"end": 19781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19362,
											"end": 19781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19787,
											"end": 19966,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 19787,
											"end": 19966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19927,
											"end": 19958,
											"name": "PUSH",
											"source": 6,
											"value": "4D757374206D61696E7461696E204554482F455243323020726174696F000000"
										},
										{
											"begin": 19923,
											"end": 19924,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19915,
											"end": 19921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19911,
											"end": 19925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19904,
											"end": 19959,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19787,
											"end": 19966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19787,
											"end": 19966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19972,
											"end": 20338,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 19972,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20114,
											"end": 20117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20135,
											"end": 20202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 20199,
											"end": 20201,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 20194,
											"end": 20197,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20135,
											"end": 20202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 20135,
											"end": 20202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20135,
											"end": 20202,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 20135,
											"end": 20202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20128,
											"end": 20202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20128,
											"end": 20202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20211,
											"end": 20304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 20300,
											"end": 20303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20211,
											"end": 20304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 20211,
											"end": 20304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20211,
											"end": 20304,
											"name": "tag",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 20211,
											"end": 20304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20329,
											"end": 20331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20324,
											"end": 20327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20320,
											"end": 20332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20313,
											"end": 20332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20313,
											"end": 20332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19972,
											"end": 20338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19972,
											"end": 20338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19972,
											"end": 20338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19972,
											"end": 20338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20344,
											"end": 20763,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 20344,
											"end": 20763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20510,
											"end": 20514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20548,
											"end": 20550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20537,
											"end": 20546,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20533,
											"end": 20551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20525,
											"end": 20551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20525,
											"end": 20551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20597,
											"end": 20606,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20591,
											"end": 20595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20587,
											"end": 20607,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20583,
											"end": 20584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20572,
											"end": 20581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20568,
											"end": 20585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20561,
											"end": 20608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20625,
											"end": 20756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 20751,
											"end": 20755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20625,
											"end": 20756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 20625,
											"end": 20756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20625,
											"end": 20756,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 20625,
											"end": 20756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20617,
											"end": 20756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20617,
											"end": 20756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20344,
											"end": 20763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20344,
											"end": 20763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20344,
											"end": 20763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20344,
											"end": 20763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20769,
											"end": 21322,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 20769,
											"end": 21322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20946,
											"end": 20950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20984,
											"end": 20987,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 20973,
											"end": 20982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20969,
											"end": 20988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20961,
											"end": 20988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20961,
											"end": 20988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20998,
											"end": 21069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 21066,
											"end": 21067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21055,
											"end": 21064,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21051,
											"end": 21068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21042,
											"end": 21048,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 20998,
											"end": 21069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 20998,
											"end": 21069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20998,
											"end": 21069,
											"name": "tag",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 20998,
											"end": 21069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21079,
											"end": 21151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 21147,
											"end": 21149,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21136,
											"end": 21145,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21132,
											"end": 21150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21123,
											"end": 21129,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 21079,
											"end": 21151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 21079,
											"end": 21151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21079,
											"end": 21151,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 21079,
											"end": 21151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21161,
											"end": 21233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 21229,
											"end": 21231,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 21218,
											"end": 21227,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21214,
											"end": 21232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21205,
											"end": 21211,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 21161,
											"end": 21233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 21161,
											"end": 21233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21161,
											"end": 21233,
											"name": "tag",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 21161,
											"end": 21233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21243,
											"end": 21315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 21311,
											"end": 21313,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 21300,
											"end": 21309,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21296,
											"end": 21314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21287,
											"end": 21293,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 21243,
											"end": 21315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 21243,
											"end": 21315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21243,
											"end": 21315,
											"name": "tag",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 21243,
											"end": 21315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20769,
											"end": 21322,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 20769,
											"end": 21322,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 20769,
											"end": 21322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20769,
											"end": 21322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20769,
											"end": 21322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20769,
											"end": 21322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20769,
											"end": 21322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20769,
											"end": 21322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21328,
											"end": 21505,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 21328,
											"end": 21505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21468,
											"end": 21497,
											"name": "PUSH",
											"source": 6,
											"value": "455448206D7573742062652067726561746572207468616E20302E0000000000"
										},
										{
											"begin": 21464,
											"end": 21465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21456,
											"end": 21462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21452,
											"end": 21466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21445,
											"end": 21498,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21328,
											"end": 21505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21328,
											"end": 21505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21511,
											"end": 21877,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 21511,
											"end": 21877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21653,
											"end": 21656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21674,
											"end": 21741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 21738,
											"end": 21740,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 21733,
											"end": 21736,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21674,
											"end": 21741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 21674,
											"end": 21741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21674,
											"end": 21741,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 21674,
											"end": 21741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21667,
											"end": 21741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21667,
											"end": 21741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21750,
											"end": 21843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 21839,
											"end": 21842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21750,
											"end": 21843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 21750,
											"end": 21843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21750,
											"end": 21843,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 21750,
											"end": 21843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21868,
											"end": 21870,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21863,
											"end": 21866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21859,
											"end": 21871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21852,
											"end": 21871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21852,
											"end": 21871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21511,
											"end": 21877,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21511,
											"end": 21877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21511,
											"end": 21877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21511,
											"end": 21877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21883,
											"end": 22302,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 21883,
											"end": 22302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22049,
											"end": 22053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 22087,
											"end": 22089,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 22076,
											"end": 22085,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 22072,
											"end": 22090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 22136,
											"end": 22145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 22130,
											"end": 22134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 22126,
											"end": 22146,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 22122,
											"end": 22123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 22107,
											"end": 22124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 22100,
											"end": 22147,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 22164,
											"end": 22295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 22290,
											"end": 22294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 22164,
											"end": 22295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 22164,
											"end": 22295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22164,
											"end": 22295,
											"name": "tag",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 22164,
											"end": 22295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 22156,
											"end": 22295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 22156,
											"end": 22295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21883,
											"end": 22302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21883,
											"end": 22302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21883,
											"end": 22302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21883,
											"end": 22302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Exchange.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"K()": "a932492f",
							"erc20Token()": "8a13eea7",
							"estimateERC20TokenToProvide(uint256)": "ed7bf868",
							"estimateEthToProvide(uint256)": "240f3dea",
							"estimateSwapForERC20Token(uint256)": "79ed3562",
							"estimateSwapForEth(uint256)": "903875f7",
							"getMyLiquidityPositions()": "e0ba2000",
							"liquidityPositions(address)": "6fd0ea92",
							"provideLiquidity(uint256)": "eb521a4c",
							"swapForERC20Token()": "29cbab3e",
							"swapForEth(uint256)": "c8ab8325",
							"totalLiquidityPositions()": "1cde6226",
							"withdrawLiquidity(uint256)": "0a861f2a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountERC20TokenDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEthDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityPositionsIssued\",\"type\":\"uint256\"}],\"name\":\"LiquidityProvided\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountERC20TokenWithdrew\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEthWithdrew\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityPositionsBurned\",\"type\":\"uint256\"}],\"name\":\"LiquidityWithdrew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountERC20TokenWithdrew\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEthDeposited\",\"type\":\"uint256\"}],\"name\":\"SwapForERC20Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountERC20TokenDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEthWithdrew\",\"type\":\"uint256\"}],\"name\":\"SwapForEth\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"K\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20Token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountEth\",\"type\":\"uint256\"}],\"name\":\"estimateERC20TokenToProvide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountERC20Token\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountERC20Token\",\"type\":\"uint256\"}],\"name\":\"estimateEthToProvide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountEth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountEth\",\"type\":\"uint256\"}],\"name\":\"estimateSwapForERC20Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ERC20TokenToSend\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountERC20Token\",\"type\":\"uint256\"}],\"name\":\"estimateSwapForEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethToSend\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyLiquidityPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountERC20Token\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapForERC20Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ERC20TokenToSend\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountERC20Token\",\"type\":\"uint256\"}],\"name\":\"swapForEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethToSend\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidityPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityPositionsToBurn\",\"type\":\"uint256\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x30745a46aa78a205c91a028629a2878d6d6416c747e2a13041c68588d3053df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeaea07fc60676cc3e2d2df8d36dd550ba8fa0bb1395178a9b764ab4c049d8a3\",\"dweb:/ipfs/QmeDqVsPV63rJj2uNPfg7SG5Z1KNP6vNgBN1F78kEmz1Jg\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4b66493cca45dc0ba9bdfb0a60970f9278c11da8de004339944ced80b86c55c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17bd597781651d2f92f83c60588ed3033665b9e99ba01b2ee64a9cc4f01833bb\",\"dweb:/ipfs/Qmc1BpbKFzwVY5GcTFcShbgebCZNqXAWMorfZPHs43TL2S\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xfc40fb05166e90621012a05da452eaa14315f16ccf51833fb9c824c40809b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c048116af61532acce61f77cdf6e1a4c0195e1d9d2f297c9016b4463e526163\",\"dweb:/ipfs/QmfZ3hZ21ur1ysZsKdXh53LJ3GNZF9CK2UFD8QnAPi4wAJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa1a93462fa05ab3ebbde01971ce1c6fb415761fbaab2710b70d0fbe1a53b0689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44fedd57d91bcaf205e97d8bc00ddbff05375e32a53bd30f7bfc49a629cc4439\",\"dweb:/ipfs/QmbBJN3zuGqmma6Bdij4AN5zHmgF7txVU1kzrU6rCyWvsW\"]},\"contracts/Exchange.sol\":{\"keccak256\":\"0xd0b33324905c84d1152133da524663800d173a836c1f4eadc7273a00e22b19c3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://07616b9867be20ba74d82ad1bc01bf6e2335c1e1d2f75087360a3a8a34636616\",\"dweb:/ipfs/QmbZtJnLygdDXu9WJdWSv7xWs19ohSMYFsrGiUVQya4sqv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 783,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "erc20Token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC20)651"
							},
							{
								"astId": 785,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "totalLiquidityPositions",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 787,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "K",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 791,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "liquidityPositions",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)651": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							]
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							777
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 778,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 777,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								777
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": []
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": []
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							777
						]
					},
					"id": 778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 777,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 777,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 778,
							"src": "624:235:4",
							"usedErrors": []
						}
					],
					"src": "101:759:4"
				},
				"id": 4
			},
			"contracts/Exchange.sol": {
				"ast": {
					"absolutePath": "contracts/Exchange.sol",
					"exportedSymbols": {
						"Context": [
							777
						],
						"ERC20": [
							651
						],
						"Exchange": [
							1482
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1483,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1483,
							"sourceUnit": 652,
							"src": "64:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Exchange",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1482,
							"linearizedBaseContracts": [
								1482
							],
							"name": "Exchange",
							"nameLocation": "130:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8a13eea7",
									"id": 783,
									"mutability": "mutable",
									"name": "erc20Token",
									"nameLocation": "158:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1482,
									"src": "145:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$651",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 782,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 781,
											"name": "ERC20",
											"nameLocations": [
												"145:5:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 651,
											"src": "145:5:5"
										},
										"referencedDeclaration": 651,
										"src": "145:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$651",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1cde6226",
									"id": 785,
									"mutability": "mutable",
									"name": "totalLiquidityPositions",
									"nameLocation": "186:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 1482,
									"src": "174:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 784,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "174:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a932492f",
									"id": 787,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "227:1:5",
									"nodeType": "VariableDeclaration",
									"scope": 1482,
									"src": "215:13:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 786,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "215:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6fd0ea92",
									"id": 791,
									"mutability": "mutable",
									"name": "liquidityPositions",
									"nameLocation": "286:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1482,
									"src": "254:50:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 790,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 788,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "262:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "254:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 789,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "273:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "400:50:5",
										"statements": [
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 796,
														"name": "erc20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "410:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 798,
																"name": "_erc20Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "429:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 797,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "423:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "423:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"src": "410:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "410:33:5"
											}
										]
									},
									"id": 803,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "_erc20Address",
												"nameLocation": "385:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "377:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:23:5"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:0:5"
									},
									"scope": 1482,
									"src": "365:85:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "546:1598:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 811,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "564:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "568:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "564:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "576:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "564:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420696e707574206d6f7265207468616e2030204554482e",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "579:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856",
																"typeString": "literal_string \"Must input more than 0 ETH.\""
															},
															"value": "Must input more than 0 ETH."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f76af28714e98a1006dfce9c0820920f5abd660f11d7798c1b1c1e692c4aa856",
																"typeString": "literal_string \"Must input more than 0 ETH.\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "556:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "556:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "556:53:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 819,
																"name": "_amountERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "627:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "647:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "627:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420696e707574206d6f7265207468616e203020455243323020546f6b656e2e",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "650:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2",
																"typeString": "literal_string \"Must input more than 0 ERC20 Token.\""
															},
															"value": "Must input more than 0 ERC20 Token."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2",
																"typeString": "literal_string \"Must input more than 0 ERC20 Token.\""
															}
														],
														"id": 818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "619:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "619:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "619:69:5"
											},
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "ethBalanceBefore",
														"nameLocation": "703:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "698:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "698:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 829,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "730:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "722:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 827,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "722:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "722:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "736:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "722:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 832,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "746:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "750:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "746:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "722:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "698:57:5"
											},
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "erc20BalanceBefore",
														"nameLocation": "770:18:5",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "765:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 836,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "765:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 842,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "820:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "812:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "812:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "812:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 838,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "791:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "802:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "791:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "791:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "765:61:5"
											},
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "905:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "900:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 846,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "900:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 858,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 850,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "936:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "940:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "936:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 854,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "956:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "948:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 852,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "948:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "948:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "963:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 848,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "912:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "923:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 334,
														"src": "912:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "912:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "900:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "999:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433230207472616e73666572206661696c6564",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1005:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															},
															"value": "ERC20 transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															}
														],
														"id": 859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "991:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "991:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "991:38:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 864,
														"name": "totalLiquidityPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1044:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1071:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1044:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 908,
													"nodeType": "Block",
													"src": "1170:561:5",
													"statements": [
														{
															"assignments": [
																873
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 873,
																	"mutability": "mutable",
																	"name": "ethReserve",
																	"nameLocation": "1189:10:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 908,
																	"src": "1184:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 872,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1184:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 875,
															"initialValue": {
																"id": 874,
																"name": "ethBalanceBefore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1202:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1184:34:5"
														},
														{
															"assignments": [
																877
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 877,
																	"mutability": "mutable",
																	"name": "tokenReserve",
																	"nameLocation": "1237:12:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 908,
																	"src": "1232:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 876,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1232:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 879,
															"initialValue": {
																"id": 878,
																"name": "erc20BalanceBefore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "1252:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1232:38:5"
														},
														{
															"assignments": [
																881
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 881,
																	"mutability": "mutable",
																	"name": "ethAmount",
																	"nameLocation": "1289:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 908,
																	"src": "1284:14:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 880,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1284:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 884,
															"initialValue": {
																"expression": {
																	"id": 882,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1301:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1305:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1301:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1284:26:5"
														},
														{
															"assignments": [
																886
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 886,
																	"mutability": "mutable",
																	"name": "tokenAmount",
																	"nameLocation": "1329:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 908,
																	"src": "1324:16:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 885,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1324:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 888,
															"initialValue": {
																"id": 887,
																"name": "_amountERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "1343:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1324:36:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 890,
																				"name": "ethReserve",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 873,
																				"src": "1462:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 891,
																				"name": "tokenAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 886,
																				"src": "1475:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1462:24:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 893,
																				"name": "ethAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "1490:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 894,
																				"name": "tokenReserve",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 877,
																				"src": "1502:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1490:24:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1462:52:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d757374206d61696e7461696e204554482f455243323020726174696f",
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1516:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5",
																			"typeString": "literal_string \"Must maintain ETH/ERC20 ratio\""
																		},
																		"value": "Must maintain ETH/ERC20 ratio"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5ebe5e3a5467dc13b2a544e957af4c4842a73cf5e0847b4ad7db756f29a9efd5",
																			"typeString": "literal_string \"Must maintain ETH/ERC20 ratio\""
																		}
																	],
																	"id": 889,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1454:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1454:94:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "ExpressionStatement",
															"src": "1454:94:5"
														},
														{
															"expression": {
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 900,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "1660:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 901,
																			"name": "totalLiquidityPositions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "1672:23:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 902,
																			"name": "ethAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "1698:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1672:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 904,
																		"name": "ethReserve",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "1710:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1672:48:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1660:60:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "1660:60:5"
														}
													]
												},
												"id": 909,
												"nodeType": "IfStatement",
												"src": "1040:691:5",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "1074:90:5",
													"statements": [
														{
															"expression": {
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 867,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "1088:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "313030",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1100:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1088:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 870,
															"nodeType": "ExpressionStatement",
															"src": "1088:15:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 910,
															"name": "liquidityPositions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1740:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 913,
														"indexExpression": {
															"expression": {
																"id": 911,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1759:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1763:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1759:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1740:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 914,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1774:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1740:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "1740:43:5"
											},
											{
												"expression": {
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 917,
														"name": "totalLiquidityPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1793:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 918,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1820:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1793:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1793:36:5"
											},
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 921,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "1912:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 922,
																		"name": "ethBalanceBefore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "1917:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 923,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1936:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1940:5:5",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "1936:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1917:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 926,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1916:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 927,
																		"name": "erc20BalanceBefore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "1950:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 928,
																		"name": "_amountERC20Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "1971:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1950:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 930,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1949:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1916:73:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1912:77:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "1912:77:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 935,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2023:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2027:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2023:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "2035:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 938,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2054:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2058:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2054:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 940,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "2065:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "LiquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "2005:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2005:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "EmitStatement",
												"src": "2000:75:5"
											},
											{
												"expression": {
													"id": 943,
													"name": "liquidity",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "2128:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 809,
												"id": 944,
												"nodeType": "Return",
												"src": "2121:16:5"
											}
										]
									},
									"functionSelector": "eb521a4c",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "465:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "_amountERC20Token",
												"nameLocation": "487:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "482:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:24:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "535:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "530:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "530:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:16:5"
									},
									"scope": 1482,
									"src": "456:1688:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "2241:587:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 954,
																"name": "_amountERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "2259:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2279:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2259:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243323020746f6b656e206d7573742062652067726561746572207468616e20302e",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2282:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c",
																"typeString": "literal_string \"ERC20 token must be greater than 0.\""
															},
															"value": "ERC20 token must be greater than 0."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_99084cbf1f601c4c5fd75a2f41cd335a3d451a0172cd402bd340e5a3a509f15c",
																"typeString": "literal_string \"ERC20 token must be greater than 0.\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2251:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "2251:69:5"
											},
											{
												"assignments": [
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "contractEthBalance",
														"nameLocation": "2335:18:5",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "2330:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 960,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2330:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 967,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 964,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2364:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2356:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2356:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2356:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2370:7:5",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2356:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2330:47:5"
											},
											{
												"assignments": [
													969
												],
												"declarations": [
													{
														"constant": false,
														"id": 969,
														"mutability": "mutable",
														"name": "contractERC20TokenBalance",
														"nameLocation": "2392:25:5",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "2387:30:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 968,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2387:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 974,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2449:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2441:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 972,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2441:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2441:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 970,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "2420:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2431:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "2420:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2420:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2387:68:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 978,
														"name": "contractERC20TokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "2563:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2592:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2563:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "2559:69:5",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "2595:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 952,
															"id": 982,
															"nodeType": "Return",
															"src": "2609:8:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "amountEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2717:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 986,
																"name": "contractEthBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "2729:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 987,
																"name": "_amountERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "2750:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2729:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 989,
															"name": "contractERC20TokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2770:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2729:66:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:78:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "2717:78:5"
											},
											{
												"expression": {
													"id": 993,
													"name": "amountEth",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 951,
													"src": "2812:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 952,
												"id": 994,
												"nodeType": "Return",
												"src": "2805:16:5"
											}
										]
									},
									"functionSelector": "240f3dea",
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateEthToProvide",
									"nameLocation": "2159:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "_amountERC20Token",
												"nameLocation": "2185:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2180:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2180:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:24:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "amountEth",
												"nameLocation": "2230:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2225:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2225:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:16:5"
									},
									"scope": 1482,
									"src": "2150:678:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "2932:485:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1004,
																"name": "_amountEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "2950:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2963:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2950:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455448206d7573742062652067726561746572207468616e20302e",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2966:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20",
																"typeString": "literal_string \"ETH must be greater than 0.\""
															},
															"value": "ETH must be greater than 0."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c4c0c6e1304920aab0ee76660e94073dafab18b55f49ccc54c2ee75bcacff20",
																"typeString": "literal_string \"ETH must be greater than 0.\""
															}
														],
														"id": 1003,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2942:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2942:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "2942:54:5"
											},
											{
												"assignments": [
													1011
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "contractEthBalance",
														"nameLocation": "3011:18:5",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "3006:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1010,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3006:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1014,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3040:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															],
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3032:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1012,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3032:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3032:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3046:7:5",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3032:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3006:47:5"
											},
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "contractERC20TokenBalance",
														"nameLocation": "3068:25:5",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "3063:30:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1018,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3063:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1027,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1024,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3125:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3117:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1022,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3117:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3117:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1020,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "3096:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3107:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "3096:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3096:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3063:68:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1028,
														"name": "contractEthBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3145:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3167:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3145:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1034,
												"nodeType": "IfStatement",
												"src": "3141:62:5",
												"trueBody": {
													"id": 1033,
													"nodeType": "Block",
													"src": "3170:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3191:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1002,
															"id": 1032,
															"nodeType": "Return",
															"src": "3184:8:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1035,
														"name": "amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "3299:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1036,
																"name": "contractERC20TokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "3318:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1037,
																"name": "_amountEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "3346:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3318:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1039,
															"name": "contractEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "3359:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3318:59:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3299:78:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "3299:78:5"
											},
											{
												"expression": {
													"id": 1043,
													"name": "amountERC20Token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1001,
													"src": "3394:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1044,
												"nodeType": "Return",
												"src": "3387:23:5"
											}
										]
									},
									"functionSelector": "ed7bf868",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateERC20TokenToProvide",
									"nameLocation": "2843:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "_amountEth",
												"nameLocation": "2876:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2871:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2871:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:17:5"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "amountERC20Token",
												"nameLocation": "2914:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2909:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2909:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2908:23:5"
									},
									"scope": 1482,
									"src": "2834:583:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "3488:54:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1051,
														"name": "liquidityPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "3505:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1054,
													"indexExpression": {
														"expression": {
															"id": 1052,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3524:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3528:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3524:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3505:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1055,
												"nodeType": "Return",
												"src": "3498:37:5"
											}
										]
									},
									"functionSelector": "e0ba2000",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyLiquidityPositions",
									"nameLocation": "3433:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3456:2:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "3482:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:6:5"
									},
									"scope": 1482,
									"src": "3424:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "3614:1317:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1063,
																"name": "_liquidityPositionsToBurn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "3632:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3660:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3632:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206275726e207a65726f206c697175696469747920706f736974696f6e73",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3663:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f",
																"typeString": "literal_string \"Cannot burn zero liquidity positions\""
															},
															"value": "Cannot burn zero liquidity positions"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_555b09529ba57de7cedf7bfb4fcc83afaf02ddd6c92ac8626a21a2f6f6e18e7f",
																"typeString": "literal_string \"Cannot burn zero liquidity positions\""
															}
														],
														"id": 1062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3624:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "3624:78:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1070,
																	"name": "liquidityPositions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "3720:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1073,
																"indexExpression": {
																	"expression": {
																		"id": 1071,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3739:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3743:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3739:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3720:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1074,
																"name": "_liquidityPositionsToBurn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "3754:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3720:59:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206c697175696469747920706f736974696f6e7320746f206275726e",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3781:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6",
																"typeString": "literal_string \"Not enough liquidity positions to burn\""
															},
															"value": "Not enough liquidity positions to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec3068a8f2edc4d3961f2c137cd56117500aa6e1b8a3ad6215175d18a1f08bc6",
																"typeString": "literal_string \"Not enough liquidity positions to burn\""
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3712:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3712:110:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "3712:110:5"
											},
											{
												"assignments": [
													1080
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "contractEthBalance",
														"nameLocation": "3838:18:5",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "3833:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1079,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3833:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1083,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3867:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															],
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3859:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1081,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3859:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3859:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3873:7:5",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3859:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3833:47:5"
											},
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "contractERC20TokenBalance",
														"nameLocation": "3895:25:5",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "3890:30:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1093,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3952:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3944:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3944:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3944:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1089,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "3923:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3934:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "3923:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3890:68:5"
											},
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "amountEthToSend",
														"nameLocation": "3974:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "3969:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3969:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1104,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1099,
															"name": "_liquidityPositionsToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "3992:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1100,
															"name": "contractEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "4020:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3992:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1102,
														"name": "totalLiquidityPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "4041:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3992:72:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3969:95:5"
											},
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "amountERC20ToSend",
														"nameLocation": "4079:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "4074:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1105,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4074:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1112,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1107,
															"name": "_liquidityPositionsToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "4099:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1108,
															"name": "contractERC20TokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "4127:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4099:53:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1110,
														"name": "totalLiquidityPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "4155:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4099:79:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4074:104:5"
											},
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1113,
															"name": "liquidityPositions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "4189:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1116,
														"indexExpression": {
															"expression": {
																"id": 1114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4208:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4212:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4208:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4189:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1117,
														"name": "_liquidityPositionsToBurn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "4223:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4189:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "4189:59:5"
											},
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1120,
														"name": "totalLiquidityPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "4258:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1121,
														"name": "_liquidityPositionsToBurn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "4285:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4258:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "4258:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "amountEthToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "4404:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1126,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4383:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4387:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4383:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4375:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1124,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4375:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4375:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4395:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4375:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4375:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "4375:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1136,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4497:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4501:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4497:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1138,
																	"name": "amountERC20ToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "4509:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1134,
																	"name": "erc20Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "4477:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$651",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4488:8:5",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 261,
																"src": "4477:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4477:50:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e6420455243323020746f6b656e73",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4529:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582",
																"typeString": "literal_string \"Failed to send ERC20 tokens\""
															},
															"value": "Failed to send ERC20 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582",
																"typeString": "literal_string \"Failed to send ERC20 tokens\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4469:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4469:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "4469:90:5"
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1143,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "4627:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1144,
																		"name": "contractEthBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "4632:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1145,
																		"name": "amountEthToSend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "4653:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4632:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1147,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4631:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1148,
																		"name": "contractERC20TokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "4673:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1149,
																		"name": "amountERC20ToSend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "4701:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4673:45:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1151,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4672:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4631:88:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4627:92:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "4627:92:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1156,
															"name": "amountERC20ToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "4862:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1157,
															"name": "amountEthToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "4881:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1158,
															"name": "_liquidityPositionsToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "4898:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1155,
														"name": "LiquidityWithdrew",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "4844:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4844:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "EmitStatement",
												"src": "4839:85:5"
											}
										]
									},
									"functionSelector": "0a861f2a",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawLiquidity",
									"nameLocation": "3557:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_liquidityPositionsToBurn",
												"nameLocation": "3580:25:5",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "3575:30:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3575:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:32:5"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3614:0:5"
									},
									"scope": 1482,
									"src": "3548:1383:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "5013:1180:5",
										"statements": [
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "contractEthBalance",
														"nameLocation": "5028:18:5",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "5023:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1169,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5023:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1176,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1173,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5057:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															],
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5049:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1171,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5049:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5049:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5063:7:5",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5049:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5023:47:5"
											},
											{
												"assignments": [
													1178
												],
												"declarations": [
													{
														"constant": false,
														"id": 1178,
														"mutability": "mutable",
														"name": "contractERC20TokenBalance",
														"nameLocation": "5085:25:5",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "5080:30:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1177,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5080:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1186,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1183,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5134:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1181,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5134:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5134:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1179,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5113:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5124:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "5113:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5080:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "_amountERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "5167:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5187:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5167:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420696e707574206d6f7265207468616e203020455243323020546f6b656e2e",
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5190:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2",
																"typeString": "literal_string \"Must input more than 0 ERC20 Token.\""
															},
															"value": "Must input more than 0 ERC20 Token."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2",
																"typeString": "literal_string \"Must input more than 0 ERC20 Token.\""
															}
														],
														"id": 1187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5159:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5159:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "5159:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1195,
																"name": "contractERC20TokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "5246:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5274:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5246:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c69717569646974792e",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5277:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545",
																"typeString": "literal_string \"Insufficient liquidity.\""
															},
															"value": "Insufficient liquidity."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545",
																"typeString": "literal_string \"Insufficient liquidity.\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5238:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5238:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "5238:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1204,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5417:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5421:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5417:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1208,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5437:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Exchange_$1482",
																				"typeString": "contract Exchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Exchange_$1482",
																				"typeString": "contract Exchange"
																			}
																		],
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5429:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1206,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5429:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5429:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1210,
																	"name": "_amountERC20Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "5444:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1202,
																	"name": "erc20Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5393:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$651",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5404:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 334,
																"src": "5393:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5393:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433230207472616e73666572206661696c6564",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5464:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															},
															"value": "ERC20 transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5385:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5385:103:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "5385:103:5"
											},
											{
												"assignments": [
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "contractERC20TokenBalanceAfterSwap",
														"nameLocation": "5588:34:5",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "5583:39:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1215,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5583:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1217,
														"name": "contractERC20TokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "5625:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1218,
														"name": "_amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "5653:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5625:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5583:87:5"
											},
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "contractEthBalanceAfterSwap",
														"nameLocation": "5685:27:5",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "5680:32:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1221,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5680:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1223,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "5715:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1224,
														"name": "contractERC20TokenBalanceAfterSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "5719:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5715:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5680:73:5"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "ethToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "5763:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1228,
															"name": "contractEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "5775:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1229,
															"name": "contractEthBalanceAfterSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "5796:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5775:48:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5763:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "5763:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1234,
																	"name": "ethToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "5922:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5934:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5922:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1237,
																	"name": "ethToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "5939:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1238,
																	"name": "contractEthBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "5952:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5939:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5922:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420737761702072657175657374",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5972:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b",
																"typeString": "literal_string \"Invalid swap request\""
															},
															"value": "Invalid swap request"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c7267ece61df88f8826b9e7ee48f7a0cce647f4e34163d19edb5ed825bc6f9b",
																"typeString": "literal_string \"Invalid swap request\""
															}
														],
														"id": 1233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5914:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5914:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "5914:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1250,
															"name": "ethToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "6067:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1246,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6046:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6050:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6046:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6038:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6038:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6038:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6058:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6038:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "6038:39:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1254,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "6130:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1255,
															"name": "ethToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "6149:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1253,
														"name": "SwapForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "6119:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6119:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "EmitStatement",
												"src": "6114:45:5"
											},
											{
												"expression": {
													"id": 1258,
													"name": "ethToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1167,
													"src": "6177:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1259,
												"nodeType": "Return",
												"src": "6170:16:5"
											}
										]
									},
									"functionSelector": "c8ab8325",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapForEth",
									"nameLocation": "4946:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "_amountERC20Token",
												"nameLocation": "4962:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4957:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4957:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:24:5"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "ethToSend",
												"nameLocation": "5002:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4997:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4997:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4996:16:5"
									},
									"scope": 1482,
									"src": "4937:1256:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "6288:859:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "_amountERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "6306:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6326:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6306:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d75737420696e707574206d6f7265207468616e203020455243323020546f6b656e2e",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6329:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2",
																"typeString": "literal_string \"Must input more than 0 ERC20 Token.\""
															},
															"value": "Must input more than 0 ERC20 Token."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1fd43701b6f94be2095b9c0fd45bed7f0ce9c459117ee02bc254815a96680c2",
																"typeString": "literal_string \"Must input more than 0 ERC20 Token.\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6298:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6298:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "6298:69:5"
											},
											{
												"assignments": [
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "contractEthBalance",
														"nameLocation": "6391:18:5",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "6386:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1275,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6386:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1279,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "6420:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															],
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6412:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1277,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6412:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6412:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6426:7:5",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6412:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6386:47:5"
											},
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "contractERC20TokenBalance",
														"nameLocation": "6448:25:5",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "6443:30:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1283,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6443:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1289,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6505:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6497:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1287,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6497:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6497:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1285,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "6476:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6487:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "6476:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6443:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1294,
																"name": "contractERC20TokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "6529:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6557:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6529:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c69717569646974792e",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6560:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545",
																"typeString": "literal_string \"Insufficient liquidity.\""
															},
															"value": "Insufficient liquidity."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b146fbdd3f80f95797ccbf9f93e853fcfbebd4d8d5456b79b121c955aad8545",
																"typeString": "literal_string \"Insufficient liquidity.\""
															}
														],
														"id": 1293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6521:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6521:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "6521:65:5"
											},
											{
												"assignments": [
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "contractERC20TokenBalanceAfterSwap",
														"nameLocation": "6686:34:5",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "6681:39:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1300,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6681:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1305,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1302,
														"name": "contractERC20TokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "6723:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1303,
														"name": "_amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "6751:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6723:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6681:87:5"
											},
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "contractEthBalanceAfterSwap",
														"nameLocation": "6783:27:5",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "6778:32:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1306,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6778:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1308,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "6813:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1309,
														"name": "contractERC20TokenBalanceAfterSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "6817:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6813:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6778:73:5"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1312,
														"name": "ethToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "6861:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1313,
															"name": "contractEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "6873:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1314,
															"name": "contractEthBalanceAfterSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "6894:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6873:48:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6861:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "6861:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1319,
																	"name": "ethToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "7039:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7051:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7039:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1322,
																	"name": "ethToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "7056:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1323,
																	"name": "contractEthBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "7069:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7056:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7039:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207377617020657374696d617465",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7089:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051",
																"typeString": "literal_string \"Invalid swap estimate\""
															},
															"value": "Invalid swap estimate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89210e1e483f13aa65916af954d5d782a06d5c35dbfdf82b1d91da146f7fb051",
																"typeString": "literal_string \"Invalid swap estimate\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7031:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7031:82:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "7031:82:5"
											},
											{
												"expression": {
													"id": 1329,
													"name": "ethToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1266,
													"src": "7131:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1267,
												"id": 1330,
												"nodeType": "Return",
												"src": "7124:16:5"
											}
										]
									},
									"functionSelector": "903875f7",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateSwapForEth",
									"nameLocation": "6208:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "_amountERC20Token",
												"nameLocation": "6232:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "6227:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6227:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6226:24:5"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "ethToSend",
												"nameLocation": "6277:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "6272:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6271:16:5"
									},
									"scope": 1482,
									"src": "6199:948:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "7229:697:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1338,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7247:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7251:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7247:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7259:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7247:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206465706f736974206d6f7265207468616e2030204554482e",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7262:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c",
																"typeString": "literal_string \"Must deposit more than 0 ETH.\""
															},
															"value": "Must deposit more than 0 ETH."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2b231f2703f58492f7e5502c7b287895ee46efd07d2eef0b20fcb01b2a8274c",
																"typeString": "literal_string \"Must deposit more than 0 ETH.\""
															}
														],
														"id": 1337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7239:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7239:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "7239:55:5"
											},
											{
												"assignments": [
													1346
												],
												"declarations": [
													{
														"constant": false,
														"id": 1346,
														"mutability": "mutable",
														"name": "contractEthBalanceBefore",
														"nameLocation": "7309:24:5",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "7304:29:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1345,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7304:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1355,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1349,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7344:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7336:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1347,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7336:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7336:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7350:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "7336:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1352,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7360:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7364:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "7360:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7336:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7304:65:5"
											},
											{
												"assignments": [
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "contractERC20TokenBalance",
														"nameLocation": "7384:25:5",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "7379:30:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1356,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1362,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7441:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7433:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7433:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7433:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1358,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "7412:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7423:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "7412:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7412:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7379:68:5"
											},
											{
												"assignments": [
													1367
												],
												"declarations": [
													{
														"constant": false,
														"id": 1367,
														"mutability": "mutable",
														"name": "contractERC20TokenBalanceAfterSwap",
														"nameLocation": "7462:34:5",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "7457:39:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1366,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7457:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1375,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1368,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "7499:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1369,
																	"name": "contractEthBalanceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "7504:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 1370,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7531:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7535:5:5",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7531:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7504:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1373,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7503:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7499:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7457:84:5"
											},
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1376,
														"name": "ERC20TokenToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "7551:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1377,
															"name": "contractERC20TokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "7570:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1378,
															"name": "contractERC20TokenBalanceAfterSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "7598:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7570:62:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7551:81:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "7551:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1385,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7736:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7740:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7736:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1387,
																	"name": "ERC20TokenToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "7748:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1383,
																	"name": "erc20Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "7716:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$651",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7727:8:5",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 261,
																"src": "7716:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7716:49:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e6420455243323020746f6b656e73",
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7767:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582",
																"typeString": "literal_string \"Failed to send ERC20 tokens\""
															},
															"value": "Failed to send ERC20 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c63b869f6e0d608dd4dfe4c7d912c53dbaae0169b6be156acf8e4b81c6ba582",
																"typeString": "literal_string \"Failed to send ERC20 tokens\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7708:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7708:89:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "7708:89:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1393,
															"name": "ERC20TokenToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "7857:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1394,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7875:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7879:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "7875:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1392,
														"name": "SwapForERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "7839:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7839:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "EmitStatement",
												"src": "7834:51:5"
											},
											{
												"expression": {
													"id": 1398,
													"name": "ERC20TokenToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1335,
													"src": "7903:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1399,
												"nodeType": "Return",
												"src": "7896:23:5"
											}
										]
									},
									"functionSelector": "29cbab3e",
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapForERC20Token",
									"nameLocation": "7162:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:2:5"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "ERC20TokenToSend",
												"nameLocation": "7211:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "7206:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7206:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:23:5"
									},
									"scope": 1482,
									"src": "7153:773:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "8028:427:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "_amountEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "8046:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8059:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8046:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e20302e",
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8062:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff",
																"typeString": "literal_string \"ETH amount must be greater than 0.\""
															},
															"value": "ETH amount must be greater than 0."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0e8f3d74e9043bc04d189adee48b952a2826fdc3719883e2eeee0195124edff",
																"typeString": "literal_string \"ETH amount must be greater than 0.\""
															}
														],
														"id": 1408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8038:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8038:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "8038:61:5"
											},
											{
												"assignments": [
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "contractEthBalance",
														"nameLocation": "8114:18:5",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "8109:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1415,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8109:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1419,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8143:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Exchange_$1482",
																	"typeString": "contract Exchange"
																}
															],
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8135:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8135:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8135:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8149:7:5",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "8135:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8109:47:5"
											},
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "contractERC20TokenBalance",
														"nameLocation": "8171:25:5",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "8166:30:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1423,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8166:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8228:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$1482",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8220:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8220:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8220:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1425,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "8199:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8210:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "8199:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8199:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8166:68:5"
											},
											{
												"assignments": [
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "contractERC20TokenBalanceAfterSwap",
														"nameLocation": "8249:34:5",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "8244:39:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1433,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8244:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1441,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1435,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "8286:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1436,
																	"name": "contractEthBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "8291:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1437,
																	"name": "_amountEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "8312:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8291:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1439,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8290:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8286:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8244:79:5"
											},
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1442,
														"name": "ERC20TokenToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "8333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1443,
															"name": "contractERC20TokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "8352:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1444,
															"name": "contractERC20TokenBalanceAfterSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "8380:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8352:62:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8333:81:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "8333:81:5"
											},
											{
												"expression": {
													"id": 1448,
													"name": "ERC20TokenToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1406,
													"src": "8432:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1407,
												"id": 1449,
												"nodeType": "Return",
												"src": "8425:23:5"
											}
										]
									},
									"functionSelector": "79ed3562",
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateSwapForERC20Token",
									"nameLocation": "7941:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "_amountEth",
												"nameLocation": "7972:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "7967:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7967:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7966:17:5"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "ERC20TokenToSend",
												"nameLocation": "8010:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "8005:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8005:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8004:23:5"
									},
									"scope": 1482,
									"src": "7932:523:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3bca7014f4c0ccc8016338c79f4c00e82068dbadaf4f01ca5449040fdd39f500",
									"id": 1461,
									"name": "LiquidityProvided",
									"nameLocation": "8480:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "8506:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "8498:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8498:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountERC20TokenDeposited",
												"nameLocation": "8521:25:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "8516:30:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8516:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEthDeposited",
												"nameLocation": "8553:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "8548:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8548:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityPositionsIssued",
												"nameLocation": "8578:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "8573:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8573:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8497:106:5"
									},
									"src": "8474:130:5"
								},
								{
									"anonymous": false,
									"eventSelector": "b14f451e613015c13a17c78777f1d87fcb448d7330d67299a09b8f2db38aab10",
									"id": 1469,
									"name": "LiquidityWithdrew",
									"nameLocation": "8615:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountERC20TokenWithdrew",
												"nameLocation": "8638:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "8633:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8633:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEthWithdrew",
												"nameLocation": "8669:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "8664:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8664:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityPositionsBurned",
												"nameLocation": "8693:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "8688:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8688:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:86:5"
									},
									"src": "8609:110:5"
								},
								{
									"anonymous": false,
									"eventSelector": "3297a389bb586920e62a196af529d5f42651b17a1013d6bfe77f22372a0b2112",
									"id": 1475,
									"name": "SwapForEth",
									"nameLocation": "8730:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountERC20TokenDeposited",
												"nameLocation": "8746:25:5",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "8741:30:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8741:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEthWithdrew",
												"nameLocation": "8778:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "8773:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8773:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8740:56:5"
									},
									"src": "8724:73:5"
								},
								{
									"anonymous": false,
									"eventSelector": "cdfc57b3d0cdc24b23cea1f480aabea287321f5bee23ad76c2b52fa7982f5ea5",
									"id": 1481,
									"name": "SwapForERC20Token",
									"nameLocation": "8808:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountERC20TokenWithdrew",
												"nameLocation": "8831:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "8826:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8826:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEthDeposited",
												"nameLocation": "8862:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "8857:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8857:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8825:56:5"
									},
									"src": "8802:80:5"
								}
							],
							"scope": 1483,
							"src": "121:8764:5",
							"usedErrors": []
						}
					],
					"src": "39:8847:5"
				},
				"id": 5
			}
		}
	}
}